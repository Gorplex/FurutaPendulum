ARM GAS  /tmp/cclVzO8U.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"tasks.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.prvTaskIsTaskSuspended,"ax",%progbits
  16              		.align	1
  17              		.arch armv7-m
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	prvTaskIsTaskSuspended:
  24              	.LVL0:
  25              	.LFB598:
  26              		.file 1 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c"
   1:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     FreeRTOS V9.0.0 - Copyright (C) 2016 Real Time Engineers Ltd.
   3:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     All rights reserved
   4:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
   5:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     VISIT http://www.FreeRTOS.org TO ENSURE YOU ARE USING THE LATEST VERSION.
   6:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
   7:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     This file is part of the FreeRTOS distribution.
   8:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
   9:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     FreeRTOS is free software; you can redistribute it and/or modify it under
  10:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     the terms of the GNU General Public License (version 2) as published by the
  11:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     Free Software Foundation >>>> AND MODIFIED BY <<<< the FreeRTOS exception.
  12:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  13:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     ***************************************************************************
  14:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     >>!   NOTE: The modification to the GPL is included to allow you to     !<<
  15:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     >>!   distribute a combined work that includes FreeRTOS without being   !<<
  16:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     >>!   obliged to provide the source code for proprietary components     !<<
  17:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     >>!   outside of the FreeRTOS kernel.                                   !<<
  18:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     ***************************************************************************
  19:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  20:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     FreeRTOS is distributed in the hope that it will be useful, but WITHOUT ANY
  21:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  22:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     FOR A PARTICULAR PURPOSE.  Full license text is available on the following
  23:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     link: http://www.freertos.org/a00114.html
  24:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  25:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     ***************************************************************************
  26:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****      *                                                                       *
  27:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****      *    FreeRTOS provides completely free yet professionally developed,    *
  28:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****      *    robust, strictly quality controlled, supported, and cross          *
  29:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****      *    platform software that is more than just the market leader, it     *
  30:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****      *    is the industry's de facto standard.                               *
  31:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****      *                                                                       *
  32:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****      *    Help yourself get started quickly while simultaneously helping     *
ARM GAS  /tmp/cclVzO8U.s 			page 2


  33:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****      *    to support the FreeRTOS project by purchasing a FreeRTOS           *
  34:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****      *    tutorial book, reference manual, or both:                          *
  35:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****      *    http://www.FreeRTOS.org/Documentation                              *
  36:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****      *                                                                       *
  37:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     ***************************************************************************
  38:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  39:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     http://www.FreeRTOS.org/FAQHelp.html - Having a problem?  Start by reading
  40:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     the FAQ page "My application does not run, what could be wrong?".  Have you
  41:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     defined configASSERT()?
  42:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  43:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     http://www.FreeRTOS.org/support - In return for receiving this top quality
  44:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     embedded software for free we request you assist our global community by
  45:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     participating in the support forum.
  46:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  47:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     http://www.FreeRTOS.org/training - Investing in training allows your team to
  48:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     be as productive as possible as early as possible.  Now you can receive
  49:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     FreeRTOS training directly from Richard Barry, CEO of Real Time Engineers
  50:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     Ltd, and the world's leading authority on the world's leading RTOS.
  51:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  52:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     http://www.FreeRTOS.org/plus - A selection of FreeRTOS ecosystem products,
  53:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     including FreeRTOS+Trace - an indispensable productivity tool, a DOS
  54:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     compatible FAT file system, and our tiny thread aware UDP/IP stack.
  55:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  56:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     http://www.FreeRTOS.org/labs - Where new FreeRTOS products go to incubate.
  57:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     Come and try FreeRTOS+TCP, our new open source TCP/IP stack for FreeRTOS.
  58:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  59:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     http://www.OpenRTOS.com - Real Time Engineers ltd. license FreeRTOS to High
  60:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     Integrity Systems ltd. to sell under the OpenRTOS brand.  Low cost OpenRTOS
  61:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     licenses offer ticketed support, indemnification and commercial middleware.
  62:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  63:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     http://www.SafeRTOS.com - High Integrity Systems also provide a safety
  64:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     engineered and independently SIL3 certified version for use in safety and
  65:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     mission critical applications that require provable dependability.
  66:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  67:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     1 tab == 4 spaces!
  68:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** */
  69:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  70:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Standard includes. */
  71:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include <stdlib.h>
  72:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include <string.h>
  73:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  74:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  75:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** all the API functions to use the MPU wrappers.  That should only be done when
  76:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** task.h is included from an application file. */
  77:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  78:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  79:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* FreeRTOS includes. */
  80:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include "FreeRTOS.h"
  81:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include "task.h"
  82:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include "timers.h"
  83:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include "StackMacros.h"
  84:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  85:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Lint e961 and e750 are suppressed as a MISRA exception justified because the
  86:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined for the
  87:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** header files above, but not in this file, in order to generate the correct
  88:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** privileged Vs unprivileged linkage and placement. */
  89:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750. */
ARM GAS  /tmp/cclVzO8U.s 			page 3


  90:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  91:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Set configUSE_STATS_FORMATTING_FUNCTIONS to 2 to include the stats formatting
  92:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** functions but without including stdio.h here. */
  93:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_STATS_FORMATTING_FUNCTIONS == 1 )
  94:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* At the bottom of this file are two optional functions that can be used
  95:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	to generate human readable text from the raw data generated by the
  96:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uxTaskGetSystemState() function.  Note the formatting functions are provided
  97:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	for convenience only, and are NOT considered part of the kernel. */
  98:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#include <stdio.h>
  99:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_STATS_FORMATTING_FUNCTIONS == 1 ) */
 100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_PREEMPTION == 0 )
 102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If the cooperative scheduler is being used then a yield should not be
 103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	performed just because a higher priority task has been woken. */
 104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskYIELD_IF_USING_PREEMPTION()
 105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #else
 106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskYIELD_IF_USING_PREEMPTION() portYIELD_WITHIN_API()
 107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Values that can be assigned to the ucNotifyState member of the TCB. */
 110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define taskNOT_WAITING_NOTIFICATION	( ( uint8_t ) 0 )
 111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define taskWAITING_NOTIFICATION		( ( uint8_t ) 1 )
 112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define taskNOTIFICATION_RECEIVED		( ( uint8_t ) 2 )
 113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The value used to fill the stack of a task when the task is created.  This
 116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * is used purely for checking the high water mark for tasks.
 117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskSTACK_FILL_BYTE	( 0xa5U )
 119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Sometimes the FreeRTOSConfig.h settings only allow a task to be created using
 121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** dynamically allocated RAM, in which case when any task is deleted it is known
 122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** that both the task's stack and TCB need to be freed.  Sometimes the
 123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** FreeRTOSConfig.h settings only allow a task to be created using statically
 124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** allocated RAM, in which case when any task is deleted it is known that neither
 125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** the task's stack or TCB should be freed.  Sometimes the FreeRTOSConfig.h
 126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** settings allow a task to be created using either statically or dynamically
 127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** allocated RAM, in which case a member of the TCB is used to record whether the
 128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** stack and/or TCB were allocated statically or dynamically, so when a task is
 129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** deleted the RAM that was allocated dynamically is freed again and no attempt is
 130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** made to free the RAM that was allocated statically.
 131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE is only true if it is possible for a
 132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** task to be created using either statically or dynamically allocated RAM.  Note
 133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** that if portUSING_MPU_WRAPPERS is 1 then a protected task can be created with
 134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** a statically allocated stack and a dynamically allocated TCB. */
 135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE ( ( ( configSUPPORT_STATIC_ALLOCATION == 1 ) && (
 136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB 		( ( uint8_t ) 0 )
 137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskSTATICALLY_ALLOCATED_STACK_ONLY 			( ( uint8_t ) 1 )
 138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskSTATICALLY_ALLOCATED_STACK_AND_TCB		( ( uint8_t ) 2 )
 139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Macros used by vListTask to indicate which state a task is in.
 142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskBLOCKED_CHAR		( 'B' )
 144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskREADY_CHAR		( 'R' )
 145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskDELETED_CHAR		( 'D' )
 146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskSUSPENDED_CHAR	( 'S' )
ARM GAS  /tmp/cclVzO8U.s 			page 4


 147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Some kernel aware debuggers require the data the debugger needs access to be
 150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * global, rather than file scope.
 151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #ifdef portREMOVE_STATIC_QUALIFIER
 153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define static
 154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
 157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If configUSE_PORT_OPTIMISED_TASK_SELECTION is 0 then task selection is
 159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	performed in a generic way that is not optimised to any particular
 160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	microcontroller architecture. */
 161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* uxTopReadyPriority holds the priority of the highest priority ready
 163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	state task. */
 164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskRECORD_READY_PRIORITY( uxPriority )														\
 165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{																									\
 166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( uxPriority ) > uxTopReadyPriority )														\
 167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{																								\
 168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxTopReadyPriority = ( uxPriority );														\
 169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}																								\
 170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /* taskRECORD_READY_PRIORITY */
 171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*-----------------------------------------------------------*/
 173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskSELECT_HIGHEST_PRIORITY_TASK()															\
 175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{																									\
 176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTopPriority = uxTopReadyPriority;														\
 177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																										\
 178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Find the highest priority queue that contains ready tasks. */								\
 179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		while( listLIST_IS_EMPTY( &( pxReadyTasksLists[ uxTopPriority ] ) ) )							\
 180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{																								\
 181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( uxTopPriority );																\
 182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			--uxTopPriority;																			\
 183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}																								\
 184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																										\
 185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* listGET_OWNER_OF_NEXT_ENTRY indexes through the list, so the tasks of						\
 186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the	same priority get an equal share of the processor time. */									\
 187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopPriority ] ) );			\
 188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxTopReadyPriority = uxTopPriority;																\
 189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /* taskSELECT_HIGHEST_PRIORITY_TASK */
 190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*-----------------------------------------------------------*/
 192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Define away taskRESET_READY_PRIORITY() and portRESET_READY_PRIORITY() as
 194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	they are only required when a port optimised method of task selection is
 195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	being used. */
 196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskRESET_READY_PRIORITY( uxPriority )
 197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define portRESET_READY_PRIORITY( uxPriority, uxTopReadyPriority )
 198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #else /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If configUSE_PORT_OPTIMISED_TASK_SELECTION is 1 then task selection is
 202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	performed in a way that is tailored to the particular microcontroller
 203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	architecture being used. */
ARM GAS  /tmp/cclVzO8U.s 			page 5


 204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A port optimised version is provided.  Call the port defined macros. */
 206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskRECORD_READY_PRIORITY( uxPriority )	portRECORD_READY_PRIORITY( uxPriority, uxTopReadyP
 207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*-----------------------------------------------------------*/
 209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskSELECT_HIGHEST_PRIORITY_TASK()														\
 211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{																								\
 212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTopPriority;																		\
 213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																									\
 214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Find the highest priority list that contains ready tasks. */								\
 215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portGET_HIGHEST_PRIORITY( uxTopPriority, uxTopReadyPriority );								\
 216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ uxTopPriority ] ) ) > 0 );		\
 217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopPriority ] ) );		\
 218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /* taskSELECT_HIGHEST_PRIORITY_TASK() */
 219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*-----------------------------------------------------------*/
 221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A port optimised version is provided, call it only if the TCB being reset
 223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	is being referenced from a ready list.  If it is referenced from a delayed
 224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	or suspended list then it won't be in a ready list. */
 225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskRESET_READY_PRIORITY( uxPriority )														\
 226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{																									\
 227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ ( uxPriority ) ] ) ) == ( UBaseType_t ) 0 )	\
 228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{																								\
 229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			portRESET_READY_PRIORITY( ( uxPriority ), ( uxTopReadyPriority ) );							\
 230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}																								\
 231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* pxDelayedTaskList and pxOverflowDelayedTaskList are switched when the tick
 238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** count overflows. */
 239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define taskSWITCH_DELAYED_LISTS()																	\
 240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {																									\
 241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	List_t *pxTemp;																					\
 242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																									\
 243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* The delayed tasks list should be empty when the lists are switched. */						\
 244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( ( listLIST_IS_EMPTY( pxDelayedTaskList ) ) );										\
 245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																									\
 246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTemp = pxDelayedTaskList;																		\
 247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxDelayedTaskList = pxOverflowDelayedTaskList;													\
 248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxOverflowDelayedTaskList = pxTemp;																\
 249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xNumOfOverflows++;																				\
 250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvResetNextTaskUnblockTime();																	\
 251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Place the task represented by pxTCB into the appropriate ready list for
 257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * the task.  It is inserted at the end of the list.
 258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define prvAddTaskToReadyList( pxTCB )																\
 260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	traceMOVED_TASK_TO_READY_STATE( pxTCB );														\
ARM GAS  /tmp/cclVzO8U.s 			page 6


 261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskRECORD_READY_PRIORITY( ( pxTCB )->uxPriority );												\
 262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInsertEnd( &( pxReadyTasksLists[ ( pxTCB )->uxPriority ] ), &( ( pxTCB )->xStateListItem ) );
 263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	tracePOST_MOVED_TASK_TO_READY_STATE( pxTCB )
 264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Several functions take an TaskHandle_t parameter that can optionally be NULL,
 268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * where NULL is used to indicate that the handle of the currently executing
 269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * task should be used in place of the parameter.  This macro simply checks to
 270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * see if the parameter is NULL and returns a pointer to the appropriate TCB.
 271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define prvGetTCBFromHandle( pxHandle ) ( ( ( pxHandle ) == NULL ) ? ( TCB_t * ) pxCurrentTCB : ( T
 273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* The item value of the event list item is normally used to hold the priority
 275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** of the task to which it belongs (coded to allow it to be held in reverse
 276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** priority order).  However, it is occasionally borrowed for other purposes.  It
 277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** is important its value is not updated due to a task priority change while it is
 278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** being used for another purpose.  The following bit definition is used to inform
 279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** the scheduler that the value should not be changed - in which case it is the
 280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** responsibility of whichever module is using the value to ensure it gets set back
 281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** to its original value when it is released. */
 282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_16_BIT_TICKS == 1 )
 283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskEVENT_LIST_ITEM_VALUE_IN_USE	0x8000U
 284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #else
 285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskEVENT_LIST_ITEM_VALUE_IN_USE	0x80000000UL
 286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 288:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Task control block.  A task control block (TCB) is allocated for each task,
 290:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * and stores task state information, including a pointer to the task's context
 291:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * (the task's run time environment, including register values)
 292:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 293:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** typedef struct tskTaskControlBlock
 294:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	volatile StackType_t	*pxTopOfStack;	/*< Points to the location of the last item placed on the task
 296:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 297:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( portUSING_MPU_WRAPPERS == 1 )
 298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xMPU_SETTINGS	xMPUSettings;		/*< The MPU settings are defined as part of the port layer.  THIS MU
 299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	ListItem_t			xStateListItem;	/*< The list that the state list item of a task is reference from den
 302:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	ListItem_t			xEventListItem;		/*< Used to reference a task from an event list. */
 303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t			uxPriority;			/*< The priority of the task.  0 is the lowest priority. */
 304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	StackType_t			*pxStack;			/*< Points to the start of the stack. */
 305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	char				pcTaskName[ configMAX_TASK_NAME_LEN ];/*< Descriptive name given to the task when created.
 306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( portSTACK_GROWTH > 0 )
 308:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StackType_t		*pxEndOfStack;		/*< Points to the end of the stack on architectures where the stack 
 309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 310:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( portCRITICAL_NESTING_IN_TCB == 1 )
 312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxCriticalNesting;	/*< Holds the critical section nesting depth for ports that do no
 313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxTCBNumber;		/*< Stores a number that increments each time a TCB is created.  It al
 317:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxTaskNumber;		/*< Stores a number specifically for use by third party trace code. *
ARM GAS  /tmp/cclVzO8U.s 			page 7


 318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 319:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxBasePriority;		/*< The priority last assigned to the task - used by the priority i
 322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxMutexesHeld;
 323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 324:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 325:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_APPLICATION_TASK_TAG == 1 )
 326:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		TaskHookFunction_t pxTaskTag;
 327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 329:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configNUM_THREAD_LOCAL_STORAGE_POINTERS > 0 )
 330:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		void *pvThreadLocalStoragePointers[ configNUM_THREAD_LOCAL_STORAGE_POINTERS ];
 331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 332:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configGENERATE_RUN_TIME_STATS == 1 )
 334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint32_t		ulRunTimeCounter;	/*< Stores the amount of time the task has spent in the Running state
 335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 336:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_NEWLIB_REENTRANT == 1 )
 338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Allocate a Newlib reent structure that is specific to this task.
 339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Note Newlib support has been included by popular demand, but is not
 340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		used by the FreeRTOS maintainers themselves.  FreeRTOS is not
 341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		responsible for resulting newlib operation.  User must be familiar with
 342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		newlib and must provide system-wide implementations of the necessary
 343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		stubs. Be warned that (at the time of writing) the current newlib design
 344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		implements a system-wide malloc() that must be provided with locks. */
 345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		struct	_reent xNewLib_reent;
 346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configUSE_TASK_NOTIFICATIONS == 1 )
 349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		volatile uint32_t ulNotifiedValue;
 350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		volatile uint8_t ucNotifyState;
 351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 353:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* See the comments above the definition of
 354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE. */
 355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 )
 356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint8_t	ucStaticallyAllocated; 		/*< Set to pdTRUE if the task is a statically allocated to ensur
 357:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 358:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
 360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint8_t ucDelayAborted;
 361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** } tskTCB;
 364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* The old tskTCB name is maintained above then typedefed to the new TCB_t name
 366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** below to enable the use of older kernel aware debuggers. */
 367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** typedef tskTCB TCB_t;
 368:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 369:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*lint -e956 A manual analysis and inspection has been used to determine which
 370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static variables must be declared volatile. */
 371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 372:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA TCB_t * volatile pxCurrentTCB = NULL;
 373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Lists for ready and blocked tasks. --------------------*/
ARM GAS  /tmp/cclVzO8U.s 			page 8


 375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t pxReadyTasksLists[ configMAX_PRIORITIES ];/*< Prioritised ready tasks
 376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t xDelayedTaskList1;						/*< Delayed tasks. */
 377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t xDelayedTaskList2;						/*< Delayed tasks (two lists are used - one f
 378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t * volatile pxDelayedTaskList;				/*< Points to the delayed task list 
 379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t * volatile pxOverflowDelayedTaskList;		/*< Points to the delayed task
 380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t xPendingReadyList;						/*< Tasks that have been readied while the sc
 381:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( INCLUDE_vTaskDelete == 1 )
 383:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static List_t xTasksWaitingTermination;				/*< Tasks that have been deleted - but 
 385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static volatile UBaseType_t uxDeletedTasksWaitingCleanUp = ( UBaseType_t ) 0U;
 386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 388:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static List_t xSuspendedTaskList;					/*< Tasks that are currently suspended. */
 392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 394:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Other file private variables. --------------------------------*/
 396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxCurrentNumberOfTasks 	= ( UBaseType_t ) 0U;
 397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xTickCount 				= ( TickType_t ) 0U;
 398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxTopReadyPriority 		= tskIDLE_PRIORITY;
 399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xSchedulerRunning 		= pdFALSE;
 400:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxPendedTicks 			= ( UBaseType_t ) 0U;
 401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xYieldPending 			= pdFALSE;
 402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xNumOfOverflows 			= ( BaseType_t ) 0;
 403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static UBaseType_t uxTaskNumber 					= ( UBaseType_t ) 0U;
 404:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xNextTaskUnblockTime		= ( TickType_t ) 0U; /* Initialise
 405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static TaskHandle_t xIdleTaskHandle					= NULL;			/*< Holds the handle of the idle 
 406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Context switches are held pending while the scheduler is suspended.  Also,
 408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** interrupts must not manipulate the xStateListItem of a TCB, or any of the
 409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** lists the xStateListItem can be referenced from, if the scheduler is suspended.
 410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** If an interrupt needs to unblock a task while the scheduler is suspended then it
 411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** moves the task's event list item into the xPendingReadyList, ready for the
 412:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** kernel to move the task from the pending ready list into the real ready list
 413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** when the scheduler is unsuspended.  The pending ready list itself can only be
 414:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** accessed from a critical section. */
 415:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxSchedulerSuspended	= ( UBaseType_t ) pdFALSE;
 416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 417:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configGENERATE_RUN_TIME_STATS == 1 )
 418:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static uint32_t ulTaskSwitchedInTime = 0UL;	/*< Holds the value of a timer/counter
 420:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static uint32_t ulTotalRunTime = 0UL;		/*< Holds the total amount of execution tim
 421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 422:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*lint +e956 */
 425:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 426:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 428:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Callback function prototypes. --------------------------*/
 429:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if(  configCHECK_FOR_STACK_OVERFLOW > 0 )
 430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	extern void vApplicationStackOverflowHook( TaskHandle_t xTask, char *pcTaskName );
 431:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
ARM GAS  /tmp/cclVzO8U.s 			page 9


 432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 433:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TICK_HOOK > 0 )
 434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	extern void vApplicationTickHook( void );
 435:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 437:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	extern void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxI
 439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* File private functions. --------------------------------*/
 442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /**
 444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Utility task that simply returns pdTRUE if the task referenced by xTask is
 445:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * currently in the Suspended state, or pdFALSE if the task referenced by xTask
 446:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * is in any other state.
 447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static BaseType_t prvTaskIsTaskSuspended( const TaskHandle_t xTask ) PRIVILEGED_FUNCTION;
 450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
 451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Utility to ready all the lists used by the scheduler.  This is called
 454:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * automatically upon the creation of the first task.
 455:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvInitialiseTaskLists( void ) PRIVILEGED_FUNCTION;
 457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 459:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The idle task, which as all tasks is implemented as a never ending loop.
 460:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The idle task is automatically created and added to the ready lists upon
 461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * creation of the first user task.
 462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The portTASK_FUNCTION_PROTO() macro is used to allow port/compiler specific
 464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * language extensions.  The equivalent prototype for this function is:
 465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * void prvIdleTask( void *pvParameters );
 467:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 468:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static portTASK_FUNCTION_PROTO( prvIdleTask, pvParameters );
 470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 471:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 472:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Utility to free all memory allocated by the scheduler to hold a TCB,
 473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * including the stack pointed to by the TCB.
 474:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * This does not free memory allocated by the task itself (i.e. memory
 476:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * allocated by calls to pvPortMalloc from within the tasks application code).
 477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
 479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static void prvDeleteTCB( TCB_t *pxTCB ) PRIVILEGED_FUNCTION;
 481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Used only by the idle task.  This checks to see if anything has been placed
 486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * in the list of tasks waiting to be deleted.  If so the task is cleaned up
 487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * and its TCB deleted.
 488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
ARM GAS  /tmp/cclVzO8U.s 			page 10


 489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvCheckTasksWaitingTermination( void ) PRIVILEGED_FUNCTION;
 490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The currently executing task is entering the Blocked state.  Add the task to
 493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * either the current or the overflow delayed task list.
 494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockInde
 496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 497:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Fills an TaskStatus_t structure with information on each task that is
 499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * referenced from the pxList list (which may be a ready list, a delayed list,
 500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * a suspended list, etc.).
 501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * THIS FUNCTION IS INTENDED FOR DEBUGGING ONLY, AND SHOULD NOT BE CALLED FROM
 503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * NORMAL APPLICATION CODE.
 504:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
 506:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static UBaseType_t prvListTasksWithinSingleList( TaskStatus_t *pxTaskStatusArray, List_t *pxList, 
 508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 511:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 512:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Searches pxList for a task with name pcNameToQuery - returning a handle to
 513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * the task if it is found, or NULL if the task is not found.
 514:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
 516:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static TCB_t *prvSearchForNameWithinSingleList( List_t *pxList, const char pcNameToQuery[] ) PRIVI
 518:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 522:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * When a task is created, the stack of the task is filled with a known value.
 523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * This function determines the 'high water mark' of the task stack by
 524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * determining how much of the stack remains at the original preset value.
 525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) )
 527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static uint16_t prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte ) PRIVILEGED_FUNCTION;
 529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Return the amount of time, in ticks, that will pass before the kernel will
 534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * next move a task from the Blocked state to the Running state.
 535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * This conditional compilation should use inequality to 0, not equality to 1.
 537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * This is to ensure portSUPPRESS_TICKS_AND_SLEEP() can be called when user
 538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * defined low power mode implementations require configUSE_TICKLESS_IDLE to be
 539:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * set to a value other than 1.
 540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
 542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static TickType_t prvGetExpectedIdleTime( void ) PRIVILEGED_FUNCTION;
 544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
ARM GAS  /tmp/cclVzO8U.s 			page 11


 546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Set xNextTaskUnblockTime to the time at which the next Blocked state task
 549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * will exit the Blocked state.
 550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 551:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvResetNextTaskUnblockTime( void );
 552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
 554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*
 556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	 * Helper function used to pad task names with spaces when printing out
 557:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	 * human readable tables of task information.
 558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	 */
 559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static char *prvWriteNameToBuffer( char *pcBuffer, const char *pcTaskName ) PRIVILEGED_FUNCTION;
 560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Called after a Task_t structure has been allocated either statically or
 565:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * dynamically to fill in the structure's members.
 566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const char * const pcName,
 569:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const uint32_t ulStackDepth,
 570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									void * const pvParameters,
 571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									UBaseType_t uxPriority,
 572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									TaskHandle_t * const pxCreatedTask,
 573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									TCB_t *pxNewTCB,
 574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const MemoryRegion_t * const xRegions ) PRIVILEGED_FUNCTION; /*lint !e971 Unqualified char
 575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Called after a new task has been created and initialised to place the task
 578:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * under the control of the scheduler.
 579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB ) PRIVILEGED_FUNCTION;
 581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 583:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xTaskCreateStatic(	TaskFunction_t pxTaskCode,
 587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const char * const pcName,
 588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const uint32_t ulStackDepth,
 589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									void * const pvParameters,
 590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									UBaseType_t uxPriority,
 591:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									StackType_t * const puxStackBuffer,
 592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									StaticTask_t * const pxTaskBuffer ) /*lint !e971 Unqualified char types are allowed for st
 593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xReturn;
 596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( puxStackBuffer != NULL );
 598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( pxTaskBuffer != NULL ) && ( puxStackBuffer != NULL ) )
 601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The memory used for the task's TCB and stack are passed into this
ARM GAS  /tmp/cclVzO8U.s 			page 12


 603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			function - use them. */
 604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pxTaskBuffer; /*lint !e740 Unusual cast is ok as the structures are desig
 605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 )
 608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
 610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task was created statically in case the task is later deleted. */
 611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNe
 616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
 619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = NULL;
 621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* SUPPORT_STATIC_ALLOCATION */
 627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 629:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( portUSING_MPU_WRAPPERS == 1 )
 630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskCreateRestricted( const TaskParameters_t * const pxTaskDefinition, TaskHandle_t *p
 632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 633:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskDefinition->puxStackBuffer );
 637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTaskDefinition->puxStackBuffer != NULL )
 639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends
 641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			on the implementation of the port malloc function and whether or
 642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			not static allocation is being used. */
 643:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
 644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxNewTCB != NULL )
 646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Store the stack location in the TCB. */
 648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->pxStack = pxTaskDefinition->puxStackBuffer;
 649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note
 651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				this task had a statically allocated stack in case it is
 652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				later deleted.  The TCB was allocated dynamically. */
 653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_ONLY;
 654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvInitialiseNewTask(	pxTaskDefinition->pvTaskCode,
 656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxTaskDefinition->pcName,
 657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										( uint32_t ) pxTaskDefinition->usStackDepth,
 658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxTaskDefinition->pvParameters,
 659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxTaskDefinition->uxPriority,
ARM GAS  /tmp/cclVzO8U.s 			page 13


 660:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxCreatedTask, pxNewTCB,
 661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxTaskDefinition->xRegions );
 662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddNewTaskToReadyList( pxNewTCB );
 664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
 665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* portUSING_MPU_WRAPPERS */
 672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskCreate(	TaskFunction_t pxTaskCode,
 677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							const char * const pcName,
 678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							const uint16_t usStackDepth,
 679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							void * const pvParameters,
 680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							UBaseType_t uxPriority,
 681:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							TaskHandle_t * const pxCreatedTask ) /*lint !e971 Unqualified char types are allowed for str
 682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 686:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the stack grows down then allocate the stack then the TCB so the stack
 687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		does not grow into the TCB.  Likewise if the stack grows up then allocate
 688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the TCB then the stack. */
 689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( portSTACK_GROWTH > 0 )
 690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends on
 692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the implementation of the port malloc function and whether or not static
 693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			allocation is being used. */
 694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
 695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxNewTCB != NULL )
 697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Allocate space for the stack used by the task being created.
 699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				The base of the stack memory stored in the TCB so the task can
 700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				be deleted later if required. */
 701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->pxStack = ( StackType_t * ) pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( Sta
 702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxNewTCB->pxStack == NULL )
 704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Could not allocate the stack.  Delete the allocated TCB. */
 706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vPortFree( pxNewTCB );
 707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxNewTCB = NULL;
 708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else /* portSTACK_GROWTH */
 712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StackType_t *pxStack;
 714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Allocate space for the stack used by the task being created. */
 716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxStack = ( StackType_t * ) pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) 
ARM GAS  /tmp/cclVzO8U.s 			page 14


 717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxStack != NULL )
 719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Allocate space for the TCB. */
 721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e961 MISRA exception as the cas
 722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxNewTCB != NULL )
 724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Store the stack location in the TCB. */
 726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxNewTCB->pxStack = pxStack;
 727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
 729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The stack cannot be used as the TCB was not created.  Free
 731:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					it again. */
 732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vPortFree( pxStack );
 733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
 736:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB = NULL;
 738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* portSTACK_GROWTH */
 741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxNewTCB != NULL )
 743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 )
 745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
 747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task was created dynamically in case it is later deleted. */
 748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 749:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif /* configSUPPORT_STATIC_ALLOCATION */
 751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, p
 753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdPASS;
 755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
 757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const char * const pcName,
 769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const uint32_t ulStackDepth,
 770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									void * const pvParameters,
 771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									UBaseType_t uxPriority,
 772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									TaskHandle_t * const pxCreatedTask,
 773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									TCB_t *pxNewTCB,
ARM GAS  /tmp/cclVzO8U.s 			page 15


 774:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const MemoryRegion_t * const xRegions ) /*lint !e971 Unqualified char types are allowed fo
 775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** StackType_t *pxTopOfStack;
 777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t x;
 778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( portUSING_MPU_WRAPPERS == 1 )
 780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Should the task be created in privileged mode? */
 781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		BaseType_t xRunPrivileged;
 782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( uxPriority & portPRIVILEGE_BIT ) != 0U )
 783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xRunPrivileged = pdTRUE;
 785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
 787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xRunPrivileged = pdFALSE;
 789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxPriority &= ~portPRIVILEGE_BIT;
 791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* portUSING_MPU_WRAPPERS == 1 */
 792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Avoid dependency on memset() if it is not required. */
 794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( ( configCHECK_FOR_STACK_OVERFLOW > 1 ) || ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTa
 795:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Fill the stack with a known value to assist debugging. */
 797:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof(
 798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* ( ( configCHECK_FOR_STACK_OVERFLOW > 1 ) || ( ( configUSE_TRACE_FACILITY == 1 ) || ( INC
 800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Calculate the top of stack address.  This depends on whether the stack
 802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	grows from high memory to low (as per the 80x86) or vice versa.
 803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portSTACK_GROWTH is used to make the result positive or negative as required
 804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	by the port. */
 805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( portSTACK_GROWTH < 0 )
 806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = pxNewTCB->pxStack + ( ulStackDepth - ( uint32_t ) 1 );
 808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Check the alignment of the calculated top of stack is correct. */
 811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack & ( portPOINTER_SIZE_TYPE ) portBYTE_ALI
 812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else /* portSTACK_GROWTH */
 814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = pxNewTCB->pxStack;
 816:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Check the alignment of the stack buffer is correct. */
 818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( ( ( portPOINTER_SIZE_TYPE ) pxNewTCB->pxStack & ( portPOINTER_SIZE_TYPE ) portBYT
 819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The other extreme of the stack space is required if stack checking is
 821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		performed. */
 822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pxEndOfStack = pxNewTCB->pxStack + ( ulStackDepth - ( uint32_t ) 1 );
 823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* portSTACK_GROWTH */
 825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Store the task name in the TCB. */
 827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 830:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cclVzO8U.s 			page 16


 831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Don't copy all configMAX_TASK_NAME_LEN if the string is shorter than
 832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configMAX_TASK_NAME_LEN characters just in case the memory after the
 833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		string is not accessible (extremely unlikely). */
 834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pcName[ x ] == 0x00 )
 835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			break;
 837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
 839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 840:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
 841:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 844:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Ensure the name string is terminated in the case that the string length
 845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	was greater or equal to configMAX_TASK_NAME_LEN. */
 846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* This is used as an array index so must ensure it's not too large.  First
 849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	remove the privilege bit if one is present. */
 850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
 853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 854:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
 855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
 857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxNewTCB->uxPriority = uxPriority;
 860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxBasePriority = uxPriority;
 863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxMutexesHeld = 0;
 864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configUSE_MUTEXES */
 866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 869:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Set the pxNewTCB as a link back from the ListItem_t.  This is so we can get
 871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	back to	the containing TCB from a generic item in a list. */
 872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 873:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Event lists are always in priority order. */
 875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( Ti
 876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( portCRITICAL_NESTING_IN_TCB == 1 )
 879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 880:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxCriticalNesting = ( UBaseType_t ) 0U;
 881:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 882:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* portCRITICAL_NESTING_IN_TCB */
 883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_APPLICATION_TASK_TAG == 1 )
 885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 886:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pxTaskTag = NULL;
 887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
ARM GAS  /tmp/cclVzO8U.s 			page 17


 888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configUSE_APPLICATION_TASK_TAG */
 889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configGENERATE_RUN_TIME_STATS == 1 )
 891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ulRunTimeCounter = 0UL;
 893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configGENERATE_RUN_TIME_STATS */
 895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( portUSING_MPU_WRAPPERS == 1 )
 897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vPortStoreTaskMPUSettings( &( pxNewTCB->xMPUSettings ), xRegions, pxNewTCB->pxStack, ulStackDepth
 899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else
 901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Avoid compiler warning about unreferenced parameter. */
 903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xRegions;
 904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
 908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		for( x = 0; x < ( UBaseType_t ) configNUM_THREAD_LOCAL_STORAGE_POINTERS; x++ )
 910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pvThreadLocalStoragePointers[ x ] = NULL;
 912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_TASK_NOTIFICATIONS == 1 )
 917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ulNotifiedValue = 0;
 919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_NEWLIB_REENTRANT == 1 )
 924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Initialise this task's Newlib reent structure. */
 926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
 931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ucDelayAborted = pdFALSE;
 933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Initialize the TCB stack to look as if the task was already running,
 937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	but had been interrupted by the scheduler.  The return address is set
 938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	to the start of the task function. Once the stack has been initialised
 939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the	top of stack variable is updated. */
 940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( portUSING_MPU_WRAPPERS == 1 )
 941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters, xRunPrivi
 943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else /* portUSING_MPU_WRAPPERS */
ARM GAS  /tmp/cclVzO8U.s 			page 18


 945:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* portUSING_MPU_WRAPPERS */
 949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( ( void * ) pxCreatedTask != NULL )
 951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Pass the handle out in an anonymous way.  The handle can be used to
 953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		change the created task's priority, delete the created task, etc.*/
 954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 956:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
 957:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
 959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
 964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Ensure interrupts don't access the task lists while the lists are being
 966:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	updated. */
 967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxCurrentNumberOfTasks++;
 970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB == NULL )
 971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* There are no other tasks, or all the other tasks are in
 973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the suspended state - make this the current task. */
 974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxCurrentTCB = pxNewTCB;
 975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* This is the first task to be created so do the preliminary
 979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				initialisation required.  We will not recover if this call
 980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				fails, but we will report the failure. */
 981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvInitialiseTaskLists();
 982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
 984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 985:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
 986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
 989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the scheduler is not already running, make this task the
 991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			current task if it is the highest priority task to be created
 992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			so far. */
 993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xSchedulerRunning == pdFALSE )
 994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB = pxNewTCB;
 998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
ARM GAS  /tmp/cclVzO8U.s 			page 19


1002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxTaskNumber++;
1011:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_TRACE_FACILITY == 1 )
1013:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1014:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Add a counter into the TCB for tracing only. */
1015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->uxTCBNumber = uxTaskNumber;
1016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_TRACE_FACILITY */
1018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_CREATE( pxNewTCB );
1019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddTaskToReadyList( pxNewTCB );
1021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portSETUP_TCB( pxNewTCB );
1023:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskEXIT_CRITICAL();
1025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1026:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( xSchedulerRunning != pdFALSE )
1027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the created task is of a higher priority than the current task
1029:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		then it should run now. */
1030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
1031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskYIELD_IF_USING_PREEMPTION();
1033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1035:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1037:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1038:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
1040:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
1042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
1044:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
1047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1048:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskDelete( TaskHandle_t xTaskToDelete )
1049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
1051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
1053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the calling task that is
1055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			being deleted. */
1056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToDelete );
1057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Remove task from the ready list. */
ARM GAS  /tmp/cclVzO8U.s 			page 20


1059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskRESET_READY_PRIORITY( pxTCB->uxPriority );
1062:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Is the task waiting on an event also? */
1069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
1070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
1072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1073:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Increment the uxTaskNumber also so kernel aware debuggers can
1079:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			detect that the task lists need re-generating.  This is done before
1080:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			portPRE_TASK_DELETE_HOOK() as in the Windows port that macro will
1081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			not return. */
1082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxTaskNumber++;
1083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
1085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1086:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A task is deleting itself.  This cannot complete within the
1087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task itself, as a context switch to another task is required.
1088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				Place the task in the termination list.  The idle task will
1089:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				check the termination list and free up any memory allocated by
1090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the scheduler for the TCB and stack of the deleted task. */
1091:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vListInsertEnd( &xTasksWaitingTermination, &( pxTCB->xStateListItem ) );
1092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Increment the ucTasksDeleted variable so the idle task knows
1094:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				there is a task that has been deleted and that it should therefore
1095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				check the xTasksWaitingTermination list. */
1096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				++uxDeletedTasksWaitingCleanUp;
1097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1098:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The pre-delete hook is primarily for the Windows simulator,
1099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				in which Windows specific clean up operations are performed,
1100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				after which it is not possible to yield away from this task -
1101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				hence xYieldPending is used to latch that a context switch is
1102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				required. */
1103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portPRE_TASK_DELETE_HOOK( pxTCB, &xYieldPending );
1104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxCurrentNumberOfTasks;
1108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvDeleteTCB( pxTCB );
1109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Reset the next expected unblock time in case it referred to
1111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the task that has just been deleted. */
1112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvResetNextTaskUnblockTime();
1113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_DELETE( pxTCB );
ARM GAS  /tmp/cclVzO8U.s 			page 21


1116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
1118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Force a reschedule if it is the currently running task that has just
1120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been deleted. */
1121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
1122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
1124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( uxSchedulerSuspended == 0 );
1126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
1127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelete */
1136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelayUntil == 1 )
1139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskDelayUntil( TickType_t * const pxPreviousWakeTime, const TickType_t xTimeIncrement )
1141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TickType_t xTimeToWake;
1143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xAlreadyYielded, xShouldDelay = pdFALSE;
1144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxPreviousWakeTime );
1146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( xTimeIncrement > 0U ) );
1147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( uxSchedulerSuspended == 0 );
1148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vTaskSuspendAll();
1150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Minor optimisation.  The tick count cannot change in this
1152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			block. */
1153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			const TickType_t xConstTickCount = xTickCount;
1154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Generate the tick time at which the task wants to wake. */
1156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTimeToWake = *pxPreviousWakeTime + xTimeIncrement;
1157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xConstTickCount < *pxPreviousWakeTime )
1159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The tick count has overflowed since this function was
1161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				lasted called.  In this case the only time we should ever
1162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				actually delay is if the wake time has also	overflowed,
1163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				and the wake time is greater than the tick time.  When this
1164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				is the case it is as if neither time had overflowed. */
1165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( ( xTimeToWake < *pxPreviousWakeTime ) && ( xTimeToWake > xConstTickCount ) )
1166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xShouldDelay = pdTRUE;
1168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
ARM GAS  /tmp/cclVzO8U.s 			page 22


1173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The tick time has not overflowed.  In this case we will
1177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				delay if either the wake time has overflowed, and/or the
1178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				tick time is less than the wake time. */
1179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( ( xTimeToWake < *pxPreviousWakeTime ) || ( xTimeToWake > xConstTickCount ) )
1180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xShouldDelay = pdTRUE;
1182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Update the wake time ready for the next call. */
1190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			*pxPreviousWakeTime = xTimeToWake;
1191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xShouldDelay != pdFALSE )
1193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_DELAY_UNTIL( xTimeToWake );
1195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* prvAddCurrentTaskToDelayedList() needs the block time, not
1197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the time to wake, so subtract the current tick count. */
1198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddCurrentTaskToDelayedList( xTimeToWake - xConstTickCount, pdFALSE );
1199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xAlreadyYielded = xTaskResumeAll();
1206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Force a reschedule if xTaskResumeAll has not already done so, we may
1208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		have put ourselves to sleep. */
1209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xAlreadyYielded == pdFALSE )
1210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			portYIELD_WITHIN_API();
1212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelayUntil */
1220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelay == 1 )
1223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskDelay( const TickType_t xTicksToDelay )
1225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xAlreadyYielded = pdFALSE;
1227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* A delay time of zero just forces a reschedule. */
1229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTicksToDelay > ( TickType_t ) 0U )
ARM GAS  /tmp/cclVzO8U.s 			page 23


1230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( uxSchedulerSuspended == 0 );
1232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
1233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_DELAY();
1235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A task that is removed from the event list while the
1237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				scheduler is suspended will not get placed in the ready
1238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				list or removed from the blocked list until the scheduler
1239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				is resumed.
1240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				This task cannot be in an event list as it is the currently
1242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				executing task. */
1243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
1244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xAlreadyYielded = xTaskResumeAll();
1246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Force a reschedule if xTaskResumeAll has not already done so, we may
1253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		have put ourselves to sleep. */
1254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xAlreadyYielded == pdFALSE )
1255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			portYIELD_WITHIN_API();
1257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelay */
1265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( ( INCLUDE_eTaskGetState == 1 ) || ( configUSE_TRACE_FACILITY == 1 ) )
1268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	eTaskState eTaskGetState( TaskHandle_t xTask )
1270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	eTaskState eReturn;
1272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	List_t *pxStateList;
1273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
1274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTCB );
1276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTCB == pxCurrentTCB )
1278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The task calling this function is querying its own state. */
1280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			eReturn = eRunning;
1281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskENTER_CRITICAL();
1285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxStateList = ( List_t * ) listLIST_ITEM_CONTAINER( &( pxTCB->xStateListItem ) );
ARM GAS  /tmp/cclVzO8U.s 			page 24


1287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1288:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskEXIT_CRITICAL();
1289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1290:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ( pxStateList == pxDelayedTaskList ) || ( pxStateList == pxOverflowDelayedTaskList ) )
1291:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1292:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The task being queried is referenced from one of the Blocked
1293:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				lists. */
1294:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				eReturn = eBlocked;
1295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1296:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1297:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( INCLUDE_vTaskSuspend == 1 )
1298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else if( pxStateList == &xSuspendedTaskList )
1299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task being queried is referenced from the suspended
1301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					list.  Is it genuinely suspended or is it block
1302:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					indefinitely? */
1303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL )
1304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						eReturn = eSuspended;
1306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1308:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						eReturn = eBlocked;
1310:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
1313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( INCLUDE_vTaskDelete == 1 )
1315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else if( ( pxStateList == &xTasksWaitingTermination ) || ( pxStateList == NULL ) )
1316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1317:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task being queried is referenced from the deleted
1318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					tasks list, or it is not referenced from any lists at
1319:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					all. */
1320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					eReturn = eDeleted;
1321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
1323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1324:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else /*lint !e525 Negative indentation is intended to make use of pre-processor clearer. */
1325:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1326:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If the task is not in any other state, it must be in the
1327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				Ready (including pending ready) state. */
1328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				eReturn = eReady;
1329:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1330:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1332:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return eReturn;
1333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
1334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_eTaskGetState */
1336:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
1339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskPriorityGet( TaskHandle_t xTask )
1341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
1343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn;
ARM GAS  /tmp/cclVzO8U.s 			page 25


1344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
1346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the priority of the that
1348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			called uxTaskPriorityGet() that is being queried. */
1349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
1351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
1353:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxReturn;
1355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1357:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_uxTaskPriorityGet */
1358:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
1361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskPriorityGetFromISR( TaskHandle_t xTask )
1363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
1365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn, uxSavedInterruptState;
1366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
1368:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
1369:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
1370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
1371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
1372:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
1373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
1375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been assigned a priority above the configured maximum system call
1376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
1377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
1378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
1379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
1380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
1381:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		provided on the following link:
1382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1383:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptState = portSET_INTERRUPT_MASK_FROM_ISR();
1386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the priority of the calling
1388:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task that is being queried. */
1389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
1391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptState );
1393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1394:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxReturn;
1395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_uxTaskPriorityGet */
1398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1400:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskPrioritySet == 1 )
ARM GAS  /tmp/cclVzO8U.s 			page 26


1401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskPrioritySet( TaskHandle_t xTask, UBaseType_t uxNewPriority )
1403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1404:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
1405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxCurrentBasePriority, uxPriorityUsedOnEntry;
1406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
1407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( uxNewPriority < configMAX_PRIORITIES ) );
1409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Ensure the new priority is valid. */
1411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( uxNewPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
1412:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxNewPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
1414:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1415:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1417:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1418:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1420:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
1421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1422:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the priority of the calling
1423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task that is being changed. */
1424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1425:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1426:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_PRIORITY_SET( pxTCB, uxNewPriority );
1427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1428:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( configUSE_MUTEXES == 1 )
1429:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxCurrentBasePriority = pxTCB->uxBasePriority;
1431:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#else
1433:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxCurrentBasePriority = pxTCB->uxPriority;
1435:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
1437:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxCurrentBasePriority != uxNewPriority )
1439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The priority change may have readied a task of higher
1441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				priority than the calling task. */
1442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( uxNewPriority > uxCurrentBasePriority )
1443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB != pxCurrentTCB )
1445:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1446:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* The priority of a task other than the currently
1447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						running task is being raised.  Is the priority being
1448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						raised above that of the running task? */
1449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						if( uxNewPriority >= pxCurrentTCB->uxPriority )
1450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
1451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							xYieldRequired = pdTRUE;
1452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
1453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						else
1454:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
1455:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
1456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
1457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
ARM GAS  /tmp/cclVzO8U.s 			page 27


1458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1459:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1460:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* The priority of the running task is being raised,
1461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						but the running task must already be the highest
1462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						priority task able to run so no yield is required. */
1463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else if( pxTCB == pxCurrentTCB )
1466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1467:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Setting the priority of the running task down means
1468:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					there may now be another task of higher priority that
1469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					is ready to execute. */
1470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xYieldRequired = pdTRUE;
1471:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1472:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1474:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Setting the priority of any other task down does not
1475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					require a yield as the running task must be above the
1476:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					new priority of the task being modified. */
1477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Remember the ready list the task might be referenced from
1480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				before its uxPriority member is changed so the
1481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskRESET_READY_PRIORITY() macro can function correctly. */
1482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxPriorityUsedOnEntry = pxTCB->uxPriority;
1483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if ( configUSE_MUTEXES == 1 )
1485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Only change the priority being used if the task is not
1487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					currently using an inherited priority. */
1488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxBasePriority == pxTCB->uxPriority )
1489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxTCB->uxPriority = uxNewPriority;
1491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1497:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The base priority gets set whatever. */
1498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxBasePriority = uxNewPriority;
1499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#else
1501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = uxNewPriority;
1503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1504:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
1505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1506:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Only reset the event list item value if the value is not
1507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				being used for anything else. */
1508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE 
1509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( ( TickType_t ) configMAX_PRIORITIES - (
1511:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1512:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1514:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
ARM GAS  /tmp/cclVzO8U.s 			page 28


1515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1516:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If the task is in the blocked or suspended list we need do
1518:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				nothing more than change it's priority variable. However, if
1519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the task is in a ready list it needs to be removed and placed
1520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				in the list appropriate to its new priority. */
1521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateL
1522:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task is currently in its ready list - remove before adding
1524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					it to it's new ready list.  As we are in a critical section we
1525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					can do this even if the scheduler is suspended. */
1526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* It is known that the task is in its ready list so
1529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						there is no need to check again and the port level
1530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						reset macro can be called directly. */
1531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						portRESET_READY_PRIORITY( uxPriorityUsedOnEntry, uxTopReadyPriority );
1532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1539:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xYieldRequired != pdFALSE )
1545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
1547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1551:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Remove compiler warning about unused variables when the port
1554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				optimised task selection is not being used. */
1555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxPriorityUsedOnEntry;
1556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1557:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
1559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskPrioritySet */
1562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1565:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskSuspend( TaskHandle_t xTaskToSuspend )
1567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
1569:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
1571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
ARM GAS  /tmp/cclVzO8U.s 			page 29


1572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the running task that is
1573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			being suspended. */
1574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToSuspend );
1575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_SUSPEND( pxTCB );
1577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1578:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Remove task from the ready/delayed list and place in the
1579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			suspended list. */
1580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskRESET_READY_PRIORITY( pxTCB->uxPriority );
1583:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Is the task waiting on an event also? */
1590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
1591:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
1593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vListInsertEnd( &xSuspendedTaskList, &( pxTCB->xStateListItem ) );
1600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
1602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
1604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Reset the next expected unblock time in case it referred to the
1606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task that is now in the Suspended state. */
1607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskENTER_CRITICAL();
1608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvResetNextTaskUnblockTime();
1610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskEXIT_CRITICAL();
1612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTCB == pxCurrentTCB )
1619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xSchedulerRunning != pdFALSE )
1621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The current task has just been suspended. */
1623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( uxSchedulerSuspended == 0 );
1624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
1625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The scheduler is not running, but the task that was pointed
ARM GAS  /tmp/cclVzO8U.s 			page 30


1629:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				to by pxCurrentTCB has just been suspended and pxCurrentTCB
1630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				must be adjusted to point to a different task. */
1631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == uxCurrentNumberOfTasks )
1632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1633:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* No other tasks are ready, so set pxCurrentTCB back to
1634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					NULL so when the next task is created pxCurrentTCB will
1635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					be set to point to it no matter what its relative priority
1636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					is. */
1637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB = NULL;
1638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vTaskSwitchContext();
1642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1643:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static BaseType_t prvTaskIsTaskSuspended( const TaskHandle_t xTask )
1657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
  27              		.loc 1 1657 2 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
1658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
  32              		.loc 1 1658 2 view .LVU1
1659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
  33              		.loc 1 1659 2 view .LVU2
1660:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Accesses xPendingReadyList so must be called from a critical
1662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		section. */
1663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* It does not make sense to check if the calling task is suspended. */
1665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTask );
  34              		.loc 1 1665 3 view .LVU3
  35 0000 28B1     		cbz	r0, .L8
  36              		.loc 1 1665 24 discriminator 2 view .LVU4
1666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Is the task being resumed actually in the suspended list? */
1668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listIS_CONTAINED_WITHIN( &xSuspendedTaskList, &( pxTCB->xStateListItem ) ) != pdFALSE )
  37              		.loc 1 1668 3 discriminator 2 view .LVU5
  38              		.loc 1 1668 7 is_stmt 0 discriminator 2 view .LVU6
  39 0002 4169     		ldr	r1, [r0, #20]
  40              		.loc 1 1668 82 discriminator 2 view .LVU7
  41 0004 0C4A     		ldr	r2, .L10
  42 0006 9142     		cmp	r1, r2
  43 0008 0AD0     		beq	.L9
ARM GAS  /tmp/cclVzO8U.s 			page 31


1658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
  44              		.loc 1 1658 13 view .LVU8
  45 000a 0020     		movs	r0, #0
  46              	.LVL1:
1658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
  47              		.loc 1 1658 13 view .LVU9
  48 000c 7047     		bx	lr
  49              	.LVL2:
  50              	.L8:
1665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  51              		.loc 1 1665 3 is_stmt 1 view .LVU10
  52              	.LBB90:
  53              	.LBI90:
  54              		.file 2 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h"
   1:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     FreeRTOS V9.0.0 - Copyright (C) 2016 Real Time Engineers Ltd.
   3:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     All rights reserved
   4:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
   5:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     VISIT http://www.FreeRTOS.org TO ENSURE YOU ARE USING THE LATEST VERSION.
   6:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
   7:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     This file is part of the FreeRTOS distribution.
   8:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
   9:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     FreeRTOS is free software; you can redistribute it and/or modify it under
  10:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     the terms of the GNU General Public License (version 2) as published by the
  11:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     Free Software Foundation >>>> AND MODIFIED BY <<<< the FreeRTOS exception.
  12:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  13:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     ***************************************************************************
  14:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     >>!   NOTE: The modification to the GPL is included to allow you to     !<<
  15:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     >>!   distribute a combined work that includes FreeRTOS without being   !<<
  16:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     >>!   obliged to provide the source code for proprietary components     !<<
  17:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     >>!   outside of the FreeRTOS kernel.                                   !<<
  18:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     ***************************************************************************
  19:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  20:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     FreeRTOS is distributed in the hope that it will be useful, but WITHOUT ANY
  21:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  22:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     FOR A PARTICULAR PURPOSE.  Full license text is available on the following
  23:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     link: http://www.freertos.org/a00114.html
  24:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  25:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     ***************************************************************************
  26:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****      *                                                                       *
  27:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****      *    FreeRTOS provides completely free yet professionally developed,    *
  28:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****      *    robust, strictly quality controlled, supported, and cross          *
  29:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****      *    platform software that is more than just the market leader, it     *
  30:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****      *    is the industry's de facto standard.                               *
  31:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****      *                                                                       *
  32:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****      *    Help yourself get started quickly while simultaneously helping     *
  33:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****      *    to support the FreeRTOS project by purchasing a FreeRTOS           *
  34:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****      *    tutorial book, reference manual, or both:                          *
  35:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****      *    http://www.FreeRTOS.org/Documentation                              *
  36:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****      *                                                                       *
  37:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     ***************************************************************************
  38:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  39:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     http://www.FreeRTOS.org/FAQHelp.html - Having a problem?  Start by reading
  40:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     the FAQ page "My application does not run, what could be wrong?".  Have you
  41:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     defined configASSERT()?
  42:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  43:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     http://www.FreeRTOS.org/support - In return for receiving this top quality
ARM GAS  /tmp/cclVzO8U.s 			page 32


  44:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     embedded software for free we request you assist our global community by
  45:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     participating in the support forum.
  46:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  47:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     http://www.FreeRTOS.org/training - Investing in training allows your team to
  48:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     be as productive as possible as early as possible.  Now you can receive
  49:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     FreeRTOS training directly from Richard Barry, CEO of Real Time Engineers
  50:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     Ltd, and the world's leading authority on the world's leading RTOS.
  51:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  52:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     http://www.FreeRTOS.org/plus - A selection of FreeRTOS ecosystem products,
  53:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     including FreeRTOS+Trace - an indispensable productivity tool, a DOS
  54:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     compatible FAT file system, and our tiny thread aware UDP/IP stack.
  55:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  56:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     http://www.FreeRTOS.org/labs - Where new FreeRTOS products go to incubate.
  57:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     Come and try FreeRTOS+TCP, our new open source TCP/IP stack for FreeRTOS.
  58:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  59:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     http://www.OpenRTOS.com - Real Time Engineers ltd. license FreeRTOS to High
  60:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     Integrity Systems ltd. to sell under the OpenRTOS brand.  Low cost OpenRTOS
  61:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     licenses offer ticketed support, indemnification and commercial middleware.
  62:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  63:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     http://www.SafeRTOS.com - High Integrity Systems also provide a safety
  64:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     engineered and independently SIL3 certified version for use in safety and
  65:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     mission critical applications that require provable dependability.
  66:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  67:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     1 tab == 4 spaces!
  68:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** */
  69:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  70:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  71:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #ifndef PORTMACRO_H
  72:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define PORTMACRO_H
  73:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  74:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #ifdef __cplusplus
  75:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** extern "C" {
  76:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
  77:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  78:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------
  79:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * Port specific definitions.
  80:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *
  81:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  82:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * given hardware and compiler.
  83:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *
  84:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * These settings should not be altered.
  85:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *-----------------------------------------------------------
  86:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  */
  87:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  88:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Type definitions. */
  89:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portCHAR		char
  90:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portFLOAT		float
  91:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portDOUBLE		double
  92:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portLONG		long
  93:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portSHORT		short
  94:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portSTACK_TYPE	uint32_t
  95:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portBASE_TYPE	long
  96:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  97:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  98:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** typedef long BaseType_t;
  99:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** typedef unsigned long UBaseType_t;
 100:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
ARM GAS  /tmp/cclVzO8U.s 			page 33


 101:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
 102:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	typedef uint16_t TickType_t;
 103:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
 104:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #else
 105:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	typedef uint32_t TickType_t;
 106:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
 107:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 108:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
 109:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	not need to be guarded with a critical section. */
 110:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
 111:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
 112:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 113:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 114:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Architecture specifics. */
 115:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portSTACK_GROWTH			( -1 )
 116:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
 117:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portBYTE_ALIGNMENT			8
 118:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 119:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 120:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Scheduler utilities. */
 121:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portYIELD() 															\
 122:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {																				\
 123:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
 124:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
 125:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 																				\
 126:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
 127:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	within the specified behaviour for the architecture. */						\
 128:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile( "dsb" );													\
 129:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile( "isb" );													\
 130:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** }
 131:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 132:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
 133:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
 134:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
 135:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
 136:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 137:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 138:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Critical section management. */
 139:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** extern void vPortEnterCritical( void );
 140:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** extern void vPortExitCritical( void );
 141:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 142:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 143:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 144:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 145:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 146:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 147:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 148:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 149:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 150:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 151:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 152:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** (which build with all the ports) will build. */
 153:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 154:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 155:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 156:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 157:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Tickless idle/low power functionality. */
ARM GAS  /tmp/cclVzO8U.s 			page 34


 158:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 159:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 160:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 161:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
 162:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 163:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 164:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Architecture specific optimisations. */
 165:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 166:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 167:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
 168:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 169:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 170:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 171:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Generic helper function. */
 172:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 173:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	{
 174:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	uint8_t ucReturn;
 175:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 176:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) );
 177:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		return ucReturn;
 178:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	}
 179:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 180:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Check the configuration. */
 181:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 182:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 183:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#endif
 184:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 185:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 186:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 187:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 188:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 189:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/*-----------------------------------------------------------*/
 190:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 192:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 194:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 196:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 197:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #ifdef configASSERT
 198:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 199:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 200:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
 201:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 202:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* portNOP() is not required by this port. */
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portNOP()
 204:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 205:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portINLINE	__inline
 206:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 207:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #ifndef portFORCE_INLINE
 208:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 209:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
 210:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 212:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 213:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** uint32_t ulCurrentInterrupt;
 214:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** BaseType_t xReturn;
ARM GAS  /tmp/cclVzO8U.s 			page 35


 215:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 216:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 217:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) );
 218:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 219:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 220:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	{
 221:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		xReturn = pdFALSE;
 222:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	}
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	else
 224:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	{
 225:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		xReturn = pdTRUE;
 226:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	}
 227:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 228:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	return xReturn;
 229:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** }
 230:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 231:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 232:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 233:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
  55              		.loc 2 233 30 view .LVU11
  56              	.LBB91:
 234:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 235:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** uint32_t ulNewBASEPRI;
  57              		.loc 2 235 1 view .LVU12
 236:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile
  58              		.loc 2 237 2 view .LVU13
  59              		.syntax unified
  60              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
  61 000e 4FF05003 			mov r3, #80												
  62 0012 83F31188 		msr basepri, r3											
  63 0016 BFF36F8F 		isb														
  64 001a BFF34F8F 		dsb														
  65              	
  66              	@ 0 "" 2
  67              	.LVL3:
  68              		.thumb
  69              		.syntax unified
  70              	.L3:
  71              		.loc 2 237 2 is_stmt 0 view .LVU14
  72              	.LBE91:
  73              	.LBE90:
1665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  74              		.loc 1 1665 3 is_stmt 1 discriminator 1 view .LVU15
1665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  75              		.loc 1 1665 3 discriminator 1 view .LVU16
  76 001e FEE7     		b	.L3
  77              	.L9:
1669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Has the task already been resumed from within an ISR? */
1671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listIS_CONTAINED_WITHIN( &xPendingReadyList, &( pxTCB->xEventListItem ) ) == pdFALSE )
  78              		.loc 1 1671 4 view .LVU17
  79              		.loc 1 1671 8 is_stmt 0 view .LVU18
  80 0020 836A     		ldr	r3, [r0, #40]
  81              		.loc 1 1671 6 view .LVU19
  82 0022 064A     		ldr	r2, .L10+4
  83 0024 9342     		cmp	r3, r2
ARM GAS  /tmp/cclVzO8U.s 			page 36


  84 0026 02D0     		beq	.L6
1672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Is it in the suspended list because it is in the	Suspended
1674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				state, or because is is blocked with no timeout? */
1675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( NULL, &( pxTCB->xEventListItem ) ) != pdFALSE )
  85              		.loc 1 1675 5 is_stmt 1 view .LVU20
  86              		.loc 1 1675 69 is_stmt 0 view .LVU21
  87 0028 1BB1     		cbz	r3, .L7
1658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
  88              		.loc 1 1658 13 view .LVU22
  89 002a 0020     		movs	r0, #0
  90              	.LVL4:
1658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
  91              		.loc 1 1658 13 view .LVU23
  92 002c 7047     		bx	lr
  93              	.LVL5:
  94              	.L6:
1658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
  95              		.loc 1 1658 13 view .LVU24
  96 002e 0020     		movs	r0, #0
  97              	.LVL6:
1658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
  98              		.loc 1 1658 13 view .LVU25
  99 0030 7047     		bx	lr
 100              	.LVL7:
 101              	.L7:
1676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xReturn = pdTRUE;
 102              		.loc 1 1677 14 view .LVU26
 103 0032 0120     		movs	r0, #1
 104              	.LVL8:
1678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1681:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1686:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
 105              		.loc 1 1691 28 is_stmt 1 view .LVU27
1692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 106              		.loc 1 1694 3 view .LVU28
1695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
 107              		.loc 1 1695 2 is_stmt 0 view .LVU29
 108 0034 7047     		bx	lr
 109              	.L11:
 110 0036 00BF     		.align	2
 111              	.L10:
 112 0038 00000000 		.word	.LANCHOR0
ARM GAS  /tmp/cclVzO8U.s 			page 37


 113 003c 00000000 		.word	.LANCHOR1
 114              		.cfi_endproc
 115              	.LFE598:
 117              		.section	.text.prvResetNextTaskUnblockTime,"ax",%progbits
 118              		.align	1
 119              		.syntax unified
 120              		.thumb
 121              		.thumb_func
 122              		.fpu softvfp
 124              	prvResetNextTaskUnblockTime:
 125              	.LFB622:
1696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskResume( TaskHandle_t xTaskToResume )
1703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
1705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* It does not make sense to resume the calling task. */
1707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToResume );
1708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The parameter cannot be NULL as it is impossible to resume the
1710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		currently executing task. */
1711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( pxTCB != NULL ) && ( pxTCB != pxCurrentTCB ) )
1712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskENTER_CRITICAL();
1714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( prvTaskIsTaskSuspended( pxTCB ) != pdFALSE )
1716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_RESUME( pxTCB );
1718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* As we are in a critical section we can access the ready
1720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					lists even if the scheduler is suspended. */
1721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove(  &( pxTCB->xStateListItem ) );
1722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* We may have just resumed a higher priority task. */
1725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
1726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* This yield may not cause the task just resumed to run,
1728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						but will leave the lists in the correct state for the
1729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						next yield. */
1730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						taskYIELD_IF_USING_PREEMPTION();
1731:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1736:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
ARM GAS  /tmp/cclVzO8U.s 			page 38


1742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskEXIT_CRITICAL();
1743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1749:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) )
1755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskResumeFromISR( TaskHandle_t xTaskToResume )
1757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
1759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
1760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
1761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToResume );
1763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
1765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
1766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
1767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
1768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
1769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
1770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
1772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been assigned a priority above the configured maximum system call
1773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
1774:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
1775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
1776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
1777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
1778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		provided on the following link:
1779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( prvTaskIsTaskSuspended( pxTCB ) != pdFALSE )
1785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_RESUME_FROM_ISR( pxTCB );
1787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Check the ready lists can be accessed. */
1789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
1790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Ready lists can be accessed so move the task from the
1792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					suspended list to the ready list directly. */
1793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
1794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1795:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xYieldRequired = pdTRUE;
1796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1797:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
ARM GAS  /tmp/cclVzO8U.s 			page 39


1799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
1803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed or ready lists cannot be accessed so the task
1808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					is held in the pending ready list until the scheduler is
1809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					unsuspended. */
1810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
1811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1816:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xYieldRequired;
1821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) ) */
1824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskStartScheduler( void )
1827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
1828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
1829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1830:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Add the idle task at the lowest priority. */
1831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configSUPPORT_STATIC_ALLOCATION == 1 )
1832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
1834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StackType_t *pxIdleTaskStackBuffer = NULL;
1835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint32_t ulIdleTaskStackSize;
1836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The Idle task is created using user provided RAM - obtain the
1838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		address of the RAM then create the idle task. */
1839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize
1840:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
1841:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												"IDLE",
1842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												ulIdleTaskStackSize,
1843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												( void * ) NULL,
1844:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												( tskIDLE_PRIORITY | portPRIVILEGE_BIT ),
1845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												pxIdleTaskStackBuffer,
1846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												pxIdleTaskTCBBuffer ); /*lint !e961 MISRA exception, justified as it is not a redundant
1847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xIdleTaskHandle != NULL )
1849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdPASS;
1851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1854:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdFAIL;
1855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
ARM GAS  /tmp/cclVzO8U.s 			page 40


1856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else
1858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The Idle task is being created using dynamically allocated RAM. */
1860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = xTaskCreate(	prvIdleTask,
1861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								"IDLE", configMINIMAL_STACK_SIZE,
1862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								( void * ) NULL,
1863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								( tskIDLE_PRIORITY | portPRIVILEGE_BIT ),
1864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								&xIdleTaskHandle ); /*lint !e961 MISRA exception, justified as it is not a redundant explic
1865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configSUPPORT_STATIC_ALLOCATION */
1867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_TIMERS == 1 )
1869:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xReturn == pdPASS )
1871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = xTimerCreateTimerTask();
1873:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configUSE_TIMERS */
1880:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1881:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( xReturn == pdPASS )
1882:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Interrupts are turned off here, to ensure a tick does not occur
1884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		before or during the call to xPortStartScheduler().  The stacks of
1885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the created tasks contain a status word with interrupts switched on
1886:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		so interrupts will automatically get re-enabled when the first task
1887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		starts to run. */
1888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portDISABLE_INTERRUPTS();
1889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
1891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Switch Newlib's _impure_ptr variable to point to the _reent
1893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			structure specific to the task that will run first. */
1894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
1895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
1897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = portMAX_DELAY;
1899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xSchedulerRunning = pdTRUE;
1900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount = ( TickType_t ) 0U;
1901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If configGENERATE_RUN_TIME_STATS is defined then the following
1903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		macro must be defined to configure the timer/counter used to generate
1904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the run time counter time base. */
1905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCONFIGURE_TIMER_FOR_RUN_TIME_STATS();
1906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Setting up the timer tick is hardware specific and thus in the
1908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portable interface. */
1909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xPortStartScheduler() != pdFALSE )
1910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Should not reach here as if the scheduler is running the
1912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			function will not return. */
ARM GAS  /tmp/cclVzO8U.s 			page 41


1913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Should only reach here if a task calls xTaskEndScheduler(). */
1917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
1920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This line will only be reached if the kernel could not be started,
1922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		because there was not enough FreeRTOS heap to create the idle task
1923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		or the timer task. */
1924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
1925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Prevent compiler warnings if INCLUDE_xTaskGetIdleTaskHandle is set to 0,
1928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	meaning xIdleTaskHandle is not used anywhere else. */
1929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) xIdleTaskHandle;
1930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
1931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskEndScheduler( void )
1934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
1935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop the scheduler interrupts and call the portable scheduler end
1936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	routine so the original ISRs can be restored if necessary.  The port
1937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	layer must ensure interrupts enable	bit is left in the correct state. */
1938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portDISABLE_INTERRUPTS();
1939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xSchedulerRunning = pdFALSE;
1940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vPortEndScheduler();
1941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
1942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
1943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskSuspendAll( void )
1945:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
1946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A critical section is not required as the variable is of type
1947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t.  Please read Richard Barry's reply in the following link to a
1948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	post in the FreeRTOS support forum before reporting this as a bug! -
1949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	http://goo.gl/wu4acr */
1950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	++uxSchedulerSuspended;
1951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
1952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
1953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
1955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1956:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static TickType_t prvGetExpectedIdleTime( void )
1957:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TickType_t xReturn;
1959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxHigherPriorityReadyTasks = pdFALSE;
1960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* uxHigherPriorityReadyTasks takes care of the case where
1962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configUSE_PREEMPTION is 0, so there may be tasks above the idle priority
1963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		task that are in the Ready state, even though the idle task is
1964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		running. */
1965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
1966:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxTopReadyPriority > tskIDLE_PRIORITY )
1968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxHigherPriorityReadyTasks = pdTRUE;
ARM GAS  /tmp/cclVzO8U.s 			page 42


1970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else
1973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			const UBaseType_t uxLeastSignificantBit = ( UBaseType_t ) 0x01;
1975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* When port optimised task selection is used the uxTopReadyPriority
1977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			variable is used as a bit map.  If bits other than the least
1978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			significant bit are set then there are tasks that have a priority
1979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			above the idle priority that are in the Ready state.  This takes
1980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			care of the case where the co-operative scheduler is in use. */
1981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxTopReadyPriority > uxLeastSignificantBit )
1982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxHigherPriorityReadyTasks = pdTRUE;
1984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1985:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
1987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB->uxPriority > tskIDLE_PRIORITY )
1989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = 0;
1991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > 1 )
1993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* There are other idle priority tasks in the ready state.  If
1995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			time slicing is used then the very next tick interrupt must be
1996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			processed. */
1997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = 0;
1998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else if( uxHigherPriorityReadyTasks != pdFALSE )
2000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* There are tasks in the Ready state that have a priority above the
2002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			idle priority.  This path can only be reached if
2003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configUSE_PREEMPTION is 0. */
2004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = 0;
2005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = xNextTaskUnblockTime - xTickCount;
2009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2011:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
2012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2013:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2014:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
2015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskResumeAll( void )
2018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB = NULL;
2020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xAlreadyYielded = pdFALSE;
2021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If uxSchedulerSuspended is zero then this function does not match a
2023:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	previous call to vTaskSuspendAll(). */
2024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( uxSchedulerSuspended );
2025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2026:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* It is possible that an ISR caused a task to be removed from an event
ARM GAS  /tmp/cclVzO8U.s 			page 43


2027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	list while the scheduler was suspended.  If this was the case then the
2028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	removed task will have been added to the xPendingReadyList.  Once the
2029:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	scheduler has been resumed it is safe to move all the pending ready
2030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	tasks from this list into their appropriate ready list. */
2031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
2032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		--uxSchedulerSuspended;
2034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2035:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
2036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2037:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
2038:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Move any readied tasks from the pending list into the
2040:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				appropriate ready list. */
2041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
2042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) );
2044:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
2047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2048:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* If the moved task has a priority higher than the current
2049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					task then a yield must be performed. */
2050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
2051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xYieldPending = pdTRUE;
2053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB != NULL )
2061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2062:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* A task was unblocked while the scheduler was suspended,
2063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					which may have prevented the next unblock time from being
2064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					re-calculated, in which case re-calculate it now.  Mainly
2065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					important for low power tickless implementations, where
2066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					this can prevent an unnecessary exit from low power
2067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					state. */
2068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvResetNextTaskUnblockTime();
2069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If any ticks occurred while the scheduler was suspended then
2072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				they should be processed now.  This ensures the tick count does
2073:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				not	slip, and that any delayed tasks are resumed at the correct
2074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				time. */
2075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					UBaseType_t uxPendedCounts = uxPendedTicks; /* Non-volatile copy. */
2077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( uxPendedCounts > ( UBaseType_t ) 0U )
2079:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2080:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						do
2081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
2082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							if( xTaskIncrementTick() != pdFALSE )
2083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
ARM GAS  /tmp/cclVzO8U.s 			page 44


2084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								xYieldPending = pdTRUE;
2085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
2086:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							else
2087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
2088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								mtCOVERAGE_TEST_MARKER();
2089:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
2090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							--uxPendedCounts;
2091:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						} while( uxPendedCounts > ( UBaseType_t ) 0U );
2092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						uxPendedTicks = 0;
2094:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2098:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xYieldPending != pdFALSE )
2102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					#if( configUSE_PREEMPTION != 0 )
2104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xAlreadyYielded = pdTRUE;
2106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					#endif
2108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
2109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
2111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
2113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskEXIT_CRITICAL();
2122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xAlreadyYielded;
2124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTaskGetTickCount( void )
2128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTicks;
2130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Critical section required if running on a 16 bit processor. */
2132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portTICK_TYPE_ENTER_CRITICAL();
2133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTicks = xTickCount;
2135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portTICK_TYPE_EXIT_CRITICAL();
2137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xTicks;
2139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
ARM GAS  /tmp/cclVzO8U.s 			page 45


2141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTaskGetTickCountFromISR( void )
2143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xReturn;
2145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxSavedInterruptStatus;
2146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
2148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
2149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	above the maximum system call priority are kept permanently enabled, even
2150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
2151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
2152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
2153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
2154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	assigned a priority above the configured maximum system call priority.
2155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
2156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	that have been assigned a priority at or (logically) below the maximum
2157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
2158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
2159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	More information (albeit Cortex-M specific) is provided on the following
2160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
2161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
2162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uxSavedInterruptStatus = portTICK_TYPE_SET_INTERRUPT_MASK_FROM_ISR();
2164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = xTickCount;
2166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portTICK_TYPE_CLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
2168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xReturn;
2170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxTaskGetNumberOfTasks( void )
2174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A critical section is not required because the variables are of type
2176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t. */
2177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return uxCurrentNumberOfTasks;
2178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** char *pcTaskGetName( TaskHandle_t xTaskToQuery ) /*lint !e971 Unqualified char types are allowed fo
2182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB;
2184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If null is passed in here then the name of the calling task is being
2186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	queried. */
2187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTCB = prvGetTCBFromHandle( xTaskToQuery );
2188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTCB );
2189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
2190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
2194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static TCB_t *prvSearchForNameWithinSingleList( List_t *pxList, const char pcNameToQuery[] )
2196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNextTCB, *pxFirstTCB, *pxReturn = NULL;
ARM GAS  /tmp/cclVzO8U.s 			page 46


2198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t x;
2199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	char cNextChar;
2200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This function is called with the scheduler suspended. */
2202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
2204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList );
2206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			do
2208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList );
2210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Check each character in the name looking for a match or
2212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mismatch. */
2213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
2214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					cNextChar = pxNextTCB->pcTaskName[ x ];
2216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( cNextChar != pcNameToQuery[ x ] )
2218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Characters didn't match. */
2220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						break;
2221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else if( cNextChar == 0x00 )
2223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Both strings terminated, a match must have been
2225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						found. */
2226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxReturn = pxNextTCB;
2227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						break;
2228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxReturn != NULL )
2236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The handle has been found. */
2238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
2239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			} while( pxNextTCB != pxFirstTCB );
2242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return pxReturn;
2249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_xTaskGetHandle */
2252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
ARM GAS  /tmp/cclVzO8U.s 			page 47


2255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xTaskGetHandle( const char *pcNameToQuery ) /*lint !e971 Unqualified char types are a
2257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxQueue = configMAX_PRIORITIES;
2259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t* pxTCB;
2260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Task names will be truncated to configMAX_TASK_NAME_LEN - 1 bytes. */
2262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( strlen( pcNameToQuery ) < configMAX_TASK_NAME_LEN );
2263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vTaskSuspendAll();
2265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Search the ready lists. */
2267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			do
2268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxQueue--;
2270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) &( pxReadyTasksLists[ uxQueue ] ), pcNam
2271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB != NULL )
2273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Found the handle. */
2275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
2276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			} while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception as the casts
2279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Search the delayed lists. */
2281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == NULL )
2282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) pxDelayedTaskList, pcNameToQuery );
2284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == NULL )
2287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2288:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) pxOverflowDelayedTaskList, pcNameToQuery
2289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2290:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2291:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( INCLUDE_vTaskSuspend == 1 )
2292:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2293:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB == NULL )
2294:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Search the suspended list. */
2296:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB = prvSearchForNameWithinSingleList( &xSuspendedTaskList, pcNameToQuery );
2297:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
2300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( INCLUDE_vTaskDelete == 1 )
2302:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB == NULL )
2304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Search the deleted list. */
2306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB = prvSearchForNameWithinSingleList( &xTasksWaitingTermination, pcNameToQuery );
2307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2308:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
2310:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xTaskResumeAll();
ARM GAS  /tmp/cclVzO8U.s 			page 48


2312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return ( TaskHandle_t ) pxTCB;
2314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_xTaskGetHandle */
2317:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2319:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
2320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskGetSystemState( TaskStatus_t * const pxTaskStatusArray, const UBaseType_t uxArra
2322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTask = 0, uxQueue = configMAX_PRIORITIES;
2324:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2325:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vTaskSuspendAll();
2326:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Is there a space in the array for each task in the system? */
2328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxArraySize >= uxCurrentNumberOfTasks )
2329:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2330:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Fill in an TaskStatus_t structure with information on each
2331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task in the Ready state. */
2332:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				do
2333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxQueue--;
2335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &( pxReadyTasksLists
2336:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				} while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception as the cast
2338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Fill in an TaskStatus_t structure with information on each
2340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task in the Blocked state. */
2341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxDelaye
2342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxOverfl
2343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if( INCLUDE_vTaskDelete == 1 )
2345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Fill in an TaskStatus_t structure with information on
2347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					each task that has been deleted but not yet cleaned up. */
2348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &xTasksWaitingTermin
2349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
2351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if ( INCLUDE_vTaskSuspend == 1 )
2353:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Fill in an TaskStatus_t structure with information on
2355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					each task in the Suspended state. */
2356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &xSuspendedTaskList,
2357:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2358:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
2359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if ( configGENERATE_RUN_TIME_STATS == 1)
2361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pulTotalRunTime != NULL )
2363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#ifdef portALT_GET_RUN_TIME_COUNTER_VALUE
2365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							portALT_GET_RUN_TIME_COUNTER_VALUE( ( *pulTotalRunTime ) );
2366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#else
2367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							*pulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
2368:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#endif
ARM GAS  /tmp/cclVzO8U.s 			page 49


2369:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#else
2372:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pulTotalRunTime != NULL )
2374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						*pulTotalRunTime = 0;
2376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
2379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
2381:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2383:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xTaskResumeAll();
2386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxTask;
2388:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
2391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskGetIdleTaskHandle == 1 )
2394:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xTaskGetIdleTaskHandle( void )
2396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xTaskGetIdleTaskHandle() is called before the scheduler has been
2398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		started, then xIdleTaskHandle will be NULL. */
2399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( xIdleTaskHandle != NULL ) );
2400:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xIdleTaskHandle;
2401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_xTaskGetIdleTaskHandle */
2404:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* This conditional compilation should use inequality to 0, not equality to 1.
2407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** This is to ensure vTaskStepTick() is available when user defined low power mode
2408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** implementations require configUSE_TICKLESS_IDLE to be set to a value other than
2409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 1. */
2410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
2411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2412:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskStepTick( const TickType_t xTicksToJump )
2413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2414:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Correct the tick count value after a period during which the tick
2415:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		was suppressed.  Note this does *not* call the tick hook function for
2416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		each stepped tick. */
2417:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( xTickCount + xTicksToJump ) <= xNextTaskUnblockTime );
2418:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount += xTicksToJump;
2419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceINCREASE_TICK_COUNT( xTicksToJump );
2420:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2422:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
2423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2425:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskAbortDelay == 1 )
ARM GAS  /tmp/cclVzO8U.s 			page 50


2426:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskAbortDelay( TaskHandle_t xTask )
2428:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2429:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB = ( TCB_t * ) xTask;
2430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
2431:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTCB );
2433:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vTaskSuspendAll();
2435:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* A task can only be prematurely removed from the Blocked state if
2437:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			it is actually in the Blocked state. */
2438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( eTaskGetState( xTask ) == eBlocked )
2439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Remove the reference to the task from the blocked list.  An
2441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				interrupt won't touch the xStateListItem because the
2442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				scheduler is suspended. */
2443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2445:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Is the task waiting on an event also?  If so remove it from
2446:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the event list too.  Interrupts can touch the event list item,
2447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				even though the scheduler is suspended, so a critical section
2448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				is used. */
2449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskENTER_CRITICAL();
2450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
2452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2454:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxTCB->ucDelayAborted = pdTRUE;
2455:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2459:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2460:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskEXIT_CRITICAL();
2462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Place the unblocked task into the appropriate ready list. */
2464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
2465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A task being unblocked cannot cause an immediate context
2467:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				switch if preemption is turned off. */
2468:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if (  configUSE_PREEMPTION == 1 )
2469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Preemption is on, but a context switch should only be
2471:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					performed if the unblocked task has a priority that is
2472:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					equal to or higher than the currently executing task. */
2473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
2474:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Pend the yield to be performed when the scheduler
2476:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						is unsuspended. */
2477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xYieldPending = pdTRUE;
2478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
ARM GAS  /tmp/cclVzO8U.s 			page 51


2483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif /* configUSE_PREEMPTION */
2485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
2487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTaskResumeAll();
2492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
2494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_xTaskAbortDelay */
2497:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskIncrementTick( void )
2500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t * pxTCB;
2502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xItemValue;
2503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xSwitchRequired = pdFALSE;
2504:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Called by the portable layer each time a tick interrupt occurs.
2506:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	Increments the tick then checks to see if the new tick value will cause any
2507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	tasks to be unblocked. */
2508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	traceTASK_INCREMENT_TICK( xTickCount );
2509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
2510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2511:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Minor optimisation.  The tick count cannot change in this
2512:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		block. */
2513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		const TickType_t xConstTickCount = xTickCount + 1;
2514:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Increment the RTOS tick, switching the delayed and overflowed
2516:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		delayed lists if it wraps to 0. */
2517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount = xConstTickCount;
2518:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xConstTickCount == ( TickType_t ) 0U )
2520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskSWITCH_DELAYED_LISTS();
2522:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* See if this tick has made a timeout expire.  Tasks are stored in
2529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the	queue in the order of their wake time - meaning once one task
2530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		has been found whose block time has not expired there is no need to
2531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		look any further down the list. */
2532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xConstTickCount >= xNextTaskUnblockTime )
2533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			for( ;; )
2535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
2537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed list is empty.  Set xNextTaskUnblockTime
2539:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					to the maximum possible value so it is extremely
ARM GAS  /tmp/cclVzO8U.s 			page 52


2540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					unlikely that the
2541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( xTickCount >= xNextTaskUnblockTime ) test will pass
2542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					next time through. */
2543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redun
2544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
2545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
2547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed list is not empty, get the value of the
2549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					item at the head of the delayed list.  This is the time
2550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					at which the task at the head of the delayed list must
2551:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					be removed from the Blocked state. */
2552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
2553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
2554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( xConstTickCount < xItemValue )
2556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2557:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* It is not time to unblock this item yet, but the
2558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						item value is the time at which the task at the head
2559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						of the blocked list must be removed from the Blocked
2560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						state -	so record the item value in
2561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xNextTaskUnblockTime. */
2562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xNextTaskUnblockTime = xItemValue;
2563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						break;
2564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2565:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2569:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* It is time to remove the item from the Blocked state. */
2571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Is the task waiting on an event also?  If so remove
2574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					it from the event list. */
2575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
2576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2578:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2583:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Place the unblocked task into the appropriate ready
2585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					list. */
2586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
2587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* A task being unblocked cannot cause an immediate
2589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					context switch if preemption is turned off. */
2590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					#if (  configUSE_PREEMPTION == 1 )
2591:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Preemption is on, but a context switch should
2593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						only be performed if the unblocked task has a
2594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						priority that is equal to or higher than the
2595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						currently executing task. */
2596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
ARM GAS  /tmp/cclVzO8U.s 			page 53


2597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
2598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							xSwitchRequired = pdTRUE;
2599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
2600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						else
2601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
2602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
2603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
2604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					#endif /* configUSE_PREEMPTION */
2606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Tasks of equal priority to the currently running task will share
2611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		processing time (time slice) if preemption is on, and the application
2612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		writer has not explicitly turned time slicing off. */
2613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) )
2614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_
2616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xSwitchRequired = pdTRUE;
2618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
2620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) ) */
2625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_TICK_HOOK == 1 )
2627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Guard against the tick hook being called when the pended tick
2629:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			count is being unwound (when the scheduler is being unlocked). */
2630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxPendedTicks == ( UBaseType_t ) 0U )
2631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vApplicationTickHook();
2633:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
2635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_TICK_HOOK */
2640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
2642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2643:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		++uxPendedTicks;
2644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The tick hook gets called at regular intervals, even if the
2646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		scheduler is locked. */
2647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_TICK_HOOK == 1 )
2648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vApplicationTickHook();
2650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
2652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cclVzO8U.s 			page 54


2654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_PREEMPTION == 1 )
2655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xYieldPending != pdFALSE )
2657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xSwitchRequired = pdTRUE;
2659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2660:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configUSE_PREEMPTION */
2666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xSwitchRequired;
2668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskSetApplicationTaskTag( TaskHandle_t xTask, TaskHookFunction_t pxHookFunction )
2674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *xTCB;
2676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xTask is NULL then it is the task hook of the calling task that is
2678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		getting set. */
2679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTask == NULL )
2680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2681:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = ( TCB_t * ) pxCurrentTCB;
2682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = ( TCB_t * ) xTask;
2686:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Save the hook function in the TCB.  A critical section is required as
2689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the value can be accessed from an interrupt. */
2690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
2691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB->pxTaskTag = pxHookFunction;
2692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
2693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHookFunction_t xTaskGetApplicationTaskTag( TaskHandle_t xTask )
2701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *xTCB;
2703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHookFunction_t xReturn;
2704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xTask is NULL then we are setting our own task hook. */
2706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTask == NULL )
2707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = ( TCB_t * ) pxCurrentTCB;
2709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
ARM GAS  /tmp/cclVzO8U.s 			page 55


2711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = ( TCB_t * ) xTask;
2713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Save the hook function in the TCB.  A critical section is required as
2716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the value can be accessed from an interrupt. */
2717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
2718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = xTCB->pxTaskTag;
2720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
2722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
2724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2731:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskCallApplicationTaskHook( TaskHandle_t xTask, void *pvParameter )
2732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *xTCB;
2734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
2735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2736:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xTask is NULL then we are calling our own task hook. */
2737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTask == NULL )
2738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = ( TCB_t * ) pxCurrentTCB;
2740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = ( TCB_t * ) xTask;
2744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTCB->pxTaskTag != NULL )
2747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = xTCB->pxTaskTag( pvParameter );
2749:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdFAIL;
2753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
2756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskSwitchContext( void )
2762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
2764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The scheduler is currently suspended - do not allow a context
2766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		switch. */
2767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xYieldPending = pdTRUE;
ARM GAS  /tmp/cclVzO8U.s 			page 56


2768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
2770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xYieldPending = pdFALSE;
2772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_OUT();
2773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2774:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configGENERATE_RUN_TIME_STATS == 1 )
2775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#ifdef portALT_GET_RUN_TIME_COUNTER_VALUE
2777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					portALT_GET_RUN_TIME_COUNTER_VALUE( ulTotalRunTime );
2778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#else
2779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					ulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
2780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
2781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Add the amount of time the task has been running to the
2783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				accumulated time so far.  The time the task started running was
2784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				stored in ulTaskSwitchedInTime.  Note that there is no overflow
2785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				protection here so count values are only valid until the timer
2786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				overflows.  The guard against negative values is to protect
2787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				against suspect run time stat counter implementations - which
2788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				are provided by the application, not the kernel. */
2789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( ulTotalRunTime > ulTaskSwitchedInTime )
2790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB->ulRunTimeCounter += ( ulTotalRunTime - ulTaskSwitchedInTime );
2792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
2794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2795:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
2796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2797:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				ulTaskSwitchedInTime = ulTotalRunTime;
2798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configGENERATE_RUN_TIME_STATS */
2800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Check for stack overflow, if configured. */
2802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskCHECK_FOR_STACK_OVERFLOW();
2803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Select a new task to run using either the generic C or port
2805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		optimised asm code. */
2806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskSELECT_HIGHEST_PRIORITY_TASK();
2807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
2808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
2810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Switch Newlib's _impure_ptr variable to point to the _reent
2812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			structure specific to this task. */
2813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
2814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
2816:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskPlaceOnEventList( List_t * const pxEventList, const TickType_t xTicksToWait )
2821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
2823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH EITHER INTERRUPTS DISABLED OR THE
ARM GAS  /tmp/cclVzO8U.s 			page 57


2825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	SCHEDULER SUSPENDED AND THE QUEUE BEING ACCESSED LOCKED. */
2826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Place the event list item of the TCB in the appropriate event list.
2828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	This is placed in the list in priority order so the highest priority task
2829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	is the first to be woken by the event.  The queue that contains the event
2830:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	list is locked, preventing simultaneous access from interrupts. */
2831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
2832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
2834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskPlaceOnUnorderedEventList( List_t * pxEventList, const TickType_t xItemValue, const TickT
2838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
2840:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2841:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED.  It is used by
2842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the event groups implementation. */
2843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( uxSchedulerSuspended != 0 );
2844:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Store the item value in the event list item.  It is safe to access the
2846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	event list item here as interrupts won't access the event list item of a
2847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	task that is not in the Blocked state. */
2848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), xItemValue | taskEVENT_LIST_ITEM_VALUE
2849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Place the event list item of the TCB at the end of the appropriate event
2851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	list.  It is safe to access the event list here because it is part of an
2852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	event group implementation - and interrupts don't access event groups
2853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	directly (instead they access them indirectly by pending function calls to
2854:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the task level). */
2855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
2856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
2858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TIMERS == 1 )
2862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskPlaceOnEventListRestricted( List_t * const pxEventList, TickType_t xTicksToWait, const B
2864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxEventList );
2866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This function should not be called by application code hence the
2868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		'Restricted' in its name.  It is not part of the public API.  It is
2869:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		designed for use by kernel code, and has special calling requirements -
2870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		it should be called with the scheduler suspended. */
2871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2873:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Place the event list item of the TCB in the appropriate event list.
2874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		In this case it is assume that this is the only task that is going to
2875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		be waiting on this event list, so the faster vListInsertEnd() function
2876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		can be used in place of vListInsert. */
2877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
2878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the task should block indefinitely then set the block time to a
2880:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		value that will be recognised as an indefinite delay inside the
2881:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddCurrentTaskToDelayedList() function. */
ARM GAS  /tmp/cclVzO8U.s 			page 58


2882:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xWaitIndefinitely != pdFALSE )
2883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTicksToWait = portMAX_DELAY;
2885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2886:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_DELAY_UNTIL( ( xTickCount + xTicksToWait ) );
2888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
2889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TIMERS */
2892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskRemoveFromEventList( const List_t * const pxEventList )
2895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
2897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
2898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED FROM A CRITICAL SECTION.  It can also be
2900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	called from a critical section within an ISR. */
2901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* The event list is sorted in priority order, so the first in the list can
2903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	be removed as it is known to be the highest priority.  Remove the TCB from
2904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the delayed list, and add it to the ready list.
2905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	If an event is for a queue that is locked then this function will never
2907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	get called - the lock count on the queue will get modified instead.  This
2908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	means exclusive access to the event list is guaranteed here.
2909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	This function assumes that a check has already been made to ensure that
2911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxEventList is not empty. */
2912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxUnblockedTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxEventList );
2913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
2914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
2915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
2917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
2919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddTaskToReadyList( pxUnblockedTCB );
2920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
2922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The delayed and ready lists cannot be accessed, so hold this task
2924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pending until the scheduler is resumed. */
2925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
2926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
2929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Return true if the task removed from the event list has a higher
2931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority than the calling task.  This allows the calling task to know if
2932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		it should force a context switch now. */
2933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = pdTRUE;
2934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Mark that a yield is pending in case the user is not using the
2936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		"xHigherPriorityTaskWoken" parameter to an ISR safe FreeRTOS function. */
2937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xYieldPending = pdTRUE;
2938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
ARM GAS  /tmp/cclVzO8U.s 			page 59


2939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
2940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = pdFALSE;
2942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configUSE_TICKLESS_IDLE != 0 )
2945:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If a task is blocked on a kernel object then xNextTaskUnblockTime
2947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		might be set to the blocked task's time out time.  If the task is
2948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		unblocked for a reason other than a timeout xNextTaskUnblockTime is
2949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		normally left unchanged, because it is automatically reset to a new
2950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		value when the tick count equals xNextTaskUnblockTime.  However if
2951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		tickless idling is used it might be more important to enter sleep mode
2952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		at the earliest possible time - so reset xNextTaskUnblockTime here to
2953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		ensure it is updated at the earliest possible time. */
2954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvResetNextTaskUnblockTime();
2955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2956:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
2957:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xReturn;
2959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskRemoveFromUnorderedEventList( ListItem_t * pxEventListItem, const TickType_t xItemV
2963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
2965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
2966:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED.  It is used by
2968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the event flags implementation. */
2969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( uxSchedulerSuspended != pdFALSE );
2970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Store the new item value in the event list. */
2972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( pxEventListItem, xItemValue | taskEVENT_LIST_ITEM_VALUE_IN_USE );
2973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Remove the event list form the event flag.  Interrupts do not access
2975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	event flags. */
2976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxUnblockedTCB = ( TCB_t * ) listGET_LIST_ITEM_OWNER( pxEventListItem );
2977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
2978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
2979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Remove the task from the delayed list and add it to the ready list.  The
2981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	scheduler is suspended so interrupts will not be accessing the ready
2982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	lists. */
2983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
2984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddTaskToReadyList( pxUnblockedTCB );
2985:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
2987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Return true if the task removed from the event list has
2989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		a higher priority than the calling task.  This allows
2990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the calling task to know if it should force a context
2991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		switch now. */
2992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = pdTRUE;
2993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Mark that a yield is pending in case the user is not using the
2995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		"xHigherPriorityTaskWoken" parameter to an ISR safe FreeRTOS function. */
ARM GAS  /tmp/cclVzO8U.s 			page 60


2996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xYieldPending = pdTRUE;
2997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
2999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = pdFALSE;
3001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xReturn;
3004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskSetTimeOutState( TimeOut_t * const pxTimeOut )
3008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTimeOut );
3010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xOverflowCount = xNumOfOverflows;
3011:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
3012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3013:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3014:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskCheckForTimeOut( TimeOut_t * const pxTimeOut, TickType_t * const pxTicksToWait )
3016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
3018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTimeOut );
3020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
3021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
3023:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Minor optimisation.  The tick count cannot change in this block. */
3025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		const TickType_t xConstTickCount = xTickCount;
3026:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( INCLUDE_xTaskAbortDelay == 1 )
3028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->ucDelayAborted != pdFALSE )
3029:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The delay was aborted, which is not the same as a time out,
3031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				but has the same result. */
3032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ucDelayAborted = pdFALSE;
3033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
3034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3035:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3037:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3038:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( INCLUDE_vTaskSuspend == 1 )
3039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( *pxTicksToWait == portMAX_DELAY )
3040:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If INCLUDE_vTaskSuspend is set to 1 and the block time
3042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				specified is the maximum block time then the task should block
3043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				indefinitely, and therefore never time out. */
3044:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdFALSE;
3045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3048:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEn
3050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The tick count is greater than the time at which
3052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSetTimeout() was called, but has also overflowed since
ARM GAS  /tmp/cclVzO8U.s 			page 61


3053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSetTimeOut() was called.  It must have wrapped all the way
3054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			around and gone past again. This passed since vTaskSetTimeout()
3055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			was called. */
3056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdTRUE;
3057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else if( ( ( TickType_t ) ( xConstTickCount - pxTimeOut->xTimeOnEntering ) ) < *pxTicksToWait ) /
3059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Not a genuine timeout. Adjust parameters for time remaining. */
3061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			*pxTicksToWait -= ( xConstTickCount - pxTimeOut->xTimeOnEntering );
3062:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSetTimeOutState( pxTimeOut );
3063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdFALSE;
3064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdTRUE;
3068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskEXIT_CRITICAL();
3071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xReturn;
3073:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskMissedYield( void )
3077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xYieldPending = pdTRUE;
3079:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3080:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskGetTaskNumber( TaskHandle_t xTask )
3085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3086:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn;
3087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3089:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTask != NULL )
3090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3091:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = ( TCB_t * ) xTask;
3092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxTaskNumber;
3093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3094:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = 0U;
3097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3098:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxReturn;
3100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskSetTaskNumber( TaskHandle_t xTask, const UBaseType_t uxHandle )
3108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
ARM GAS  /tmp/cclVzO8U.s 			page 62


3110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTask != NULL )
3112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = ( TCB_t * ) xTask;
3114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->uxTaskNumber = uxHandle;
3115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
3121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * -----------------------------------------------------------
3122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The Idle task.
3123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * ----------------------------------------------------------
3124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
3125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The portTASK_FUNCTION() macro is used to allow port/compiler specific
3126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * language extensions.  The equivalent prototype for this function is:
3127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
3128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * void prvIdleTask( void *pvParameters );
3129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
3130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
3131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static portTASK_FUNCTION( prvIdleTask, pvParameters )
3132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop warnings. */
3134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) pvParameters;
3135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/** THIS IS THE RTOS IDLE TASK - WHICH IS CREATED AUTOMATICALLY WHEN THE
3137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	SCHEDULER IS STARTED. **/
3138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	for( ;; )
3140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* See if any tasks have deleted themselves - if so then the idle task
3142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is responsible for freeing the deleted task's TCB and stack. */
3143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvCheckTasksWaitingTermination();
3144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_PREEMPTION == 0 )
3146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If we are not using preemption we keep forcing a task switch to
3148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			see if any other task has become available.  If we are using
3149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			preemption we don't need to do this as any task becoming available
3150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			will automatically get the processor anyway. */
3151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskYIELD();
3152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_PREEMPTION */
3154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( ( configUSE_PREEMPTION == 1 ) && ( configIDLE_SHOULD_YIELD == 1 ) )
3156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* When using preemption tasks of equal priority will be
3158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			timesliced.  If a task that is sharing the idle priority is ready
3159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			to run then the idle task should yield before the end of the
3160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			timeslice.
3161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			A critical region is not required here as we are just reading from
3163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the list, and an occasional incorrect value will not matter.  If
3164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the ready list at the idle priority contains more than one task
3165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			then a task other than the idle task is ready to execute. */
3166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
ARM GAS  /tmp/cclVzO8U.s 			page 63


3167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskYIELD();
3169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* ( ( configUSE_PREEMPTION == 1 ) && ( configIDLE_SHOULD_YIELD == 1 ) ) */
3176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_IDLE_HOOK == 1 )
3178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			extern void vApplicationIdleHook( void );
3180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Call the user defined function from within the idle task.  This
3182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			allows the application designer to add background functionality
3183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			without the overhead of a separate task.
3184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			NOTE: vApplicationIdleHook() MUST NOT, UNDER ANY CIRCUMSTANCES,
3185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			CALL A FUNCTION THAT MIGHT BLOCK. */
3186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vApplicationIdleHook();
3187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_IDLE_HOOK */
3189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This conditional compilation should use inequality to 0, not equality
3191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		to 1.  This is to ensure portSUPPRESS_TICKS_AND_SLEEP() is called when
3192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		user defined low power mode	implementations require
3193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configUSE_TICKLESS_IDLE to be set to a value other than 1. */
3194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_TICKLESS_IDLE != 0 )
3195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		TickType_t xExpectedIdleTime;
3197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* It is not desirable to suspend then resume the scheduler on
3199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			each iteration of the idle task.  Therefore, a preliminary
3200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			test of the expected idle time is performed without the
3201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			scheduler suspended.  The result here is not necessarily
3202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			valid. */
3203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xExpectedIdleTime = prvGetExpectedIdleTime();
3204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xExpectedIdleTime >= configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
3206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vTaskSuspendAll();
3208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Now the scheduler is suspended, the expected idle
3210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					time can be sampled again, and this time its value can
3211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					be used. */
3212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					configASSERT( xNextTaskUnblockTime >= xTickCount );
3213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xExpectedIdleTime = prvGetExpectedIdleTime();
3214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( xExpectedIdleTime >= configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
3216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						traceLOW_POWER_IDLE_BEGIN();
3218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime );
3219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						traceLOW_POWER_IDLE_END();
3220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
3222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
ARM GAS  /tmp/cclVzO8U.s 			page 64


3224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) xTaskResumeAll();
3227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_TICKLESS_IDLE */
3234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TICKLESS_IDLE != 0 )
3239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	eSleepModeStatus eTaskConfirmSleepModeStatus( void )
3241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* The idle task exists in addition to the application tasks. */
3243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const UBaseType_t uxNonApplicationTasks = 1;
3244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	eSleepModeStatus eReturn = eStandardSleep;
3245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( &xPendingReadyList ) != 0 )
3247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* A task was made ready while the scheduler was suspended. */
3249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			eReturn = eAbortSleep;
3250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else if( xYieldPending != pdFALSE )
3252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* A yield was pended while the scheduler was suspended. */
3254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			eReturn = eAbortSleep;
3255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If all the tasks are in the suspended list (which might mean they
3259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			have an infinite block time rather than actually being suspended)
3260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			then it is safe to turn all clocks off and just wait for external
3261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			interrupts. */
3262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == ( uxCurrentNumberOfTasks - uxNonApplicatio
3263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				eReturn = eNoTasksWaitingTimeout;
3265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return eReturn;
3273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
3276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
3279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskSetThreadLocalStoragePointer( TaskHandle_t xTaskToSet, BaseType_t xIndex, void *pvValue 
ARM GAS  /tmp/cclVzO8U.s 			page 65


3281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xIndex < configNUM_THREAD_LOCAL_STORAGE_POINTERS )
3285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToSet );
3287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->pvThreadLocalStoragePointers[ xIndex ] = pvValue;
3288:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3290:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3291:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configNUM_THREAD_LOCAL_STORAGE_POINTERS */
3292:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3293:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3294:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
3295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3296:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void *pvTaskGetThreadLocalStoragePointer( TaskHandle_t xTaskToQuery, BaseType_t xIndex )
3297:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void *pvReturn = NULL;
3299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xIndex < configNUM_THREAD_LOCAL_STORAGE_POINTERS )
3302:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToQuery );
3304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pvReturn = pxTCB->pvThreadLocalStoragePointers[ xIndex ];
3305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3308:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pvReturn = NULL;
3309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3310:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return pvReturn;
3312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configNUM_THREAD_LOCAL_STORAGE_POINTERS */
3315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3317:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( portUSING_MPU_WRAPPERS == 1 )
3318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3319:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskAllocateMPURegions( TaskHandle_t xTaskToModify, const MemoryRegion_t * const xRegions )
3320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If null is passed in here then we are modifying the MPU settings of
3324:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the calling task. */
3325:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTaskToModify );
3326:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vPortStoreTaskMPUSettings( &( pxTCB->xMPUSettings ), xRegions, NULL, 0 );
3328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3329:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3330:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* portUSING_MPU_WRAPPERS */
3331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3332:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvInitialiseTaskLists( void )
3334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxPriority;
3336:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriorit
ARM GAS  /tmp/cclVzO8U.s 			page 66


3338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
3340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xDelayedTaskList1 );
3343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xDelayedTaskList2 );
3344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xPendingReadyList );
3345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( INCLUDE_vTaskDelete == 1 )
3347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInitialise( &xTasksWaitingTermination );
3349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* INCLUDE_vTaskDelete */
3351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( INCLUDE_vTaskSuspend == 1 )
3353:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInitialise( &xSuspendedTaskList );
3355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* INCLUDE_vTaskSuspend */
3357:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3358:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
3359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	using list2. */
3360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxDelayedTaskList = &xDelayedTaskList1;
3361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
3362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvCheckTasksWaitingTermination( void )
3366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3368:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/** THIS FUNCTION IS CALLED FROM THE RTOS IDLE TASK **/
3369:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( INCLUDE_vTaskDelete == 1 )
3371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3372:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		BaseType_t xListIsEmpty;
3373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* ucTasksDeleted is used to prevent vTaskSuspendAll() being called
3375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		too often in the idle task. */
3376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
3377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
3379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xListIsEmpty = listLIST_IS_EMPTY( &xTasksWaitingTermination );
3381:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( void ) xTaskResumeAll();
3383:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xListIsEmpty == pdFALSE )
3385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				TCB_t *pxTCB;
3387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3388:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskENTER_CRITICAL();
3389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) );
3391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
3392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					--uxCurrentNumberOfTasks;
3393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					--uxDeletedTasksWaitingCleanUp;
3394:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
ARM GAS  /tmp/cclVzO8U.s 			page 67


3395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskEXIT_CRITICAL();
3396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvDeleteTCB( pxTCB );
3398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3400:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3404:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* INCLUDE_vTaskDelete */
3406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TRACE_FACILITY == 1 )
3410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskGetInfo( TaskHandle_t xTask, TaskStatus_t *pxTaskStatus, BaseType_t xGetFreeStackSpace, 
3412:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3414:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3415:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* xTask is NULL then get the state of the calling task. */
3416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
3417:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3418:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->xHandle = ( TaskHandle_t ) pxTCB;
3419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->pcTaskName = ( const char * ) &( pxTCB->pcTaskName [ 0 ] );
3420:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->uxCurrentPriority = pxTCB->uxPriority;
3421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->pxStackBase = pxTCB->pxStack;
3422:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->xTaskNumber = pxTCB->uxTCBNumber;
3423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( INCLUDE_vTaskSuspend == 1 )
3425:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3426:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the task is in the suspended list then there is a chance it is
3427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			actually just blocked indefinitely - so really it should be reported as
3428:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			being in the Blocked state. */
3429:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTaskStatus->eCurrentState == eSuspended )
3430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3431:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vTaskSuspendAll();
3432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3433:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
3434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3435:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxTaskStatus->eCurrentState = eBlocked;
3436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3437:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xTaskResumeAll();
3439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* INCLUDE_vTaskSuspend */
3442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_MUTEXES == 1 )
3444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3445:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->uxBasePriority = pxTCB->uxBasePriority;
3446:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else
3448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->uxBasePriority = 0;
3450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
ARM GAS  /tmp/cclVzO8U.s 			page 68


3452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configGENERATE_RUN_TIME_STATS == 1 )
3454:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3455:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->ulRunTimeCounter = pxTCB->ulRunTimeCounter;
3456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else
3458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3459:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->ulRunTimeCounter = 0;
3460:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Obtaining the task state is a little fiddly, so is only done if the value
3464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		of eState passed into this function is eInvalid - otherwise the state is
3465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		just set to whatever is passed in. */
3466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( eState != eInvalid )
3467:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3468:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->eCurrentState = eState;
3469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3471:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3472:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->eCurrentState = eTaskGetState( xTask );
3473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3474:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Obtaining the stack space takes some time, so the xGetFreeStackSpace
3476:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		parameter is provided to allow it to be skipped. */
3477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xGetFreeStackSpace != pdFALSE )
3478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( portSTACK_GROWTH > 0 )
3480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) pxTCB->pxEndOfSt
3482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#else
3484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) pxTCB->pxStack )
3486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
3488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->usStackHighWaterMark = 0;
3492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3497:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static UBaseType_t prvListTasksWithinSingleList( TaskStatus_t *pxTaskStatusArray, List_t *pxList, 
3501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	volatile TCB_t *pxNextTCB, *pxFirstTCB;
3503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTask = 0;
3504:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
3506:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList );
3508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cclVzO8U.s 			page 69


3509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Populate an TaskStatus_t structure within the
3510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatusArray array for each task that is referenced from
3511:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxList.  See the definition of TaskStatus_t in task.h for the
3512:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			meaning of each TaskStatus_t structure member. */
3513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			do
3514:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList );
3516:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE, eState );
3517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxTask++;
3518:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			} while( pxNextTCB != pxFirstTCB );
3519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3522:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxTask;
3526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) )
3532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static uint16_t prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte )
3534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulCount = 0U;
3536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		while( *pucStackByte == ( uint8_t ) tskSTACK_FILL_BYTE )
3538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3539:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pucStackByte -= portSTACK_GROWTH;
3540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulCount++;
3541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		ulCount /= ( uint32_t ) sizeof( StackType_t ); /*lint !e961 Casting is not redundant on smaller a
3544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return ( uint16_t ) ulCount;
3546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) ) */
3549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3551:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_uxTaskGetStackHighWaterMark == 1 )
3552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskGetStackHighWaterMark( TaskHandle_t xTask )
3554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t *pucEndOfStack;
3557:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn;
3558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
3560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if portSTACK_GROWTH < 0
3562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxStack;
3564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3565:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else
ARM GAS  /tmp/cclVzO8U.s 			page 70


3566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxEndOfStack;
3568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3569:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxReturn = ( UBaseType_t ) prvTaskCheckFreeStackSpace( pucEndOfStack );
3572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxReturn;
3574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_uxTaskGetStackHighWaterMark */
3577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3578:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
3580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static void prvDeleteTCB( TCB_t *pxTCB )
3582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3583:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This call is required specifically for the TriCore port.  It must be
3584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		above the vPortFree() calls.  The call is also used by ports/demos that
3585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		want to allocate and clean RAM statically. */
3586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAN_UP_TCB( pxTCB );
3587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Free up the memory allocated by the scheduler for the task.  It is up
3589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		to the task to free any memory allocated at the application level. */
3590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
3591:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
3593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
3595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 ) && ( p
3597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The task can only have been allocated dynamically - free both
3599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the stack and TCB. */
3600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTCB->pxStack );
3601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTCB );
3602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE == 1 )
3604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The task could have been allocated statically or dynamically, so
3606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			check what was statically allocated before trying to free the
3607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			memory. */
3608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
3609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Both the stack and TCB were allocated dynamically, so both
3611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				must be freed. */
3612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vPortFree( pxTCB->pxStack );
3613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vPortFree( pxTCB );
3614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
3616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Only the stack was statically allocated, so the TCB is the
3618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				only memory that must be freed. */
3619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vPortFree( pxTCB );
3620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
ARM GAS  /tmp/cclVzO8U.s 			page 71


3623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Neither the stack nor the TCB were allocated dynamically, so
3624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				nothing needs to be freed. */
3625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	)
3626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3629:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
3630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelete */
3633:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvResetNextTaskUnblockTime( void )
3636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 126              		.loc 1 3636 1 is_stmt 1 view -0
 127              		.cfi_startproc
 128              		@ args = 0, pretend = 0, frame = 0
 129              		@ frame_needed = 0, uses_anonymous_args = 0
 130              		@ link register save eliminated.
3637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB;
 131              		.loc 1 3637 1 view .LVU31
3638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 132              		.loc 1 3639 2 view .LVU32
 133              		.loc 1 3639 6 is_stmt 0 view .LVU33
 134 0000 084B     		ldr	r3, .L15
 135 0002 1B68     		ldr	r3, [r3]
 136 0004 1B68     		ldr	r3, [r3]
 137              		.loc 1 3639 45 view .LVU34
 138 0006 23B9     		cbnz	r3, .L13
3640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
3642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the maximum possible value so it is	extremely unlikely that the
3643:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
3644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		there is an item in the delayed list. */
3645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = portMAX_DELAY;
 139              		.loc 1 3645 3 is_stmt 1 view .LVU35
 140              		.loc 1 3645 24 is_stmt 0 view .LVU36
 141 0008 074B     		ldr	r3, .L15+4
 142 000a 4FF0FF32 		mov	r2, #-1
 143 000e 1A60     		str	r2, [r3]
 144 0010 7047     		bx	lr
 145              	.L13:
3646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
3648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The new current delayed list is not empty, get the value of
3650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the item at the head of the delayed list.  This is the time at
3651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		which the task at the head of the delayed list should be removed
3652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from the Blocked state. */
3653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( pxTCB ) = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
 146              		.loc 1 3653 3 is_stmt 1 view .LVU37
 147              		.loc 1 3653 27 is_stmt 0 view .LVU38
 148 0012 044B     		ldr	r3, .L15
 149 0014 1B68     		ldr	r3, [r3]
 150 0016 DB68     		ldr	r3, [r3, #12]
 151              		.loc 1 3653 13 view .LVU39
ARM GAS  /tmp/cclVzO8U.s 			page 72


 152 0018 DB68     		ldr	r3, [r3, #12]
 153              	.LVL9:
3654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 154              		.loc 1 3654 3 is_stmt 1 view .LVU40
 155              		.loc 1 3654 26 is_stmt 0 view .LVU41
 156 001a 5A68     		ldr	r2, [r3, #4]
 157              		.loc 1 3654 24 view .LVU42
 158 001c 024B     		ldr	r3, .L15+4
 159              	.LVL10:
 160              		.loc 1 3654 24 view .LVU43
 161 001e 1A60     		str	r2, [r3]
3655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 162              		.loc 1 3656 1 view .LVU44
 163 0020 7047     		bx	lr
 164              	.L16:
 165 0022 00BF     		.align	2
 166              	.L15:
 167 0024 00000000 		.word	.LANCHOR2
 168 0028 00000000 		.word	.LANCHOR3
 169              		.cfi_endproc
 170              	.LFE622:
 172              		.section	.text.prvDeleteTCB,"ax",%progbits
 173              		.align	1
 174              		.syntax unified
 175              		.thumb
 176              		.thumb_func
 177              		.fpu softvfp
 179              	prvDeleteTCB:
 180              	.LVL11:
 181              	.LFB621:
3582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This call is required specifically for the TriCore port.  It must be
 182              		.loc 1 3582 2 is_stmt 1 view -0
 183              		.cfi_startproc
 184              		@ args = 0, pretend = 0, frame = 0
 185              		@ frame_needed = 0, uses_anonymous_args = 0
3582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This call is required specifically for the TriCore port.  It must be
 186              		.loc 1 3582 2 is_stmt 0 view .LVU46
 187 0000 10B5     		push	{r4, lr}
 188              	.LCFI0:
 189              		.cfi_def_cfa_offset 8
 190              		.cfi_offset 4, -8
 191              		.cfi_offset 14, -4
 192 0002 0446     		mov	r4, r0
3586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 193              		.loc 1 3586 3 is_stmt 1 view .LVU47
3600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTCB );
 194              		.loc 1 3600 4 view .LVU48
 195 0004 006B     		ldr	r0, [r0, #48]
 196              	.LVL12:
3600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTCB );
 197              		.loc 1 3600 4 is_stmt 0 view .LVU49
 198 0006 FFF7FEFF 		bl	vPortFree
 199              	.LVL13:
3601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 200              		.loc 1 3601 4 is_stmt 1 view .LVU50
 201 000a 2046     		mov	r0, r4
ARM GAS  /tmp/cclVzO8U.s 			page 73


 202 000c FFF7FEFF 		bl	vPortFree
 203              	.LVL14:
3630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 204              		.loc 1 3630 2 is_stmt 0 view .LVU51
 205 0010 10BD     		pop	{r4, pc}
3630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 206              		.loc 1 3630 2 view .LVU52
 207              		.cfi_endproc
 208              	.LFE621:
 210              		.section	.text.prvInitialiseNewTask,"ax",%progbits
 211              		.align	1
 212              		.syntax unified
 213              		.thumb
 214              		.thumb_func
 215              		.fpu softvfp
 217              	prvInitialiseNewTask:
 218              	.LVL15:
 219              	.LFB590:
 775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** StackType_t *pxTopOfStack;
 220              		.loc 1 775 1 is_stmt 1 view -0
 221              		.cfi_startproc
 222              		@ args = 16, pretend = 0, frame = 0
 223              		@ frame_needed = 0, uses_anonymous_args = 0
 775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** StackType_t *pxTopOfStack;
 224              		.loc 1 775 1 is_stmt 0 view .LVU54
 225 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 226              	.LCFI1:
 227              		.cfi_def_cfa_offset 32
 228              		.cfi_offset 4, -32
 229              		.cfi_offset 5, -28
 230              		.cfi_offset 6, -24
 231              		.cfi_offset 7, -20
 232              		.cfi_offset 8, -16
 233              		.cfi_offset 9, -12
 234              		.cfi_offset 10, -8
 235              		.cfi_offset 14, -4
 236 0004 8046     		mov	r8, r0
 237 0006 9946     		mov	r9, r3
 238 0008 089D     		ldr	r5, [sp, #32]
 239 000a 099F     		ldr	r7, [sp, #36]
 240 000c 0A9C     		ldr	r4, [sp, #40]
 776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t x;
 241              		.loc 1 776 1 is_stmt 1 view .LVU55
 777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 242              		.loc 1 777 1 view .LVU56
 807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 243              		.loc 1 807 3 view .LVU57
 807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 244              		.loc 1 807 26 is_stmt 0 view .LVU58
 245 000e 266B     		ldr	r6, [r4, #48]
 807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 246              		.loc 1 807 36 view .LVU59
 247 0010 02F18042 		add	r2, r2, #1073741824
 248              	.LVL16:
 807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 249              		.loc 1 807 36 view .LVU60
 250 0014 013A     		subs	r2, r2, #1
ARM GAS  /tmp/cclVzO8U.s 			page 74


 251              	.LVL17:
 807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 252              		.loc 1 807 16 view .LVU61
 253 0016 06EB8206 		add	r6, r6, r2, lsl #2
 254              	.LVL18:
 808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 255              		.loc 1 808 3 is_stmt 1 view .LVU62
 808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 256              		.loc 1 808 81 is_stmt 0 view .LVU63
 257 001a 26F00706 		bic	r6, r6, #7
 258              	.LVL19:
 811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 259              		.loc 1 811 3 is_stmt 1 view .LVU64
 811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 260              		.loc 1 811 124 view .LVU65
 827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 261              		.loc 1 827 2 view .LVU66
 827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 262              		.loc 1 827 9 is_stmt 0 view .LVU67
 263 001e 0023     		movs	r3, #0
 264              	.LVL20:
 265              	.L20:
 827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 266              		.loc 1 827 2 discriminator 1 view .LVU68
 267 0020 0F2B     		cmp	r3, #15
 268 0022 06D8     		bhi	.L21
 829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 269              		.loc 1 829 3 is_stmt 1 view .LVU69
 829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 270              		.loc 1 829 37 is_stmt 0 view .LVU70
 271 0024 CA5C     		ldrb	r2, [r1, r3]	@ zero_extendqisi2
 829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 272              		.loc 1 829 29 view .LVU71
 273 0026 E018     		adds	r0, r4, r3
 274 0028 80F83420 		strb	r2, [r0, #52]
 834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 275              		.loc 1 834 3 is_stmt 1 view .LVU72
 834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 276              		.loc 1 834 5 is_stmt 0 view .LVU73
 277 002c 0AB1     		cbz	r2, .L21
 840:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 278              		.loc 1 840 28 is_stmt 1 discriminator 2 view .LVU74
 827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 279              		.loc 1 827 76 is_stmt 0 discriminator 2 view .LVU75
 280 002e 0133     		adds	r3, r3, #1
 281              	.LVL21:
 827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 282              		.loc 1 827 76 discriminator 2 view .LVU76
 283 0030 F6E7     		b	.L20
 284              	.L21:
 846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 285              		.loc 1 846 2 is_stmt 1 view .LVU77
 846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 286              		.loc 1 846 54 is_stmt 0 view .LVU78
 287 0032 0023     		movs	r3, #0
 288              	.LVL22:
 846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cclVzO8U.s 			page 75


 289              		.loc 1 846 54 view .LVU79
 290 0034 84F84330 		strb	r3, [r4, #67]
 850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 291              		.loc 1 850 2 is_stmt 1 view .LVU80
 850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 292              		.loc 1 850 4 is_stmt 0 view .LVU81
 293 0038 062D     		cmp	r5, #6
 294 003a 00D9     		bls	.L23
 852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 295              		.loc 1 852 14 view .LVU82
 296 003c 0625     		movs	r5, #6
 297              	.L23:
 298              	.LVL23:
 856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 299              		.loc 1 856 27 is_stmt 1 view .LVU83
 859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 300              		.loc 1 859 2 view .LVU84
 859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 301              		.loc 1 859 23 is_stmt 0 view .LVU85
 302 003e E562     		str	r5, [r4, #44]
 862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxMutexesHeld = 0;
 303              		.loc 1 862 3 is_stmt 1 view .LVU86
 862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxMutexesHeld = 0;
 304              		.loc 1 862 28 is_stmt 0 view .LVU87
 305 0040 6564     		str	r5, [r4, #68]
 863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 306              		.loc 1 863 3 is_stmt 1 view .LVU88
 863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 307              		.loc 1 863 27 is_stmt 0 view .LVU89
 308 0042 4FF0000A 		mov	r10, #0
 309 0046 C4F848A0 		str	r10, [r4, #72]
 867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 310              		.loc 1 867 2 is_stmt 1 view .LVU90
 311 004a 201D     		adds	r0, r4, #4
 312 004c FFF7FEFF 		bl	vListInitialiseItem
 313              	.LVL24:
 868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 314              		.loc 1 868 2 view .LVU91
 315 0050 04F11800 		add	r0, r4, #24
 316 0054 FFF7FEFF 		bl	vListInitialiseItem
 317              	.LVL25:
 872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 318              		.loc 1 872 2 view .LVU92
 319 0058 2461     		str	r4, [r4, #16]
 875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 320              		.loc 1 875 2 view .LVU93
 321 005a C5F10705 		rsb	r5, r5, #7
 322              	.LVL26:
 875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 323              		.loc 1 875 2 is_stmt 0 view .LVU94
 324 005e A561     		str	r5, [r4, #24]
 876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 325              		.loc 1 876 2 is_stmt 1 view .LVU95
 326 0060 6462     		str	r4, [r4, #36]
 903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 327              		.loc 1 903 3 view .LVU96
 918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
ARM GAS  /tmp/cclVzO8U.s 			page 76


 328              		.loc 1 918 3 view .LVU97
 918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 329              		.loc 1 918 29 is_stmt 0 view .LVU98
 330 0062 C4F84CA0 		str	r10, [r4, #76]
 919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 331              		.loc 1 919 3 is_stmt 1 view .LVU99
 919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 332              		.loc 1 919 27 is_stmt 0 view .LVU100
 333 0066 84F850A0 		strb	r10, [r4, #80]
 946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 334              		.loc 1 946 3 is_stmt 1 view .LVU101
 946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 335              		.loc 1 946 28 is_stmt 0 view .LVU102
 336 006a 4A46     		mov	r2, r9
 337 006c 4146     		mov	r1, r8
 338 006e 3046     		mov	r0, r6
 339 0070 FFF7FEFF 		bl	pxPortInitialiseStack
 340              	.LVL27:
 946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 341              		.loc 1 946 26 view .LVU103
 342 0074 2060     		str	r0, [r4]
 950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 343              		.loc 1 950 2 is_stmt 1 view .LVU104
 950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 344              		.loc 1 950 4 is_stmt 0 view .LVU105
 345 0076 07B1     		cbz	r7, .L19
 954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 346              		.loc 1 954 3 is_stmt 1 view .LVU106
 954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 347              		.loc 1 954 18 is_stmt 0 view .LVU107
 348 0078 3C60     		str	r4, [r7]
 958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 349              		.loc 1 958 27 is_stmt 1 view .LVU108
 350              	.L19:
 960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 351              		.loc 1 960 1 is_stmt 0 view .LVU109
 352 007a BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 353              		.loc 1 960 1 view .LVU110
 354              		.cfi_endproc
 355              	.LFE590:
 357              		.section	.text.prvInitialiseTaskLists,"ax",%progbits
 358              		.align	1
 359              		.syntax unified
 360              		.thumb
 361              		.thumb_func
 362              		.fpu softvfp
 364              	prvInitialiseTaskLists:
 365              	.LFB619:
3334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxPriority;
 366              		.loc 1 3334 1 is_stmt 1 view -0
 367              		.cfi_startproc
 368              		@ args = 0, pretend = 0, frame = 0
 369              		@ frame_needed = 0, uses_anonymous_args = 0
 370 0000 38B5     		push	{r3, r4, r5, lr}
 371              	.LCFI2:
 372              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/cclVzO8U.s 			page 77


 373              		.cfi_offset 3, -16
 374              		.cfi_offset 4, -12
 375              		.cfi_offset 5, -8
 376              		.cfi_offset 14, -4
3335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 377              		.loc 1 3335 1 view .LVU112
3337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 378              		.loc 1 3337 2 view .LVU113
 379              	.LVL28:
3337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 380              		.loc 1 3337 18 is_stmt 0 view .LVU114
 381 0002 0024     		movs	r4, #0
 382              	.LVL29:
 383              	.L28:
3337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 384              		.loc 1 3337 2 discriminator 1 view .LVU115
 385 0004 062C     		cmp	r4, #6
 386 0006 08D8     		bhi	.L31
3339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 387              		.loc 1 3339 3 is_stmt 1 discriminator 3 view .LVU116
 388 0008 04EB8402 		add	r2, r4, r4, lsl #2
 389 000c 9300     		lsls	r3, r2, #2
 390 000e 0E48     		ldr	r0, .L32
 391 0010 1844     		add	r0, r0, r3
 392 0012 FFF7FEFF 		bl	vListInitialise
 393              	.LVL30:
3337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 394              		.loc 1 3337 101 is_stmt 0 discriminator 3 view .LVU117
 395 0016 0134     		adds	r4, r4, #1
 396              	.LVL31:
3337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 397              		.loc 1 3337 101 discriminator 3 view .LVU118
 398 0018 F4E7     		b	.L28
 399              	.L31:
3342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xDelayedTaskList2 );
 400              		.loc 1 3342 2 is_stmt 1 view .LVU119
 401 001a 0C4D     		ldr	r5, .L32+4
 402 001c 2846     		mov	r0, r5
 403 001e FFF7FEFF 		bl	vListInitialise
 404              	.LVL32:
3343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xPendingReadyList );
 405              		.loc 1 3343 2 view .LVU120
 406 0022 0B4C     		ldr	r4, .L32+8
 407              	.LVL33:
3343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xPendingReadyList );
 408              		.loc 1 3343 2 is_stmt 0 view .LVU121
 409 0024 2046     		mov	r0, r4
 410 0026 FFF7FEFF 		bl	vListInitialise
 411              	.LVL34:
3344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 412              		.loc 1 3344 2 is_stmt 1 view .LVU122
 413 002a 0A48     		ldr	r0, .L32+12
 414 002c FFF7FEFF 		bl	vListInitialise
 415              	.LVL35:
3348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 416              		.loc 1 3348 3 view .LVU123
 417 0030 0948     		ldr	r0, .L32+16
ARM GAS  /tmp/cclVzO8U.s 			page 78


 418 0032 FFF7FEFF 		bl	vListInitialise
 419              	.LVL36:
3354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 420              		.loc 1 3354 3 view .LVU124
 421 0036 0948     		ldr	r0, .L32+20
 422 0038 FFF7FEFF 		bl	vListInitialise
 423              	.LVL37:
3360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 424              		.loc 1 3360 2 view .LVU125
3360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 425              		.loc 1 3360 20 is_stmt 0 view .LVU126
 426 003c 084B     		ldr	r3, .L32+24
 427 003e 1D60     		str	r5, [r3]
3361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 428              		.loc 1 3361 2 is_stmt 1 view .LVU127
3361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 429              		.loc 1 3361 28 is_stmt 0 view .LVU128
 430 0040 084B     		ldr	r3, .L32+28
 431 0042 1C60     		str	r4, [r3]
3362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 432              		.loc 1 3362 1 view .LVU129
 433 0044 38BD     		pop	{r3, r4, r5, pc}
 434              	.L33:
 435 0046 00BF     		.align	2
 436              	.L32:
 437 0048 00000000 		.word	.LANCHOR4
 438 004c 00000000 		.word	.LANCHOR5
 439 0050 00000000 		.word	.LANCHOR6
 440 0054 00000000 		.word	.LANCHOR1
 441 0058 00000000 		.word	.LANCHOR7
 442 005c 00000000 		.word	.LANCHOR0
 443 0060 00000000 		.word	.LANCHOR2
 444 0064 00000000 		.word	.LANCHOR8
 445              		.cfi_endproc
 446              	.LFE619:
 448              		.section	.text.prvAddNewTaskToReadyList,"ax",%progbits
 449              		.align	1
 450              		.syntax unified
 451              		.thumb
 452              		.thumb_func
 453              		.fpu softvfp
 455              	prvAddNewTaskToReadyList:
 456              	.LVL38:
 457              	.LFB591:
 964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Ensure interrupts don't access the task lists while the lists are being
 458              		.loc 1 964 1 is_stmt 1 view -0
 459              		.cfi_startproc
 460              		@ args = 0, pretend = 0, frame = 0
 461              		@ frame_needed = 0, uses_anonymous_args = 0
 964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Ensure interrupts don't access the task lists while the lists are being
 462              		.loc 1 964 1 is_stmt 0 view .LVU131
 463 0000 10B5     		push	{r4, lr}
 464              	.LCFI3:
 465              		.cfi_def_cfa_offset 8
 466              		.cfi_offset 4, -8
 467              		.cfi_offset 14, -4
 468 0002 0446     		mov	r4, r0
ARM GAS  /tmp/cclVzO8U.s 			page 79


 967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 469              		.loc 1 967 2 is_stmt 1 view .LVU132
 470 0004 FFF7FEFF 		bl	vPortEnterCritical
 471              	.LVL39:
 969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB == NULL )
 472              		.loc 1 969 3 view .LVU133
 969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB == NULL )
 473              		.loc 1 969 25 is_stmt 0 view .LVU134
 474 0008 204A     		ldr	r2, .L41
 475 000a 1368     		ldr	r3, [r2]
 476 000c 0133     		adds	r3, r3, #1
 477 000e 1360     		str	r3, [r2]
 970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 478              		.loc 1 970 3 is_stmt 1 view .LVU135
 970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 479              		.loc 1 970 20 is_stmt 0 view .LVU136
 480 0010 1F4B     		ldr	r3, .L41+4
 481 0012 1B68     		ldr	r3, [r3]
 970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 482              		.loc 1 970 5 view .LVU137
 483 0014 5BB1     		cbz	r3, .L39
 993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 484              		.loc 1 993 4 is_stmt 1 view .LVU138
 993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 485              		.loc 1 993 26 is_stmt 0 view .LVU139
 486 0016 1F4B     		ldr	r3, .L41+8
 487 0018 1B68     		ldr	r3, [r3]
 993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 488              		.loc 1 993 6 view .LVU140
 489 001a 6BB9     		cbnz	r3, .L36
 995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 490              		.loc 1 995 5 is_stmt 1 view .LVU141
 995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 491              		.loc 1 995 21 is_stmt 0 view .LVU142
 492 001c 1C4B     		ldr	r3, .L41+4
 493 001e 1B68     		ldr	r3, [r3]
 494 0020 DA6A     		ldr	r2, [r3, #44]
 995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 495              		.loc 1 995 45 view .LVU143
 496 0022 E36A     		ldr	r3, [r4, #44]
 995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 497              		.loc 1 995 7 view .LVU144
 498 0024 9A42     		cmp	r2, r3
 499 0026 07D8     		bhi	.L36
 997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 500              		.loc 1 997 6 is_stmt 1 view .LVU145
 997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 501              		.loc 1 997 19 is_stmt 0 view .LVU146
 502 0028 194B     		ldr	r3, .L41+4
 503 002a 1C60     		str	r4, [r3]
 504 002c 04E0     		b	.L36
 505              	.L39:
 974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 506              		.loc 1 974 4 is_stmt 1 view .LVU147
 974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 507              		.loc 1 974 17 is_stmt 0 view .LVU148
 508 002e 184B     		ldr	r3, .L41+4
ARM GAS  /tmp/cclVzO8U.s 			page 80


 509 0030 1C60     		str	r4, [r3]
 976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 510              		.loc 1 976 4 is_stmt 1 view .LVU149
 976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 511              		.loc 1 976 31 is_stmt 0 view .LVU150
 512 0032 1368     		ldr	r3, [r2]
 976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 513              		.loc 1 976 6 view .LVU151
 514 0034 012B     		cmp	r3, #1
 515 0036 26D0     		beq	.L40
 516              	.L36:
1006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 517              		.loc 1 1006 29 is_stmt 1 view .LVU152
1010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 518              		.loc 1 1010 3 view .LVU153
1010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 519              		.loc 1 1010 15 is_stmt 0 view .LVU154
 520 0038 174A     		ldr	r2, .L41+12
 521 003a 1368     		ldr	r3, [r2]
 522 003c 0133     		adds	r3, r3, #1
 523 003e 1360     		str	r3, [r2]
1018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 524              		.loc 1 1018 31 is_stmt 1 view .LVU155
1020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 525              		.loc 1 1020 3 view .LVU156
1020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 526              		.loc 1 1020 3 view .LVU157
 527 0040 E36A     		ldr	r3, [r4, #44]
 528 0042 0122     		movs	r2, #1
 529 0044 9A40     		lsls	r2, r2, r3
 530 0046 1549     		ldr	r1, .L41+16
 531 0048 0868     		ldr	r0, [r1]
 532 004a 0243     		orrs	r2, r2, r0
 533 004c 0A60     		str	r2, [r1]
1020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 534              		.loc 1 1020 3 view .LVU158
 535 004e 03EB8303 		add	r3, r3, r3, lsl #2
 536 0052 9A00     		lsls	r2, r3, #2
 537 0054 211D     		adds	r1, r4, #4
 538 0056 1248     		ldr	r0, .L41+20
 539 0058 1044     		add	r0, r0, r2
 540 005a FFF7FEFF 		bl	vListInsertEnd
 541              	.LVL40:
1020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 542              		.loc 1 1020 36 view .LVU159
1022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 543              		.loc 1 1022 3 view .LVU160
1024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 544              		.loc 1 1024 2 view .LVU161
 545 005e FFF7FEFF 		bl	vPortExitCritical
 546              	.LVL41:
1026:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 547              		.loc 1 1026 2 view .LVU162
1026:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 548              		.loc 1 1026 24 is_stmt 0 view .LVU163
 549 0062 0C4B     		ldr	r3, .L41+8
 550 0064 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cclVzO8U.s 			page 81


1026:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 551              		.loc 1 1026 4 view .LVU164
 552 0066 6BB1     		cbz	r3, .L34
1030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 553              		.loc 1 1030 3 is_stmt 1 view .LVU165
1030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 554              		.loc 1 1030 19 is_stmt 0 view .LVU166
 555 0068 094B     		ldr	r3, .L41+4
 556 006a 1B68     		ldr	r3, [r3]
 557 006c DA6A     		ldr	r2, [r3, #44]
1030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 558              		.loc 1 1030 42 view .LVU167
 559 006e E36A     		ldr	r3, [r4, #44]
1030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 560              		.loc 1 1030 5 view .LVU168
 561 0070 9A42     		cmp	r2, r3
 562 0072 07D2     		bcs	.L34
1032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 563              		.loc 1 1032 4 is_stmt 1 view .LVU169
 564 0074 0B4B     		ldr	r3, .L41+24
 565 0076 4FF08052 		mov	r2, #268435456
 566 007a 1A60     		str	r2, [r3]
1032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 567              		.loc 1 1032 4 view .LVU170
 568              		.syntax unified
 569              	@ 1032 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 570 007c BFF34F8F 		dsb
 571              	@ 0 "" 2
1032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 572              		.loc 1 1032 4 view .LVU171
 573              	@ 1032 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 574 0080 BFF36F8F 		isb
 575              	@ 0 "" 2
1032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 576              		.loc 1 1032 35 view .LVU172
1041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 577              		.loc 1 1041 27 view .LVU173
 578              		.thumb
 579              		.syntax unified
 580              	.L34:
1043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 581              		.loc 1 1043 1 is_stmt 0 view .LVU174
 582 0084 10BD     		pop	{r4, pc}
 583              	.LVL42:
 584              	.L40:
 981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 585              		.loc 1 981 5 is_stmt 1 view .LVU175
 586 0086 FFF7FEFF 		bl	prvInitialiseTaskLists
 587              	.LVL43:
 588 008a D5E7     		b	.L36
 589              	.L42:
 590              		.align	2
 591              	.L41:
 592 008c 00000000 		.word	.LANCHOR9
 593 0090 00000000 		.word	.LANCHOR10
 594 0094 00000000 		.word	.LANCHOR11
 595 0098 00000000 		.word	.LANCHOR12
ARM GAS  /tmp/cclVzO8U.s 			page 82


 596 009c 00000000 		.word	.LANCHOR13
 597 00a0 00000000 		.word	.LANCHOR4
 598 00a4 04ED00E0 		.word	-536810236
 599              		.cfi_endproc
 600              	.LFE591:
 602              		.section	.text.prvAddCurrentTaskToDelayedList,"ax",%progbits
 603              		.align	1
 604              		.syntax unified
 605              		.thumb
 606              		.thumb_func
 607              		.fpu softvfp
 609              	prvAddCurrentTaskToDelayedList:
 610              	.LVL44:
 611              	.LFB635:
3657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) )
3660:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xTaskGetCurrentTaskHandle( void )
3662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xReturn;
3664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* A critical section is not required as this is not called from
3666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		an interrupt and the current TCB will always be the same for any
3667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		individual execution thread. */
3668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = pxCurrentTCB;
3669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
3671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) ) */
3674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
3677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskGetSchedulerState( void )
3679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
3681:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning == pdFALSE )
3683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = taskSCHEDULER_NOT_STARTED;
3685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3686:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
3689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = taskSCHEDULER_RUNNING;
3691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = taskSCHEDULER_SUSPENDED;
3695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
3699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
ARM GAS  /tmp/cclVzO8U.s 			page 83


3700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) ) */
3702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
3705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskPriorityInherit( TaskHandle_t const pxMutexHolder )
3707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
3709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the mutex was given back by an interrupt while the queue was
3711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		locked then the mutex holder might now be NULL. */
3712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxMutexHolder != NULL )
3713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the holder of the mutex has a priority below the priority of
3715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the task attempting to obtain the mutex then it will temporarily
3716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			inherit the priority of the task attempting to obtain the mutex. */
3717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->uxPriority < pxCurrentTCB->uxPriority )
3718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Adjust the mutex holder state to account for its new
3720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				priority.  Only reset the event list item value if the value is
3721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				not	being used for anything else. */
3722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE 
3723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( T
3725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
3727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
3729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3731:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If the task being modified is in the ready state it will need
3732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				to be moved into a new list. */
3733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxTCB->uxPriority ] ), &( pxTCB->xStateListI
3734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
3736:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						taskRESET_READY_PRIORITY( pxTCB->uxPriority );
3738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
3740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
3742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Inherit the priority before being moved into the new list. */
3745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = pxCurrentTCB->uxPriority;
3746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
3747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
3749:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Just inherit the priority. */
3751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = pxCurrentTCB->uxPriority;
3752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_PRIORITY_INHERIT( pxTCB, pxCurrentTCB->uxPriority );
3755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
ARM GAS  /tmp/cclVzO8U.s 			page 84


3757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_MUTEXES */
3768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
3771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskPriorityDisinherit( TaskHandle_t const pxMutexHolder )
3773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3774:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
3775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
3776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxMutexHolder != NULL )
3778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* A task can only have an inherited priority if it holds the mutex.
3780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			If the mutex is held by a task then it cannot be given from an
3781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			interrupt, and if a mutex is given by the holding task then it must
3782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			be the running state task. */
3783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB == pxCurrentTCB );
3784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
3786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
3787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Has the holder of the mutex inherited the priority of another
3789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task? */
3790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
3791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Only disinherit if no other mutexes are held. */
3793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
3794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3795:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* A task can only have an inherited priority if it holds
3796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					the mutex.  If the mutex is held by a task then it cannot be
3797:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					given from an interrupt, and if a mutex is given by the
3798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					holding	task then it must be the running state task.  Remove
3799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					the	holding task from the ready	list. */
3800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
3801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						taskRESET_READY_PRIORITY( pxTCB->uxPriority );
3803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
3805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
3807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Disinherit the priority before adding the task into the
3810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					new	ready list. */
3811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_PRIORITY_DISINHERIT( pxTCB, pxTCB->uxBasePriority );
3812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = pxTCB->uxBasePriority;
3813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cclVzO8U.s 			page 85


3814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Reset the event list item value.  It cannot be in use for
3815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					any other purpose if this task is running, and it must be
3816:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					running to give back the mutex. */
3817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( T
3818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
3819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Return true to indicate that a context switch is required.
3821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					This is only actually required in the corner case whereby
3822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					multiple mutexes were held and the mutexes were given back
3823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					in an order different to that in which they were taken.
3824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					If a context switch did not occur when the first mutex was
3825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					returned, even if a task was waiting on it, then a context
3826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					switch should occur when the last mutex is returned whether
3827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					a task is waiting on it or not. */
3828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xReturn = pdTRUE;
3829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3830:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
3831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
3833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3840:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3841:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3844:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
3846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_MUTEXES */
3849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( portCRITICAL_NESTING_IN_TCB == 1 )
3852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskEnterCritical( void )
3854:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portDISABLE_INTERRUPTS();
3856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
3858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxCurrentTCB->uxCriticalNesting )++;
3860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* This is not the interrupt safe version of the enter critical
3862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			function so	assert() if it is being called from an interrupt
3863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			context.  Only API functions that end in "FromISR" can be used in an
3864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			interrupt.  Only assert if the critical nesting count is 1 to
3865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			protect against recursive calls if the assert function also uses a
3866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			critical section. */
3867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->uxCriticalNesting == 1 )
3868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3869:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portASSERT_IF_IN_ISR();
3870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
ARM GAS  /tmp/cclVzO8U.s 			page 86


3871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3873:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* portCRITICAL_NESTING_IN_TCB */
3879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3880:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3881:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( portCRITICAL_NESTING_IN_TCB == 1 )
3882:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskExitCritical( void )
3884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
3886:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->uxCriticalNesting > 0U )
3888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( pxCurrentTCB->uxCriticalNesting )--;
3890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxCurrentTCB->uxCriticalNesting == 0U )
3892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					portENABLE_INTERRUPTS();
3894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
3896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
3898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* portCRITICAL_NESTING_IN_TCB */
3912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
3915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static char *prvWriteNameToBuffer( char *pcBuffer, const char *pcTaskName )
3917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	size_t x;
3919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Start by copying the entire string. */
3921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		strcpy( pcBuffer, pcTaskName );
3922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Pad the end of the string with spaces to ensure columns line up when
3924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		printed out. */
3925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		for( x = strlen( pcBuffer ); x < ( size_t ) ( configMAX_TASK_NAME_LEN - 1 ); x++ )
3926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pcBuffer[ x ] = ' ';
ARM GAS  /tmp/cclVzO8U.s 			page 87


3928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Terminate. */
3931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pcBuffer[ x ] = 0x00;
3932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Return the new end of string. */
3934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return &( pcBuffer[ x ] );
3935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) */
3938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
3941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskList( char * pcWriteBuffer )
3943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskStatus_t *pxTaskStatusArray;
3945:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	volatile UBaseType_t uxArraySize, x;
3946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	char cStatus;
3947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/*
3949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * PLEASE NOTE:
3950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
3951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * This function is provided for convenience only, and is used by many
3952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * of the demo applications.  Do not consider it to be part of the
3953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * scheduler.
3954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
3955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * vTaskList() calls uxTaskGetSystemState(), then formats part of the
3956:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * uxTaskGetSystemState() output into a human readable table that
3957:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * displays task names, states and stack usage.
3958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
3959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * vTaskList() has a dependency on the sprintf() C library function that
3960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * might bloat the code size, use a lot of stack, and provide different
3961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * results on different platforms.  An alternative, tiny, third party,
3962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * and limited functionality implementation of sprintf() is provided in
3963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * many of the FreeRTOS/Demo sub-directories in a file called
3964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * printf-stdarg.c (note printf-stdarg.c does not provide a full
3965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * snprintf() implementation!).
3966:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
3967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * It is recommended that production systems call uxTaskGetSystemState()
3968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * directly to get access to raw stats data, rather than indirectly
3969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * through a call to vTaskList().
3970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 */
3971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Make sure the write buffer does not contain a string. */
3974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		*pcWriteBuffer = 0x00;
3975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Take a snapshot of the number of tasks in case it changes while this
3977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		function is executing. */
3978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxArraySize = uxCurrentNumberOfTasks;
3979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Allocate an array index for each task.  NOTE!  if
3981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configSUPPORT_DYNAMIC_ALLOCATION is set to 0 then pvPortMalloc() will
3982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		equate to NULL. */
3983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatusArray = pvPortMalloc( uxCurrentNumberOfTasks * sizeof( TaskStatus_t ) );
3984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cclVzO8U.s 			page 88


3985:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTaskStatusArray != NULL )
3986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Generate the (binary) data. */
3988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxArraySize = uxTaskGetSystemState( pxTaskStatusArray, uxArraySize, NULL );
3989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Create a human readable table from the binary data. */
3991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			for( x = 0; x < uxArraySize; x++ )
3992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				switch( pxTaskStatusArray[ x ].eCurrentState )
3994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eReady:		cStatus = tskREADY_CHAR;
3996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
3997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eBlocked:		cStatus = tskBLOCKED_CHAR;
3999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eSuspended:	cStatus = tskSUSPENDED_CHAR;
4002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eDeleted:		cStatus = tskDELETED_CHAR;
4005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					default:			/* Should not get here, but it is included
4008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										to prevent static checking errors. */
4009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										cStatus = 0x00;
4010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4011:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4013:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Write the task name to the string, padding with spaces so it
4014:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				can be printed in tabular form more easily. */
4015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pcWriteBuffer = prvWriteNameToBuffer( pcWriteBuffer, pxTaskStatusArray[ x ].pcTaskName );
4016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Write the rest of the string. */
4018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				sprintf( pcWriteBuffer, "\t%c\t%u\t%u\t%u\r\n", cStatus, ( unsigned int ) pxTaskStatusArray[ x 
4019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pcWriteBuffer += strlen( pcWriteBuffer );
4020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Free the array again.  NOTE!  If configSUPPORT_DYNAMIC_ALLOCATION
4023:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			is 0 then vPortFree() will be #defined to nothing. */
4024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTaskStatusArray );
4025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4026:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4029:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) ) */
4033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
4034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4035:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
4036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4037:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskGetRunTimeStats( char *pcWriteBuffer )
4038:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskStatus_t *pxTaskStatusArray;
4040:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	volatile UBaseType_t uxArraySize, x;
4041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulTotalTime, ulStatsAsPercentage;
ARM GAS  /tmp/cclVzO8U.s 			page 89


4042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configUSE_TRACE_FACILITY != 1 )
4044:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#error configUSE_TRACE_FACILITY must also be set to 1 in FreeRTOSConfig.h to use vTaskGetRunTime
4046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
4048:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/*
4050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * PLEASE NOTE:
4051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * This function is provided for convenience only, and is used by many
4053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * of the demo applications.  Do not consider it to be part of the
4054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * scheduler.
4055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * vTaskGetRunTimeStats() calls uxTaskGetSystemState(), then formats part
4057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * of the uxTaskGetSystemState() output into a human readable table that
4058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * displays the amount of time each task has spent in the Running state
4059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * in both absolute and percentage terms.
4060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * vTaskGetRunTimeStats() has a dependency on the sprintf() C library
4062:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * function that might bloat the code size, use a lot of stack, and
4063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * provide different results on different platforms.  An alternative,
4064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * tiny, third party, and limited functionality implementation of
4065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * sprintf() is provided in many of the FreeRTOS/Demo sub-directories in
4066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * a file called printf-stdarg.c (note printf-stdarg.c does not provide
4067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * a full snprintf() implementation!).
4068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * It is recommended that production systems call uxTaskGetSystemState()
4070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * directly to get access to raw stats data, rather than indirectly
4071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * through a call to vTaskGetRunTimeStats().
4072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 */
4073:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Make sure the write buffer does not contain a string. */
4075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		*pcWriteBuffer = 0x00;
4076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Take a snapshot of the number of tasks in case it changes while this
4078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		function is executing. */
4079:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxArraySize = uxCurrentNumberOfTasks;
4080:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Allocate an array index for each task.  NOTE!  If
4082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configSUPPORT_DYNAMIC_ALLOCATION is set to 0 then pvPortMalloc() will
4083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		equate to NULL. */
4084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatusArray = pvPortMalloc( uxCurrentNumberOfTasks * sizeof( TaskStatus_t ) );
4085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4086:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTaskStatusArray != NULL )
4087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Generate the (binary) data. */
4089:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxArraySize = uxTaskGetSystemState( pxTaskStatusArray, uxArraySize, &ulTotalTime );
4090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4091:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* For percentage calculations. */
4092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulTotalTime /= 100UL;
4093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4094:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Avoid divide by zero errors. */
4095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ulTotalTime > 0 )
4096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Create a human readable table from the binary data. */
4098:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				for( x = 0; x < uxArraySize; x++ )
ARM GAS  /tmp/cclVzO8U.s 			page 90


4099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* What percentage of the total run time has the task used?
4101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					This will always be rounded down to the nearest integer.
4102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					ulTotalRunTimeDiv100 has already been divided by 100. */
4103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					ulStatsAsPercentage = pxTaskStatusArray[ x ].ulRunTimeCounter / ulTotalTime;
4104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Write the task name to the string, padding with
4106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					spaces so it can be printed in tabular form more
4107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					easily. */
4108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pcWriteBuffer = prvWriteNameToBuffer( pcWriteBuffer, pxTaskStatusArray[ x ].pcTaskName );
4109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( ulStatsAsPercentage > 0UL )
4111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#ifdef portLU_PRINTF_SPECIFIER_REQUIRED
4113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%lu\t\t%lu%%\r\n", pxTaskStatusArray[ x ].ulRunTimeCounter, ulSta
4115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#else
4117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							/* sizeof( int ) == sizeof( long ) so a smaller
4119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							printf() library can be used. */
4120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%u\t\t%u%%\r\n", ( unsigned int ) pxTaskStatusArray[ x ].ulRunTim
4121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#endif
4123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* If the percentage is zero here then the task has
4127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						consumed less than 1% of the total run time. */
4128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#ifdef portLU_PRINTF_SPECIFIER_REQUIRED
4129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%lu\t\t<1%%\r\n", pxTaskStatusArray[ x ].ulRunTimeCounter );
4131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#else
4133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							/* sizeof( int ) == sizeof( long ) so a smaller
4135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							printf() library can be used. */
4136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%u\t\t<1%%\r\n", ( unsigned int ) pxTaskStatusArray[ x ].ulRunTim
4137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#endif
4139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pcWriteBuffer += strlen( pcWriteBuffer );
4142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Free the array again.  NOTE!  If configSUPPORT_DYNAMIC_ALLOCATION
4150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			is 0 then vPortFree() will be #defined to nothing. */
4151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTaskStatusArray );
4152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
ARM GAS  /tmp/cclVzO8U.s 			page 91


4156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) 
4160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t uxTaskResetEventItemValue( void )
4163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
4164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t uxReturn;
4165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uxReturn = listGET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ) );
4167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Reset the event list item to its normal value - so it can be used with
4169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	queues and semaphores. */
4170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), ( ( TickType_t ) configMAX_PRIORITIES 
4171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return uxReturn;
4173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
4174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
4177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void *pvTaskIncrementMutexHeldCount( void )
4179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xSemaphoreCreateMutex() is called before any tasks have been created
4181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		then pxCurrentTCB will be NULL. */
4182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB != NULL )
4183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxCurrentTCB->uxMutexesHeld )++;
4185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return pxCurrentTCB;
4188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_MUTEXES */
4191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulTaskNotifyTake( BaseType_t xClearCountOnExit, TickType_t xTicksToWait )
4196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulReturn;
4198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Only block if the notification count is not already non-zero. */
4202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->ulNotifiedValue == 0UL )
4203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Mark this task as waiting for a notification. */
4205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ucNotifyState = taskWAITING_NOTIFICATION;
4206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
4208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
4210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_NOTIFY_TAKE_BLOCK();
4211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* All ports are written to allow a yield in a critical
ARM GAS  /tmp/cclVzO8U.s 			page 92


4213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					section (some will yield immediately, others wait until the
4214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					critical section exits) - but it is not something that
4215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					application code should ever do. */
4216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					portYIELD_WITHIN_API();
4217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY_TAKE();
4233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulReturn = pxCurrentTCB->ulNotifiedValue;
4234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ulReturn != 0UL )
4236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xClearCountOnExit != pdFALSE )
4238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB->ulNotifiedValue = 0UL;
4240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB->ulNotifiedValue = ulReturn - 1;
4244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxCurrentTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
4252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return ulReturn;
4256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskNotifyWait( uint32_t ulBitsToClearOnEntry, uint32_t ulBitsToClearOnExit, uint32_t 
4264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
4266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Only block if a notification is not already pending. */
ARM GAS  /tmp/cclVzO8U.s 			page 93


4270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->ucNotifyState != taskNOTIFICATION_RECEIVED )
4271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Clear bits in the task's notification value as bits may get
4273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				set	by the notifying task or interrupt.  This can be used to
4274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				clear the value to zero. */
4275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ulNotifiedValue &= ~ulBitsToClearOnEntry;
4276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Mark this task as waiting for a notification. */
4278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ucNotifyState = taskWAITING_NOTIFICATION;
4279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
4281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
4283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_NOTIFY_WAIT_BLOCK();
4284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* All ports are written to allow a yield in a critical
4286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					section (some will yield immediately, others wait until the
4287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					critical section exits) - but it is not something that
4288:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					application code should ever do. */
4289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					portYIELD_WITHIN_API();
4290:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4291:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4292:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4293:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4294:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4296:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4297:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4302:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY_WAIT();
4306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pulNotificationValue != NULL )
4308:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Output the current notification value, which may or may not
4310:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				have changed. */
4311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				*pulNotificationValue = pxCurrentTCB->ulNotifiedValue;
4312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If ucNotifyValue is set then either the task never entered the
4315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			blocked state (because a notification was already pending) or the
4316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task unblocked because of a notification.  Otherwise the task
4317:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			unblocked because of a timeout. */
4318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->ucNotifyState == taskWAITING_NOTIFICATION )
4319:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A notification was not received. */
4321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdFALSE;
4322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4324:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4325:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A notification was already pending or a notification was
4326:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				received while the task was waiting. */
ARM GAS  /tmp/cclVzO8U.s 			page 94


4327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ulNotifiedValue &= ~ulBitsToClearOnExit;
4328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
4329:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4330:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxCurrentTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
4332:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
4336:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskGenericNotify( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction eAction
4344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
4346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
4347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToNotify );
4350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
4351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4353:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pulPreviousNotificationValue != NULL )
4355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				*pulPreviousNotificationValue = pxTCB->ulNotifiedValue;
4357:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4358:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			switch( eAction )
4364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetBits	:
4366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ulNotifiedValue |= ulValue;
4367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4368:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4369:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eIncrement	:
4370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( pxTCB->ulNotifiedValue )++;
4371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4372:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetValueWithOverwrite	:
4374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ulNotifiedValue = ulValue;
4375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetValueWithoutOverwrite :
4378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
4379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxTCB->ulNotifiedValue = ulValue;
4381:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4383:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
ARM GAS  /tmp/cclVzO8U.s 			page 95


4384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* The value could not be written to the task. */
4385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xReturn = pdFAIL;
4386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4388:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eNoAction:
4390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task is being notified without its notify value being
4391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					updated. */
4392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4394:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY();
4396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			notification then unblock it now. */
4399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4400:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
4402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
4403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4404:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The task should not have been on an event list. */
4405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if( configUSE_TICKLESS_IDLE != 0 )
4408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* If a task is blocked waiting for a notification then
4410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xNextTaskUnblockTime might be set to the blocked task's time
4411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					out time.  If the task is unblocked for a reason other than
4412:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					a timeout xNextTaskUnblockTime is normally left unchanged,
4413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					because it will automatically get reset to a new value when
4414:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					the tick count equals xNextTaskUnblockTime.  However if
4415:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					tickless idling is used it might be more important to enter
4416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					sleep mode at the earliest possible time - so reset
4417:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xNextTaskUnblockTime here to ensure it is updated at the
4418:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					earliest possible time. */
4419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvResetNextTaskUnblockTime();
4420:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
4422:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4425:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The notified task has a priority above the currently
4426:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					executing task so a yield is required. */
4427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
4428:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4429:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4431:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4433:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4435:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4437:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cclVzO8U.s 			page 96


4441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
4442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4445:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4446:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskGenericNotifyFromISR( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction 
4450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
4452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
4454:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
4455:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToNotify );
4457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
4459:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
4460:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
4461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
4462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
4463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
4464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
4465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
4466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been assigned a priority above the configured maximum system call
4467:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
4468:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
4469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
4470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
4471:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
4472:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		provided on the following link:
4473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
4474:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
4475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4476:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
4477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
4479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pulPreviousNotificationValue != NULL )
4481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				*pulPreviousNotificationValue = pxTCB->ulNotifiedValue;
4483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			switch( eAction )
4489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetBits	:
4491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ulNotifiedValue |= ulValue;
4492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eIncrement	:
4495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( pxTCB->ulNotifiedValue )++;
4496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4497:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cclVzO8U.s 			page 97


4498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetValueWithOverwrite	:
4499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ulNotifiedValue = ulValue;
4500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetValueWithoutOverwrite :
4503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
4504:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxTCB->ulNotifiedValue = ulValue;
4506:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* The value could not be written to the task. */
4510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xReturn = pdFAIL;
4511:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4512:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4514:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eNoAction :
4515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task is being notified without its notify value being
4516:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					updated. */
4517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4518:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY_FROM_ISR();
4521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4522:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			notification then unblock it now. */
4524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The task should not have been on an event list. */
4527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
4530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
4532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
4533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed and ready lists cannot be accessed, so hold
4537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					this task pending until the scheduler is resumed. */
4538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
4539:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The notified task has a priority above the currently
4544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					executing task so a yield is required. */
4545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxHigherPriorityTaskWoken != NULL )
4546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						*pxHigherPriorityTaskWoken = pdTRUE;
4548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4551:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Mark that a yield is pending in case the user is not
4552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						using the "xHigherPriorityTaskWoken" parameter to an ISR
4553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						safe FreeRTOS function. */
4554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xYieldPending = pdTRUE;
ARM GAS  /tmp/cclVzO8U.s 			page 98


4555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4557:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
4564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4565:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
4566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4569:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskNotifyGiveFromISR( TaskHandle_t xTaskToNotify, BaseType_t *pxHigherPriorityTaskWoken )
4574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
4576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
4578:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToNotify );
4580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
4582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
4583:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
4584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
4585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
4586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
4587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
4588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
4589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been assigned a priority above the configured maximum system call
4590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
4591:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
4592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
4593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
4594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
4595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		provided on the following link:
4596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
4597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
4598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
4600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
4602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* 'Giving' is equivalent to incrementing a count in a counting
4607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			semaphore. */
4608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->ulNotifiedValue )++;
4609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY_GIVE_FROM_ISR();
4611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cclVzO8U.s 			page 99


4612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			notification then unblock it now. */
4614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The task should not have been on an event list. */
4617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
4620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
4622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
4623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed and ready lists cannot be accessed, so hold
4627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					this task pending until the scheduler is resumed. */
4628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
4629:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4633:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The notified task has a priority above the currently
4634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					executing task so a yield is required. */
4635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxHigherPriorityTaskWoken != NULL )
4636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						*pxHigherPriorityTaskWoken = pdTRUE;
4638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Mark that a yield is pending in case the user is not
4642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						using the "xHigherPriorityTaskWoken" parameter in an ISR
4643:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						safe FreeRTOS function. */
4644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xYieldPending = pdTRUE;
4645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
4654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4660:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskNotifyStateClear( TaskHandle_t xTask )
4663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
4665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
4666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If null is passed in here then it is the calling task that is having
4668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		its notification state cleared. */
ARM GAS  /tmp/cclVzO8U.s 			page 100


4669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
4670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->ucNotifyState == taskNOTIFICATION_RECEIVED )
4674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
4676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
4677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdFAIL;
4681:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
4686:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockInde
4693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 612              		.loc 1 4693 1 view -0
 613              		.cfi_startproc
 614              		@ args = 0, pretend = 0, frame = 0
 615              		@ frame_needed = 0, uses_anonymous_args = 0
 616              		.loc 1 4693 1 is_stmt 0 view .LVU177
 617 0000 70B5     		push	{r4, r5, r6, lr}
 618              	.LCFI4:
 619              		.cfi_def_cfa_offset 16
 620              		.cfi_offset 4, -16
 621              		.cfi_offset 5, -12
 622              		.cfi_offset 6, -8
 623              		.cfi_offset 14, -4
 624 0002 0446     		mov	r4, r0
 625 0004 0E46     		mov	r6, r1
4694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTimeToWake;
 626              		.loc 1 4694 1 is_stmt 1 view .LVU178
4695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** const TickType_t xConstTickCount = xTickCount;
 627              		.loc 1 4695 1 view .LVU179
 628              		.loc 1 4695 18 is_stmt 0 view .LVU180
 629 0006 1D4B     		ldr	r3, .L50
 630 0008 1D68     		ldr	r5, [r3]
 631              	.LVL45:
4696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
4698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* About to enter a delayed list, so ensure the ucDelayAborted flag is
4700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		reset to pdFALSE so it can be detected as having been set to pdTRUE
4701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		when the task leaves the Blocked state. */
4702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxCurrentTCB->ucDelayAborted = pdFALSE;
4703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
4705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cclVzO8U.s 			page 101


4706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Remove the task from the ready list before adding it to the blocked list
4707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	as the same list item is used for both lists. */
4708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 632              		.loc 1 4708 2 is_stmt 1 view .LVU181
 633              		.loc 1 4708 35 is_stmt 0 view .LVU182
 634 000a 1D4B     		ldr	r3, .L50+4
 635 000c 1868     		ldr	r0, [r3]
 636              	.LVL46:
 637              		.loc 1 4708 6 view .LVU183
 638 000e 0430     		adds	r0, r0, #4
 639 0010 FFF7FEFF 		bl	uxListRemove
 640              	.LVL47:
 641              		.loc 1 4708 4 view .LVU184
 642 0014 50B9     		cbnz	r0, .L44
4709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The current task must be in a ready list, so there is no need to
4711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		check, and the port reset macro can be called directly. */
4712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portRESET_READY_PRIORITY( pxCurrentTCB->uxPriority, uxTopReadyPriority );
 643              		.loc 1 4712 3 is_stmt 1 view .LVU185
 644 0016 1A4B     		ldr	r3, .L50+4
 645 0018 1B68     		ldr	r3, [r3]
 646 001a DA6A     		ldr	r2, [r3, #44]
 647 001c 0123     		movs	r3, #1
 648 001e 03FA02F2 		lsl	r2, r3, r2
 649 0022 1849     		ldr	r1, .L50+8
 650 0024 0B68     		ldr	r3, [r1]
 651 0026 23EA0203 		bic	r3, r3, r2
 652 002a 0B60     		str	r3, [r1]
 653              	.L44:
4713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
4715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
 654              		.loc 1 4716 27 view .LVU186
4717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( INCLUDE_vTaskSuspend == 1 )
4720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 655              		.loc 1 4721 3 view .LVU187
 656              		.loc 1 4721 5 is_stmt 0 view .LVU188
 657 002c B4F1FF3F 		cmp	r4, #-1
 658 0030 0DD0     		beq	.L49
 659              	.L45:
4722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Add the task to the suspended task list instead of a delayed task
4724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			list to ensure it is not woken by a timing event.  It will block
4725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			indefinitely. */
4726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
4727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Calculate the time at which the task should be woken if the event
4731:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			does not occur.  This may overflow but this doesn't matter, the
4732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			kernel will manage it correctly. */
4733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTimeToWake = xConstTickCount + xTicksToWait;
 660              		.loc 1 4733 4 is_stmt 1 view .LVU189
ARM GAS  /tmp/cclVzO8U.s 			page 102


 661              		.loc 1 4733 16 is_stmt 0 view .LVU190
 662 0032 2C44     		add	r4, r4, r5
 663              	.LVL48:
4734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The list item will be inserted in wake time order. */
4736:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 664              		.loc 1 4736 4 is_stmt 1 view .LVU191
 665 0034 124B     		ldr	r3, .L50+4
 666 0036 1B68     		ldr	r3, [r3]
 667 0038 5C60     		str	r4, [r3, #4]
4737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xTimeToWake < xConstTickCount )
 668              		.loc 1 4738 4 view .LVU192
 669              		.loc 1 4738 6 is_stmt 0 view .LVU193
 670 003a A542     		cmp	r5, r4
 671 003c 10D9     		bls	.L47
4739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Wake time has overflowed.  Place this item in the overflow
4741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				list. */
4742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 672              		.loc 1 4742 5 is_stmt 1 view .LVU194
 673 003e 124B     		ldr	r3, .L50+12
 674 0040 1868     		ldr	r0, [r3]
 675              		.loc 1 4742 60 is_stmt 0 view .LVU195
 676 0042 0F4B     		ldr	r3, .L50+4
 677 0044 1968     		ldr	r1, [r3]
 678              		.loc 1 4742 5 view .LVU196
 679 0046 0431     		adds	r1, r1, #4
 680 0048 FFF7FEFF 		bl	vListInsert
 681              	.LVL49:
 682              	.L43:
4743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The wake time has not overflowed, so the current block list
4747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				is used. */
4748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
4749:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If the task entering the blocked state was placed at the
4751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				head of the list of blocked tasks then xNextTaskUnblockTime
4752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				needs to be updated too. */
4753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xTimeToWake < xNextTaskUnblockTime )
4754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xNextTaskUnblockTime = xTimeToWake;
4756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else /* INCLUDE_vTaskSuspend */
4765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Calculate the time at which the task should be woken if the event
4767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		does not occur.  This may overflow but this doesn't matter, the kernel
4768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		will manage it correctly. */
ARM GAS  /tmp/cclVzO8U.s 			page 103


4769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTimeToWake = xConstTickCount + xTicksToWait;
4770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The list item will be inserted in wake time order. */
4772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
4773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4774:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTimeToWake < xConstTickCount )
4775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Wake time has overflowed.  Place this item in the overflow list. */
4777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
4778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The wake time has not overflowed, so the current block list is used. */
4782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
4783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the task entering the blocked state was placed at the head of the
4785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			list of blocked tasks then xNextTaskUnblockTime needs to be updated
4786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			too. */
4787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xTimeToWake < xNextTaskUnblockTime )
4788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xNextTaskUnblockTime = xTimeToWake;
4790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4795:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4797:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
4798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xCanBlockIndefinitely;
4799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* INCLUDE_vTaskSuspend */
4801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 683              		.loc 1 4801 1 view .LVU197
 684 004c 70BD     		pop	{r4, r5, r6, pc}
 685              	.LVL50:
 686              	.L49:
4721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 687              		.loc 1 4721 41 discriminator 1 view .LVU198
 688 004e 002E     		cmp	r6, #0
 689 0050 EFD0     		beq	.L45
4726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 690              		.loc 1 4726 4 is_stmt 1 view .LVU199
4726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 691              		.loc 1 4726 56 is_stmt 0 view .LVU200
 692 0052 0B4B     		ldr	r3, .L50+4
 693 0054 1968     		ldr	r1, [r3]
4726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 694              		.loc 1 4726 4 view .LVU201
 695 0056 0431     		adds	r1, r1, #4
 696 0058 0C48     		ldr	r0, .L50+16
 697 005a FFF7FEFF 		bl	vListInsertEnd
 698              	.LVL51:
 699 005e F5E7     		b	.L43
 700              	.LVL52:
 701              	.L47:
4748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cclVzO8U.s 			page 104


 702              		.loc 1 4748 5 is_stmt 1 view .LVU202
 703 0060 0B4B     		ldr	r3, .L50+20
 704 0062 1868     		ldr	r0, [r3]
4748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 705              		.loc 1 4748 52 is_stmt 0 view .LVU203
 706 0064 064B     		ldr	r3, .L50+4
 707 0066 1968     		ldr	r1, [r3]
4748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 708              		.loc 1 4748 5 view .LVU204
 709 0068 0431     		adds	r1, r1, #4
 710 006a FFF7FEFF 		bl	vListInsert
 711              	.LVL53:
4753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 712              		.loc 1 4753 5 is_stmt 1 view .LVU205
4753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 713              		.loc 1 4753 21 is_stmt 0 view .LVU206
 714 006e 094B     		ldr	r3, .L50+24
 715 0070 1B68     		ldr	r3, [r3]
4753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 716              		.loc 1 4753 7 view .LVU207
 717 0072 A342     		cmp	r3, r4
 718 0074 EAD9     		bls	.L43
4755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 719              		.loc 1 4755 6 is_stmt 1 view .LVU208
4755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 720              		.loc 1 4755 27 is_stmt 0 view .LVU209
 721 0076 074B     		ldr	r3, .L50+24
 722 0078 1C60     		str	r4, [r3]
4759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 723              		.loc 1 4759 30 is_stmt 1 view .LVU210
 724              		.loc 1 4801 1 is_stmt 0 view .LVU211
 725 007a E7E7     		b	.L43
 726              	.L51:
 727              		.align	2
 728              	.L50:
 729 007c 00000000 		.word	.LANCHOR14
 730 0080 00000000 		.word	.LANCHOR10
 731 0084 00000000 		.word	.LANCHOR13
 732 0088 00000000 		.word	.LANCHOR8
 733 008c 00000000 		.word	.LANCHOR0
 734 0090 00000000 		.word	.LANCHOR2
 735 0094 00000000 		.word	.LANCHOR3
 736              		.cfi_endproc
 737              	.LFE635:
 739              		.section	.text.xTaskCreate,"ax",%progbits
 740              		.align	1
 741              		.global	xTaskCreate
 742              		.syntax unified
 743              		.thumb
 744              		.thumb_func
 745              		.fpu softvfp
 747              	xTaskCreate:
 748              	.LVL54:
 749              	.LFB589:
 682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 750              		.loc 1 682 2 is_stmt 1 view -0
 751              		.cfi_startproc
ARM GAS  /tmp/cclVzO8U.s 			page 105


 752              		@ args = 8, pretend = 0, frame = 0
 753              		@ frame_needed = 0, uses_anonymous_args = 0
 682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 754              		.loc 1 682 2 is_stmt 0 view .LVU213
 755 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 756              	.LCFI5:
 757              		.cfi_def_cfa_offset 28
 758              		.cfi_offset 4, -28
 759              		.cfi_offset 5, -24
 760              		.cfi_offset 6, -20
 761              		.cfi_offset 7, -16
 762              		.cfi_offset 8, -12
 763              		.cfi_offset 9, -8
 764              		.cfi_offset 14, -4
 765 0004 85B0     		sub	sp, sp, #20
 766              	.LCFI6:
 767              		.cfi_def_cfa_offset 48
 768 0006 0746     		mov	r7, r0
 769 0008 8846     		mov	r8, r1
 770 000a 1446     		mov	r4, r2
 771 000c 9946     		mov	r9, r3
 683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 772              		.loc 1 683 2 is_stmt 1 view .LVU214
 684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 773              		.loc 1 684 2 view .LVU215
 774              	.LBB92:
 713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 775              		.loc 1 713 3 view .LVU216
 716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 776              		.loc 1 716 4 view .LVU217
 716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 777              		.loc 1 716 32 is_stmt 0 view .LVU218
 778 000e 9000     		lsls	r0, r2, #2
 779              	.LVL55:
 716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 780              		.loc 1 716 32 view .LVU219
 781 0010 FFF7FEFF 		bl	pvPortMalloc
 782              	.LVL56:
 718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 783              		.loc 1 718 4 is_stmt 1 view .LVU220
 718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 784              		.loc 1 718 6 is_stmt 0 view .LVU221
 785 0014 E8B1     		cbz	r0, .L56
 786 0016 0646     		mov	r6, r0
 721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 787              		.loc 1 721 5 is_stmt 1 view .LVU222
 721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 788              		.loc 1 721 28 is_stmt 0 view .LVU223
 789 0018 5420     		movs	r0, #84
 790              	.LVL57:
 721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 791              		.loc 1 721 28 view .LVU224
 792 001a FFF7FEFF 		bl	pvPortMalloc
 793              	.LVL58:
 723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 794              		.loc 1 723 5 is_stmt 1 view .LVU225
 723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
ARM GAS  /tmp/cclVzO8U.s 			page 106


 795              		.loc 1 723 7 is_stmt 0 view .LVU226
 796 001e 0546     		mov	r5, r0
 797 0020 98B1     		cbz	r0, .L54
 726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 798              		.loc 1 726 6 is_stmt 1 view .LVU227
 726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 799              		.loc 1 726 24 is_stmt 0 view .LVU228
 800 0022 0663     		str	r6, [r0, #48]
 801              	.LVL59:
 802              	.L55:
 726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 803              		.loc 1 726 24 view .LVU229
 804              	.LBE92:
 742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 805              		.loc 1 742 3 is_stmt 1 view .LVU230
 742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 806              		.loc 1 742 5 is_stmt 0 view .LVU231
 807 0024 D5B1     		cbz	r5, .L57
 752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 808              		.loc 1 752 4 is_stmt 1 view .LVU232
 809 0026 0023     		movs	r3, #0
 810 0028 0393     		str	r3, [sp, #12]
 811 002a 0295     		str	r5, [sp, #8]
 812 002c 0D9B     		ldr	r3, [sp, #52]
 813 002e 0193     		str	r3, [sp, #4]
 814 0030 0C9B     		ldr	r3, [sp, #48]
 815 0032 0093     		str	r3, [sp]
 816 0034 4B46     		mov	r3, r9
 817 0036 2246     		mov	r2, r4
 818 0038 4146     		mov	r1, r8
 819 003a 3846     		mov	r0, r7
 820 003c FFF7FEFF 		bl	prvInitialiseNewTask
 821              	.LVL60:
 753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdPASS;
 822              		.loc 1 753 4 view .LVU233
 823 0040 2846     		mov	r0, r5
 824 0042 FFF7FEFF 		bl	prvAddNewTaskToReadyList
 825              	.LVL61:
 754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 826              		.loc 1 754 4 view .LVU234
 754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 827              		.loc 1 754 12 is_stmt 0 view .LVU235
 828 0046 0120     		movs	r0, #1
 829 0048 05E0     		b	.L52
 830              	.LVL62:
 831              	.L54:
 832              	.LBB93:
 732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 833              		.loc 1 732 6 is_stmt 1 view .LVU236
 834 004a 3046     		mov	r0, r6
 835              	.LVL63:
 732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 836              		.loc 1 732 6 is_stmt 0 view .LVU237
 837 004c FFF7FEFF 		bl	vPortFree
 838              	.LVL64:
 839 0050 E8E7     		b	.L55
 840              	.LVL65:
ARM GAS  /tmp/cclVzO8U.s 			page 107


 841              	.L56:
 732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 842              		.loc 1 732 6 view .LVU238
 843              	.LBE93:
 758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 844              		.loc 1 758 12 view .LVU239
 845 0052 4FF0FF30 		mov	r0, #-1
 846              	.LVL66:
 847              	.L52:
 762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 848              		.loc 1 762 2 view .LVU240
 849 0056 05B0     		add	sp, sp, #20
 850              	.LCFI7:
 851              		.cfi_remember_state
 852              		.cfi_def_cfa_offset 28
 853              		@ sp needed
 854 0058 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 855              	.LVL67:
 856              	.L57:
 857              	.LCFI8:
 858              		.cfi_restore_state
 758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 859              		.loc 1 758 12 view .LVU241
 860 005c 4FF0FF30 		mov	r0, #-1
 861              	.LVL68:
 761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 862              		.loc 1 761 3 is_stmt 1 view .LVU242
 761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 863              		.loc 1 761 10 is_stmt 0 view .LVU243
 864 0060 F9E7     		b	.L52
 865              		.cfi_endproc
 866              	.LFE589:
 868              		.section	.text.vTaskDelete,"ax",%progbits
 869              		.align	1
 870              		.global	vTaskDelete
 871              		.syntax unified
 872              		.thumb
 873              		.thumb_func
 874              		.fpu softvfp
 876              	vTaskDelete:
 877              	.LVL69:
 878              	.LFB592:
1049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 879              		.loc 1 1049 2 is_stmt 1 view -0
 880              		.cfi_startproc
 881              		@ args = 0, pretend = 0, frame = 0
 882              		@ frame_needed = 0, uses_anonymous_args = 0
1049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 883              		.loc 1 1049 2 is_stmt 0 view .LVU245
 884 0000 38B5     		push	{r3, r4, r5, lr}
 885              	.LCFI9:
 886              		.cfi_def_cfa_offset 16
 887              		.cfi_offset 3, -16
 888              		.cfi_offset 4, -12
 889              		.cfi_offset 5, -8
 890              		.cfi_offset 14, -4
 891 0002 0446     		mov	r4, r0
ARM GAS  /tmp/cclVzO8U.s 			page 108


1050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 892              		.loc 1 1050 2 is_stmt 1 view .LVU246
1052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 893              		.loc 1 1052 3 view .LVU247
 894 0004 FFF7FEFF 		bl	vPortEnterCritical
 895              	.LVL70:
1056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 896              		.loc 1 1056 4 view .LVU248
1056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 897              		.loc 1 1056 12 is_stmt 0 view .LVU249
 898 0008 002C     		cmp	r4, #0
 899 000a 34D0     		beq	.L69
 900              	.LVL71:
 901              	.L60:
1059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 902              		.loc 1 1059 4 is_stmt 1 discriminator 4 view .LVU250
1059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 903              		.loc 1 1059 8 is_stmt 0 discriminator 4 view .LVU251
 904 000c 251D     		adds	r5, r4, #4
 905 000e 2846     		mov	r0, r5
 906 0010 FFF7FEFF 		bl	uxListRemove
 907              	.LVL72:
1059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 908              		.loc 1 1059 6 discriminator 4 view .LVU252
 909 0014 70B9     		cbnz	r0, .L61
1061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 910              		.loc 1 1061 5 is_stmt 1 view .LVU253
 911 0016 E26A     		ldr	r2, [r4, #44]
 912 0018 02EB8201 		add	r1, r2, r2, lsl #2
 913 001c 8B00     		lsls	r3, r1, #2
 914 001e 2649     		ldr	r1, .L72
 915 0020 CB58     		ldr	r3, [r1, r3]
 916 0022 3BB9     		cbnz	r3, .L61
1061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 917              		.loc 1 1061 5 discriminator 1 view .LVU254
 918 0024 0123     		movs	r3, #1
 919 0026 03FA02F2 		lsl	r2, r3, r2
 920 002a 2449     		ldr	r1, .L72+4
 921 002c 0B68     		ldr	r3, [r1]
 922 002e 23EA0203 		bic	r3, r3, r2
 923 0032 0B60     		str	r3, [r1]
 924              	.L61:
1065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 925              		.loc 1 1065 29 view .LVU255
1069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 926              		.loc 1 1069 4 view .LVU256
1069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 927              		.loc 1 1069 8 is_stmt 0 view .LVU257
 928 0034 A36A     		ldr	r3, [r4, #40]
1069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 929              		.loc 1 1069 6 view .LVU258
 930 0036 1BB1     		cbz	r3, .L62
1071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 931              		.loc 1 1071 5 is_stmt 1 view .LVU259
1071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 932              		.loc 1 1071 14 is_stmt 0 view .LVU260
 933 0038 04F11800 		add	r0, r4, #24
ARM GAS  /tmp/cclVzO8U.s 			page 109


 934 003c FFF7FEFF 		bl	uxListRemove
 935              	.LVL73:
 936              	.L62:
1075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 937              		.loc 1 1075 29 is_stmt 1 view .LVU261
1082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 938              		.loc 1 1082 4 view .LVU262
1082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 939              		.loc 1 1082 16 is_stmt 0 view .LVU263
 940 0040 1F4A     		ldr	r2, .L72+8
 941 0042 1368     		ldr	r3, [r2]
 942 0044 0133     		adds	r3, r3, #1
 943 0046 1360     		str	r3, [r2]
1084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 944              		.loc 1 1084 4 is_stmt 1 view .LVU264
1084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 945              		.loc 1 1084 14 is_stmt 0 view .LVU265
 946 0048 1E4B     		ldr	r3, .L72+12
 947 004a 1B68     		ldr	r3, [r3]
1084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 948              		.loc 1 1084 6 view .LVU266
 949 004c A342     		cmp	r3, r4
 950 004e 15D0     		beq	.L70
1107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvDeleteTCB( pxTCB );
 951              		.loc 1 1107 5 is_stmt 1 view .LVU267
 952 0050 1D4A     		ldr	r2, .L72+16
 953 0052 1368     		ldr	r3, [r2]
 954 0054 013B     		subs	r3, r3, #1
 955 0056 1360     		str	r3, [r2]
1108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 956              		.loc 1 1108 5 view .LVU268
 957 0058 2046     		mov	r0, r4
 958 005a FFF7FEFF 		bl	prvDeleteTCB
 959              	.LVL74:
1112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 960              		.loc 1 1112 5 view .LVU269
 961 005e FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 962              	.LVL75:
 963              	.L64:
1115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 964              		.loc 1 1115 29 view .LVU270
1117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 965              		.loc 1 1117 3 view .LVU271
 966 0062 FFF7FEFF 		bl	vPortExitCritical
 967              	.LVL76:
1121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 968              		.loc 1 1121 3 view .LVU272
1121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 969              		.loc 1 1121 25 is_stmt 0 view .LVU273
 970 0066 194B     		ldr	r3, .L72+20
 971 0068 1B68     		ldr	r3, [r3]
1121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 972              		.loc 1 1121 5 view .LVU274
 973 006a 1BB1     		cbz	r3, .L59
1123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 974              		.loc 1 1123 4 is_stmt 1 view .LVU275
1123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
ARM GAS  /tmp/cclVzO8U.s 			page 110


 975              		.loc 1 1123 14 is_stmt 0 view .LVU276
 976 006c 154B     		ldr	r3, .L72+12
 977 006e 1B68     		ldr	r3, [r3]
1123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 978              		.loc 1 1123 6 view .LVU277
 979 0070 A342     		cmp	r3, r4
 980 0072 0CD0     		beq	.L71
 981              	.L59:
1133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 982              		.loc 1 1133 2 view .LVU278
 983 0074 38BD     		pop	{r3, r4, r5, pc}
 984              	.LVL77:
 985              	.L69:
1056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 986              		.loc 1 1056 12 discriminator 1 view .LVU279
 987 0076 134B     		ldr	r3, .L72+12
 988 0078 1C68     		ldr	r4, [r3]
 989              	.LVL78:
1056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 990              		.loc 1 1056 12 discriminator 1 view .LVU280
 991 007a C7E7     		b	.L60
 992              	.LVL79:
 993              	.L70:
1091:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 994              		.loc 1 1091 5 is_stmt 1 view .LVU281
 995 007c 2946     		mov	r1, r5
 996 007e 1448     		ldr	r0, .L72+24
 997 0080 FFF7FEFF 		bl	vListInsertEnd
 998              	.LVL80:
1096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 999              		.loc 1 1096 5 view .LVU282
 1000 0084 134A     		ldr	r2, .L72+28
 1001 0086 1368     		ldr	r3, [r2]
 1002 0088 0133     		adds	r3, r3, #1
 1003 008a 1360     		str	r3, [r2]
1103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1004              		.loc 1 1103 54 view .LVU283
 1005 008c E9E7     		b	.L64
 1006              	.L71:
1125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 1007              		.loc 1 1125 5 view .LVU284
 1008 008e 124B     		ldr	r3, .L72+32
 1009 0090 1B68     		ldr	r3, [r3]
 1010 0092 43B1     		cbz	r3, .L66
1125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 1011              		.loc 1 1125 5 view .LVU285
 1012              	.LBB94:
 1013              	.LBI94:
 233:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 1014              		.loc 2 233 30 view .LVU286
 1015              	.LBB95:
 235:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 1016              		.loc 2 235 1 view .LVU287
 1017              		.loc 2 237 2 view .LVU288
 1018              		.syntax unified
 1019              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1020 0094 4FF05003 			mov r3, #80												
ARM GAS  /tmp/cclVzO8U.s 			page 111


 1021 0098 83F31188 		msr basepri, r3											
 1022 009c BFF36F8F 		isb														
 1023 00a0 BFF34F8F 		dsb														
 1024              	
 1025              	@ 0 "" 2
 1026              	.LVL81:
 1027              		.thumb
 1028              		.syntax unified
 1029              	.L67:
 1030              		.loc 2 237 2 is_stmt 0 view .LVU289
 1031              	.LBE95:
 1032              	.LBE94:
1125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 1033              		.loc 1 1125 5 is_stmt 1 discriminator 1 view .LVU290
1125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 1034              		.loc 1 1125 5 discriminator 1 view .LVU291
 1035 00a4 FEE7     		b	.L67
 1036              	.L66:
1125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 1037              		.loc 1 1125 46 discriminator 2 view .LVU292
1126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1038              		.loc 1 1126 5 discriminator 2 view .LVU293
 1039 00a6 0D4B     		ldr	r3, .L72+36
 1040 00a8 4FF08052 		mov	r2, #268435456
 1041 00ac 1A60     		str	r2, [r3]
1126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1042              		.loc 1 1126 5 discriminator 2 view .LVU294
 1043              		.syntax unified
 1044              	@ 1126 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1045 00ae BFF34F8F 		dsb
 1046              	@ 0 "" 2
1126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1047              		.loc 1 1126 5 discriminator 2 view .LVU295
 1048              	@ 1126 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1049 00b2 BFF36F8F 		isb
 1050              	@ 0 "" 2
1126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1051              		.loc 1 1126 27 discriminator 2 view .LVU296
1130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1052              		.loc 1 1130 29 discriminator 2 view .LVU297
1133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1053              		.loc 1 1133 2 is_stmt 0 discriminator 2 view .LVU298
 1054              		.thumb
 1055              		.syntax unified
 1056 00b6 DDE7     		b	.L59
 1057              	.L73:
 1058              		.align	2
 1059              	.L72:
 1060 00b8 00000000 		.word	.LANCHOR4
 1061 00bc 00000000 		.word	.LANCHOR13
 1062 00c0 00000000 		.word	.LANCHOR12
 1063 00c4 00000000 		.word	.LANCHOR10
 1064 00c8 00000000 		.word	.LANCHOR9
 1065 00cc 00000000 		.word	.LANCHOR11
 1066 00d0 00000000 		.word	.LANCHOR7
 1067 00d4 00000000 		.word	.LANCHOR15
 1068 00d8 00000000 		.word	.LANCHOR16
ARM GAS  /tmp/cclVzO8U.s 			page 112


 1069 00dc 04ED00E0 		.word	-536810236
 1070              		.cfi_endproc
 1071              	.LFE592:
 1073              		.section	.text.uxTaskPriorityGet,"ax",%progbits
 1074              		.align	1
 1075              		.global	uxTaskPriorityGet
 1076              		.syntax unified
 1077              		.thumb
 1078              		.thumb_func
 1079              		.fpu softvfp
 1081              	uxTaskPriorityGet:
 1082              	.LVL82:
 1083              	.LFB594:
1341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1084              		.loc 1 1341 2 is_stmt 1 view -0
 1085              		.cfi_startproc
 1086              		@ args = 0, pretend = 0, frame = 0
 1087              		@ frame_needed = 0, uses_anonymous_args = 0
1341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1088              		.loc 1 1341 2 is_stmt 0 view .LVU300
 1089 0000 10B5     		push	{r4, lr}
 1090              	.LCFI10:
 1091              		.cfi_def_cfa_offset 8
 1092              		.cfi_offset 4, -8
 1093              		.cfi_offset 14, -4
 1094 0002 0446     		mov	r4, r0
1342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn;
 1095              		.loc 1 1342 2 is_stmt 1 view .LVU301
1343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1096              		.loc 1 1343 2 view .LVU302
1345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1097              		.loc 1 1345 3 view .LVU303
 1098 0004 FFF7FEFF 		bl	vPortEnterCritical
 1099              	.LVL83:
1349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1100              		.loc 1 1349 4 view .LVU304
1349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1101              		.loc 1 1349 12 is_stmt 0 view .LVU305
 1102 0008 24B1     		cbz	r4, .L77
 1103              	.LVL84:
 1104              	.L75:
1350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1105              		.loc 1 1350 4 is_stmt 1 discriminator 4 view .LVU306
1350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1106              		.loc 1 1350 13 is_stmt 0 discriminator 4 view .LVU307
 1107 000a E46A     		ldr	r4, [r4, #44]
 1108              	.LVL85:
1352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1109              		.loc 1 1352 3 is_stmt 1 discriminator 4 view .LVU308
 1110 000c FFF7FEFF 		bl	vPortExitCritical
 1111              	.LVL86:
1354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1112              		.loc 1 1354 3 discriminator 4 view .LVU309
1355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1113              		.loc 1 1355 2 is_stmt 0 discriminator 4 view .LVU310
 1114 0010 2046     		mov	r0, r4
 1115 0012 10BD     		pop	{r4, pc}
ARM GAS  /tmp/cclVzO8U.s 			page 113


 1116              	.LVL87:
 1117              	.L77:
1349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1118              		.loc 1 1349 12 discriminator 1 view .LVU311
 1119 0014 014B     		ldr	r3, .L78
 1120 0016 1C68     		ldr	r4, [r3]
 1121              	.LVL88:
1349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1122              		.loc 1 1349 12 discriminator 1 view .LVU312
 1123 0018 F7E7     		b	.L75
 1124              	.L79:
 1125 001a 00BF     		.align	2
 1126              	.L78:
 1127 001c 00000000 		.word	.LANCHOR10
 1128              		.cfi_endproc
 1129              	.LFE594:
 1131              		.section	.text.uxTaskPriorityGetFromISR,"ax",%progbits
 1132              		.align	1
 1133              		.global	uxTaskPriorityGetFromISR
 1134              		.syntax unified
 1135              		.thumb
 1136              		.thumb_func
 1137              		.fpu softvfp
 1139              	uxTaskPriorityGetFromISR:
 1140              	.LVL89:
 1141              	.LFB595:
1363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1142              		.loc 1 1363 2 is_stmt 1 view -0
 1143              		.cfi_startproc
 1144              		@ args = 0, pretend = 0, frame = 0
 1145              		@ frame_needed = 0, uses_anonymous_args = 0
1363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1146              		.loc 1 1363 2 is_stmt 0 view .LVU314
 1147 0000 10B5     		push	{r4, lr}
 1148              	.LCFI11:
 1149              		.cfi_def_cfa_offset 8
 1150              		.cfi_offset 4, -8
 1151              		.cfi_offset 14, -4
 1152 0002 0446     		mov	r4, r0
1364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn, uxSavedInterruptState;
 1153              		.loc 1 1364 2 is_stmt 1 view .LVU315
1365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1154              		.loc 1 1365 2 view .LVU316
1383:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1155              		.loc 1 1383 3 view .LVU317
 1156 0004 FFF7FEFF 		bl	vPortValidateInterruptPriority
 1157              	.LVL90:
1385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1158              		.loc 1 1385 3 view .LVU318
 1159              	.LBB96:
 1160              	.LBI96:
 238:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 239:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	mov %0, %1												\n"	\
 240:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	msr basepri, %0											\n" \
 241:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	isb														\n" \
 242:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	dsb														\n" \
 243:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		:"=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY )
ARM GAS  /tmp/cclVzO8U.s 			page 114


 244:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	);
 245:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** }
 246:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 247:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 248:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 249:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 1161              		.loc 2 249 34 view .LVU319
 1162              	.LBB97:
 250:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 251:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 1163              		.loc 2 251 1 view .LVU320
 252:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 253:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile
 1164              		.loc 2 253 2 view .LVU321
 1165              		.syntax unified
 1166              	@ 253 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1167 0008 EFF31183 			mrs r3, basepri											
 1168 000c 4FF05002 		mov r2, #80												
 1169 0010 82F31188 		msr basepri, r2											
 1170 0014 BFF36F8F 		isb														
 1171 0018 BFF34F8F 		dsb														
 1172              	
 1173              	@ 0 "" 2
 1174              	.LVL91:
 254:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 255:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	mrs %0, basepri											\n" \
 256:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	mov %1, %2												\n"	\
 257:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	msr basepri, %1											\n" \
 258:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	isb														\n" \
 259:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	dsb														\n" \
 260:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		:"=r" (ulOriginalBASEPRI), "=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY )
 261:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	);
 262:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 263:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* This return will not be reached but is necessary to prevent compiler
 264:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	warnings. */
 265:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	return ulOriginalBASEPRI;
 1175              		.loc 2 265 2 view .LVU322
 1176              		.loc 2 265 2 is_stmt 0 view .LVU323
 1177              		.thumb
 1178              		.syntax unified
 1179              	.LBE97:
 1180              	.LBE96:
1389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1181              		.loc 1 1389 4 is_stmt 1 view .LVU324
1389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1182              		.loc 1 1389 12 is_stmt 0 view .LVU325
 1183 001c 1CB1     		cbz	r4, .L83
 1184              	.LVL92:
 1185              	.L81:
1390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1186              		.loc 1 1390 4 is_stmt 1 discriminator 4 view .LVU326
1390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1187              		.loc 1 1390 13 is_stmt 0 discriminator 4 view .LVU327
 1188 001e E06A     		ldr	r0, [r4, #44]
 1189              	.LVL93:
1392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1190              		.loc 1 1392 3 is_stmt 1 discriminator 4 view .LVU328
ARM GAS  /tmp/cclVzO8U.s 			page 115


 1191              	.LBB98:
 1192              	.LBI98:
 266:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** }
 267:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 268:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 269:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 1193              		.loc 2 269 30 discriminator 4 view .LVU329
 1194              	.LBB99:
 270:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 271:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile
 1195              		.loc 2 271 2 discriminator 4 view .LVU330
 1196              		.syntax unified
 1197              	@ 271 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1198 0020 83F31188 			msr basepri, r3	
 1199              	@ 0 "" 2
 1200              	.LVL94:
 1201              		.loc 2 271 2 is_stmt 0 discriminator 4 view .LVU331
 1202              		.thumb
 1203              		.syntax unified
 1204              	.LBE99:
 1205              	.LBE98:
1394:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1206              		.loc 1 1394 3 is_stmt 1 discriminator 4 view .LVU332
1395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1207              		.loc 1 1395 2 is_stmt 0 discriminator 4 view .LVU333
 1208 0024 10BD     		pop	{r4, pc}
 1209              	.LVL95:
 1210              	.L83:
1389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1211              		.loc 1 1389 12 discriminator 1 view .LVU334
 1212 0026 014A     		ldr	r2, .L84
 1213 0028 1468     		ldr	r4, [r2]
 1214              	.LVL96:
1389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1215              		.loc 1 1389 12 discriminator 1 view .LVU335
 1216 002a F8E7     		b	.L81
 1217              	.L85:
 1218              		.align	2
 1219              	.L84:
 1220 002c 00000000 		.word	.LANCHOR10
 1221              		.cfi_endproc
 1222              	.LFE595:
 1224              		.section	.text.vTaskPrioritySet,"ax",%progbits
 1225              		.align	1
 1226              		.global	vTaskPrioritySet
 1227              		.syntax unified
 1228              		.thumb
 1229              		.thumb_func
 1230              		.fpu softvfp
 1232              	vTaskPrioritySet:
 1233              	.LVL97:
 1234              	.LFB596:
1403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1235              		.loc 1 1403 2 is_stmt 1 view -0
 1236              		.cfi_startproc
 1237              		@ args = 0, pretend = 0, frame = 0
 1238              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cclVzO8U.s 			page 116


1403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1239              		.loc 1 1403 2 is_stmt 0 view .LVU337
 1240 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1241              	.LCFI12:
 1242              		.cfi_def_cfa_offset 24
 1243              		.cfi_offset 3, -24
 1244              		.cfi_offset 4, -20
 1245              		.cfi_offset 5, -16
 1246              		.cfi_offset 6, -12
 1247              		.cfi_offset 7, -8
 1248              		.cfi_offset 14, -4
1404:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxCurrentBasePriority, uxPriorityUsedOnEntry;
 1249              		.loc 1 1404 2 is_stmt 1 view .LVU338
1405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
 1250              		.loc 1 1405 2 view .LVU339
1406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1251              		.loc 1 1406 2 view .LVU340
 1252              	.LVL98:
1408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1253              		.loc 1 1408 3 view .LVU341
 1254 0002 0629     		cmp	r1, #6
 1255 0004 08D9     		bls	.L87
1408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1256              		.loc 1 1408 3 view .LVU342
 1257              	.LBB100:
 1258              	.LBI100:
 233:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 1259              		.loc 2 233 30 view .LVU343
 1260              	.LBB101:
 235:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 1261              		.loc 2 235 1 view .LVU344
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 1262              		.loc 2 237 2 view .LVU345
 1263              		.syntax unified
 1264              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1265 0006 4FF05003 			mov r3, #80												
 1266 000a 83F31188 		msr basepri, r3											
 1267 000e BFF36F8F 		isb														
 1268 0012 BFF34F8F 		dsb														
 1269              	
 1270              	@ 0 "" 2
 1271              	.LVL99:
 1272              		.thumb
 1273              		.syntax unified
 1274              	.L88:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 1275              		.loc 2 237 2 is_stmt 0 view .LVU346
 1276              	.LBE101:
 1277              	.LBE100:
1408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1278              		.loc 1 1408 3 is_stmt 1 discriminator 1 view .LVU347
1408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1279              		.loc 1 1408 3 discriminator 1 view .LVU348
 1280 0016 FEE7     		b	.L88
 1281              	.L87:
1408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1282              		.loc 1 1408 3 is_stmt 0 discriminator 1 view .LVU349
ARM GAS  /tmp/cclVzO8U.s 			page 117


 1283 0018 0446     		mov	r4, r0
 1284 001a 0D46     		mov	r5, r1
1408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1285              		.loc 1 1408 59 is_stmt 1 view .LVU350
1411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1286              		.loc 1 1411 3 view .LVU351
 1287              	.LVL100:
1417:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1288              		.loc 1 1417 28 view .LVU352
1420:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1289              		.loc 1 1420 3 view .LVU353
 1290 001c FFF7FEFF 		bl	vPortEnterCritical
 1291              	.LVL101:
1424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1292              		.loc 1 1424 4 view .LVU354
1424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1293              		.loc 1 1424 12 is_stmt 0 view .LVU355
 1294 0020 74B1     		cbz	r4, .L101
 1295              	.LVL102:
 1296              	.L89:
1426:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1297              		.loc 1 1426 50 is_stmt 1 discriminator 4 view .LVU356
1430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1298              		.loc 1 1430 5 discriminator 4 view .LVU357
1430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1299              		.loc 1 1430 27 is_stmt 0 discriminator 4 view .LVU358
 1300 0022 636C     		ldr	r3, [r4, #68]
 1301              	.LVL103:
1438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1302              		.loc 1 1438 4 is_stmt 1 discriminator 4 view .LVU359
1438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1303              		.loc 1 1438 6 is_stmt 0 discriminator 4 view .LVU360
 1304 0024 9D42     		cmp	r5, r3
 1305 0026 2ED0     		beq	.L90
1442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1306              		.loc 1 1442 5 is_stmt 1 view .LVU361
1442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1307              		.loc 1 1442 7 is_stmt 0 view .LVU362
 1308 0028 0DD9     		bls	.L91
1444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1309              		.loc 1 1444 6 is_stmt 1 view .LVU363
1444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1310              		.loc 1 1444 16 is_stmt 0 view .LVU364
 1311 002a 2B4A     		ldr	r2, .L104
 1312 002c 1268     		ldr	r2, [r2]
1444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1313              		.loc 1 1444 8 view .LVU365
 1314 002e A242     		cmp	r2, r4
 1315 0030 2CD0     		beq	.L97
1449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 1316              		.loc 1 1449 7 is_stmt 1 view .LVU366
1449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 1317              		.loc 1 1449 40 is_stmt 0 view .LVU367
 1318 0032 294A     		ldr	r2, .L104
 1319 0034 1268     		ldr	r2, [r2]
 1320 0036 D26A     		ldr	r2, [r2, #44]
1449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
ARM GAS  /tmp/cclVzO8U.s 			page 118


 1321              		.loc 1 1449 9 view .LVU368
 1322 0038 AA42     		cmp	r2, r5
 1323 003a 29D9     		bls	.L98
1406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1324              		.loc 1 1406 13 view .LVU369
 1325 003c 0026     		movs	r6, #0
 1326 003e 07E0     		b	.L92
 1327              	.LVL104:
 1328              	.L101:
1424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1329              		.loc 1 1424 12 discriminator 1 view .LVU370
 1330 0040 254B     		ldr	r3, .L104
 1331 0042 1C68     		ldr	r4, [r3]
 1332              	.LVL105:
1424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1333              		.loc 1 1424 12 discriminator 1 view .LVU371
 1334 0044 EDE7     		b	.L89
 1335              	.LVL106:
 1336              	.L91:
1465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1337              		.loc 1 1465 10 is_stmt 1 view .LVU372
1465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1338              		.loc 1 1465 20 is_stmt 0 view .LVU373
 1339 0046 244A     		ldr	r2, .L104
 1340 0048 1268     		ldr	r2, [r2]
1465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1341              		.loc 1 1465 12 view .LVU374
 1342 004a A242     		cmp	r2, r4
 1343 004c 22D0     		beq	.L99
1406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1344              		.loc 1 1406 13 view .LVU375
 1345 004e 0026     		movs	r6, #0
 1346              	.L92:
 1347              	.LVL107:
1477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1348              		.loc 1 1477 5 is_stmt 1 view .LVU376
1482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1349              		.loc 1 1482 5 view .LVU377
1482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1350              		.loc 1 1482 27 is_stmt 0 view .LVU378
 1351 0050 E76A     		ldr	r7, [r4, #44]
 1352              	.LVL108:
1488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1353              		.loc 1 1488 6 is_stmt 1 view .LVU379
1488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1354              		.loc 1 1488 8 is_stmt 0 view .LVU380
 1355 0052 BB42     		cmp	r3, r7
 1356 0054 20D0     		beq	.L102
 1357              	.L93:
1494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1358              		.loc 1 1494 31 is_stmt 1 view .LVU381
1498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1359              		.loc 1 1498 6 view .LVU382
1498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1360              		.loc 1 1498 28 is_stmt 0 view .LVU383
 1361 0056 6564     		str	r5, [r4, #68]
1508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
ARM GAS  /tmp/cclVzO8U.s 			page 119


 1362              		.loc 1 1508 5 is_stmt 1 view .LVU384
1508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1363              		.loc 1 1508 11 is_stmt 0 view .LVU385
 1364 0058 A369     		ldr	r3, [r4, #24]
 1365              	.LVL109:
1508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1366              		.loc 1 1508 7 view .LVU386
 1367 005a 002B     		cmp	r3, #0
 1368 005c 02DB     		blt	.L94
1510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1369              		.loc 1 1510 6 is_stmt 1 view .LVU387
 1370 005e C5F10705 		rsb	r5, r5, #7
 1371              	.LVL110:
1510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1372              		.loc 1 1510 6 is_stmt 0 view .LVU388
 1373 0062 A561     		str	r5, [r4, #24]
 1374              	.L94:
1514:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1375              		.loc 1 1514 30 is_stmt 1 view .LVU389
1521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1376              		.loc 1 1521 5 view .LVU390
1521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1377              		.loc 1 1521 9 is_stmt 0 view .LVU391
 1378 0064 6169     		ldr	r1, [r4, #20]
 1379 0066 07EB8703 		add	r3, r7, r7, lsl #2
 1380 006a 9A00     		lsls	r2, r3, #2
 1381 006c 1B4B     		ldr	r3, .L104+4
 1382 006e 1344     		add	r3, r3, r2
1521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1383              		.loc 1 1521 112 view .LVU392
 1384 0070 9942     		cmp	r1, r3
 1385 0072 13D0     		beq	.L103
 1386              	.LVL111:
 1387              	.L95:
1541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1388              		.loc 1 1541 30 is_stmt 1 view .LVU393
1544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1389              		.loc 1 1544 5 view .LVU394
1544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1390              		.loc 1 1544 7 is_stmt 0 view .LVU395
 1391 0074 3EB1     		cbz	r6, .L90
1546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1392              		.loc 1 1546 6 is_stmt 1 view .LVU396
 1393 0076 1A4B     		ldr	r3, .L104+8
 1394 0078 4FF08052 		mov	r2, #268435456
 1395 007c 1A60     		str	r2, [r3]
1546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1396              		.loc 1 1546 6 view .LVU397
 1397              		.syntax unified
 1398              	@ 1546 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1399 007e BFF34F8F 		dsb
 1400              	@ 0 "" 2
1546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1401              		.loc 1 1546 6 view .LVU398
 1402              	@ 1546 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1403 0082 BFF36F8F 		isb
 1404              	@ 0 "" 2
ARM GAS  /tmp/cclVzO8U.s 			page 120


1546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1405              		.loc 1 1546 37 view .LVU399
 1406              	.LVL112:
 1407              		.thumb
 1408              		.syntax unified
 1409              	.L90:
1550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1410              		.loc 1 1550 30 view .LVU400
1555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1411              		.loc 1 1555 5 view .LVU401
1558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1412              		.loc 1 1558 3 view .LVU402
 1413 0086 FFF7FEFF 		bl	vPortExitCritical
 1414              	.LVL113:
1559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1415              		.loc 1 1559 2 is_stmt 0 view .LVU403
 1416 008a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1417              	.LVL114:
 1418              	.L97:
1406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1419              		.loc 1 1406 13 view .LVU404
 1420 008c 0026     		movs	r6, #0
 1421 008e DFE7     		b	.L92
 1422              	.L98:
1451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
 1423              		.loc 1 1451 23 view .LVU405
 1424 0090 0126     		movs	r6, #1
 1425 0092 DDE7     		b	.L92
 1426              	.L99:
1470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1427              		.loc 1 1470 21 view .LVU406
 1428 0094 0126     		movs	r6, #1
 1429 0096 DBE7     		b	.L92
 1430              	.LVL115:
 1431              	.L102:
1490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1432              		.loc 1 1490 7 is_stmt 1 view .LVU407
1490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1433              		.loc 1 1490 25 is_stmt 0 view .LVU408
 1434 0098 E562     		str	r5, [r4, #44]
 1435 009a DCE7     		b	.L93
 1436              	.LVL116:
 1437              	.L103:
1526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1438              		.loc 1 1526 6 is_stmt 1 view .LVU409
1526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1439              		.loc 1 1526 10 is_stmt 0 view .LVU410
 1440 009c 251D     		adds	r5, r4, #4
 1441 009e 2846     		mov	r0, r5
 1442 00a0 FFF7FEFF 		bl	uxListRemove
 1443              	.LVL117:
1526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1444              		.loc 1 1526 8 view .LVU411
 1445 00a4 38B9     		cbnz	r0, .L96
1531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1446              		.loc 1 1531 7 is_stmt 1 view .LVU412
 1447 00a6 0123     		movs	r3, #1
ARM GAS  /tmp/cclVzO8U.s 			page 121


 1448 00a8 03FA07F7 		lsl	r7, r3, r7
 1449              	.LVL118:
1531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1450              		.loc 1 1531 7 is_stmt 0 view .LVU413
 1451 00ac 0D4A     		ldr	r2, .L104+12
 1452 00ae 1368     		ldr	r3, [r2]
 1453 00b0 23EA0703 		bic	r3, r3, r7
 1454 00b4 1360     		str	r3, [r2]
 1455              	.L96:
1535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1456              		.loc 1 1535 31 is_stmt 1 view .LVU414
1537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1457              		.loc 1 1537 6 view .LVU415
1537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1458              		.loc 1 1537 6 view .LVU416
 1459 00b6 E36A     		ldr	r3, [r4, #44]
 1460 00b8 0122     		movs	r2, #1
 1461 00ba 9A40     		lsls	r2, r2, r3
 1462 00bc 0949     		ldr	r1, .L104+12
 1463 00be 0868     		ldr	r0, [r1]
 1464 00c0 0243     		orrs	r2, r2, r0
 1465 00c2 0A60     		str	r2, [r1]
1537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1466              		.loc 1 1537 6 view .LVU417
 1467 00c4 03EB8303 		add	r3, r3, r3, lsl #2
 1468 00c8 9A00     		lsls	r2, r3, #2
 1469 00ca 2946     		mov	r1, r5
 1470 00cc 0348     		ldr	r0, .L104+4
 1471 00ce 1044     		add	r0, r0, r2
 1472 00d0 FFF7FEFF 		bl	vListInsertEnd
 1473              	.LVL119:
1537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1474              		.loc 1 1537 36 view .LVU418
 1475 00d4 CEE7     		b	.L95
 1476              	.L105:
 1477 00d6 00BF     		.align	2
 1478              	.L104:
 1479 00d8 00000000 		.word	.LANCHOR10
 1480 00dc 00000000 		.word	.LANCHOR4
 1481 00e0 04ED00E0 		.word	-536810236
 1482 00e4 00000000 		.word	.LANCHOR13
 1483              		.cfi_endproc
 1484              	.LFE596:
 1486              		.section	.text.vTaskResume,"ax",%progbits
 1487              		.align	1
 1488              		.global	vTaskResume
 1489              		.syntax unified
 1490              		.thumb
 1491              		.thumb_func
 1492              		.fpu softvfp
 1494              	vTaskResume:
 1495              	.LVL120:
 1496              	.LFB599:
1703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 1497              		.loc 1 1703 2 view -0
 1498              		.cfi_startproc
 1499              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/cclVzO8U.s 			page 122


 1500              		@ frame_needed = 0, uses_anonymous_args = 0
1703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 1501              		.loc 1 1703 2 is_stmt 0 view .LVU420
 1502 0000 38B5     		push	{r3, r4, r5, lr}
 1503              	.LCFI13:
 1504              		.cfi_def_cfa_offset 16
 1505              		.cfi_offset 3, -16
 1506              		.cfi_offset 4, -12
 1507              		.cfi_offset 5, -8
 1508              		.cfi_offset 14, -4
1704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1509              		.loc 1 1704 2 is_stmt 1 view .LVU421
 1510              	.LVL121:
1707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1511              		.loc 1 1707 3 view .LVU422
 1512 0002 68B1     		cbz	r0, .L112
 1513 0004 0446     		mov	r4, r0
1707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1514              		.loc 1 1707 32 discriminator 1 view .LVU423
1711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1515              		.loc 1 1711 3 discriminator 1 view .LVU424
1711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1516              		.loc 1 1711 36 is_stmt 0 discriminator 1 view .LVU425
 1517 0006 1C4B     		ldr	r3, .L114
 1518 0008 1B68     		ldr	r3, [r3]
1711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1519              		.loc 1 1711 25 discriminator 1 view .LVU426
 1520 000a 8342     		cmp	r3, r0
 1521 000c 07D0     		beq	.L106
1713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1522              		.loc 1 1713 4 is_stmt 1 view .LVU427
 1523 000e FFF7FEFF 		bl	vPortEnterCritical
 1524              	.LVL122:
1715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1525              		.loc 1 1715 5 view .LVU428
1715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1526              		.loc 1 1715 9 is_stmt 0 view .LVU429
 1527 0012 2046     		mov	r0, r4
 1528 0014 FFF7FEFF 		bl	prvTaskIsTaskSuspended
 1529              	.LVL123:
1715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1530              		.loc 1 1715 7 view .LVU430
 1531 0018 58B9     		cbnz	r0, .L113
 1532              	.L110:
1739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1533              		.loc 1 1739 30 is_stmt 1 view .LVU431
1742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1534              		.loc 1 1742 4 view .LVU432
 1535 001a FFF7FEFF 		bl	vPortExitCritical
 1536              	.LVL124:
1746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1537              		.loc 1 1746 28 view .LVU433
 1538              	.L106:
1748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1539              		.loc 1 1748 2 is_stmt 0 view .LVU434
 1540 001e 38BD     		pop	{r3, r4, r5, pc}
 1541              	.LVL125:
ARM GAS  /tmp/cclVzO8U.s 			page 123


 1542              	.L112:
1707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1543              		.loc 1 1707 3 is_stmt 1 view .LVU435
 1544              	.LBB102:
 1545              	.LBI102:
 233:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 1546              		.loc 2 233 30 view .LVU436
 1547              	.LBB103:
 235:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 1548              		.loc 2 235 1 view .LVU437
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 1549              		.loc 2 237 2 view .LVU438
 1550              		.syntax unified
 1551              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1552 0020 4FF05003 			mov r3, #80												
 1553 0024 83F31188 		msr basepri, r3											
 1554 0028 BFF36F8F 		isb														
 1555 002c BFF34F8F 		dsb														
 1556              	
 1557              	@ 0 "" 2
 1558              	.LVL126:
 1559              		.thumb
 1560              		.syntax unified
 1561              	.L108:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 1562              		.loc 2 237 2 is_stmt 0 view .LVU439
 1563              	.LBE103:
 1564              	.LBE102:
1707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1565              		.loc 1 1707 3 is_stmt 1 discriminator 1 view .LVU440
1707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1566              		.loc 1 1707 3 discriminator 1 view .LVU441
 1567 0030 FEE7     		b	.L108
 1568              	.LVL127:
 1569              	.L113:
1717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1570              		.loc 1 1717 31 view .LVU442
1721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 1571              		.loc 1 1721 6 view .LVU443
1721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 1572              		.loc 1 1721 15 is_stmt 0 view .LVU444
 1573 0032 251D     		adds	r5, r4, #4
 1574 0034 2846     		mov	r0, r5
 1575 0036 FFF7FEFF 		bl	uxListRemove
 1576              	.LVL128:
1722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1577              		.loc 1 1722 6 is_stmt 1 view .LVU445
1722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1578              		.loc 1 1722 6 view .LVU446
 1579 003a E36A     		ldr	r3, [r4, #44]
 1580 003c 0122     		movs	r2, #1
 1581 003e 9A40     		lsls	r2, r2, r3
 1582 0040 0E49     		ldr	r1, .L114+4
 1583 0042 0868     		ldr	r0, [r1]
 1584 0044 0243     		orrs	r2, r2, r0
 1585 0046 0A60     		str	r2, [r1]
1722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cclVzO8U.s 			page 124


 1586              		.loc 1 1722 6 view .LVU447
 1587 0048 03EB8303 		add	r3, r3, r3, lsl #2
 1588 004c 9A00     		lsls	r2, r3, #2
 1589 004e 2946     		mov	r1, r5
 1590 0050 0B48     		ldr	r0, .L114+8
 1591 0052 1044     		add	r0, r0, r2
 1592 0054 FFF7FEFF 		bl	vListInsertEnd
 1593              	.LVL129:
1722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1594              		.loc 1 1722 36 view .LVU448
1725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1595              		.loc 1 1725 6 view .LVU449
1725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1596              		.loc 1 1725 15 is_stmt 0 view .LVU450
 1597 0058 E26A     		ldr	r2, [r4, #44]
1725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1598              		.loc 1 1725 43 view .LVU451
 1599 005a 074B     		ldr	r3, .L114
 1600 005c 1B68     		ldr	r3, [r3]
 1601 005e DB6A     		ldr	r3, [r3, #44]
1725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1602              		.loc 1 1725 8 view .LVU452
 1603 0060 9A42     		cmp	r2, r3
 1604 0062 DAD3     		bcc	.L110
1730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1605              		.loc 1 1730 7 is_stmt 1 view .LVU453
 1606 0064 074B     		ldr	r3, .L114+12
 1607 0066 4FF08052 		mov	r2, #268435456
 1608 006a 1A60     		str	r2, [r3]
1730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1609              		.loc 1 1730 7 view .LVU454
 1610              		.syntax unified
 1611              	@ 1730 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1612 006c BFF34F8F 		dsb
 1613              	@ 0 "" 2
1730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1614              		.loc 1 1730 7 view .LVU455
 1615              	@ 1730 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1616 0070 BFF36F8F 		isb
 1617              	@ 0 "" 2
1730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1618              		.loc 1 1730 38 view .LVU456
 1619              		.thumb
 1620              		.syntax unified
 1621 0074 D1E7     		b	.L110
 1622              	.L115:
 1623 0076 00BF     		.align	2
 1624              	.L114:
 1625 0078 00000000 		.word	.LANCHOR10
 1626 007c 00000000 		.word	.LANCHOR13
 1627 0080 00000000 		.word	.LANCHOR4
 1628 0084 04ED00E0 		.word	-536810236
 1629              		.cfi_endproc
 1630              	.LFE599:
 1632              		.section	.text.xTaskResumeFromISR,"ax",%progbits
 1633              		.align	1
 1634              		.global	xTaskResumeFromISR
ARM GAS  /tmp/cclVzO8U.s 			page 125


 1635              		.syntax unified
 1636              		.thumb
 1637              		.thumb_func
 1638              		.fpu softvfp
 1640              	xTaskResumeFromISR:
 1641              	.LVL130:
 1642              	.LFB600:
1757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
 1643              		.loc 1 1757 2 view -0
 1644              		.cfi_startproc
 1645              		@ args = 0, pretend = 0, frame = 0
 1646              		@ frame_needed = 0, uses_anonymous_args = 0
1757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
 1647              		.loc 1 1757 2 is_stmt 0 view .LVU458
 1648 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1649              	.LCFI14:
 1650              		.cfi_def_cfa_offset 24
 1651              		.cfi_offset 3, -24
 1652              		.cfi_offset 4, -20
 1653              		.cfi_offset 5, -16
 1654              		.cfi_offset 6, -12
 1655              		.cfi_offset 7, -8
 1656              		.cfi_offset 14, -4
1758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 1657              		.loc 1 1758 2 is_stmt 1 view .LVU459
 1658              	.LVL131:
1759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 1659              		.loc 1 1759 2 view .LVU460
1760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1660              		.loc 1 1760 2 view .LVU461
1762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1661              		.loc 1 1762 3 view .LVU462
 1662 0002 70B3     		cbz	r0, .L125
 1663 0004 0446     		mov	r4, r0
1762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1664              		.loc 1 1762 32 discriminator 2 view .LVU463
1780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1665              		.loc 1 1780 3 discriminator 2 view .LVU464
 1666 0006 FFF7FEFF 		bl	vPortValidateInterruptPriority
 1667              	.LVL132:
1782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1668              		.loc 1 1782 3 discriminator 2 view .LVU465
 1669              	.LBB104:
 1670              	.LBI104:
 249:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 1671              		.loc 2 249 34 discriminator 2 view .LVU466
 1672              	.LBB105:
 251:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 1673              		.loc 2 251 1 discriminator 2 view .LVU467
 253:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 1674              		.loc 2 253 2 discriminator 2 view .LVU468
 1675              		.syntax unified
 1676              	@ 253 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1677 000a EFF31187 			mrs r7, basepri											
 1678 000e 4FF05003 		mov r3, #80												
 1679 0012 83F31188 		msr basepri, r3											
 1680 0016 BFF36F8F 		isb														
ARM GAS  /tmp/cclVzO8U.s 			page 126


 1681 001a BFF34F8F 		dsb														
 1682              	
 1683              	@ 0 "" 2
 1684              	.LVL133:
 265:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** }
 1685              		.loc 2 265 2 discriminator 2 view .LVU469
 265:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** }
 1686              		.loc 2 265 2 is_stmt 0 discriminator 2 view .LVU470
 1687              		.thumb
 1688              		.syntax unified
 1689              	.LBE105:
 1690              	.LBE104:
1784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1691              		.loc 1 1784 4 is_stmt 1 discriminator 2 view .LVU471
1784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1692              		.loc 1 1784 8 is_stmt 0 discriminator 2 view .LVU472
 1693 001e 2046     		mov	r0, r4
 1694 0020 FFF7FEFF 		bl	prvTaskIsTaskSuspended
 1695              	.LVL134:
1784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1696              		.loc 1 1784 6 discriminator 2 view .LVU473
 1697 0024 78B3     		cbz	r0, .L122
1786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1698              		.loc 1 1786 39 is_stmt 1 view .LVU474
1789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1699              		.loc 1 1789 5 view .LVU475
1789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1700              		.loc 1 1789 30 is_stmt 0 view .LVU476
 1701 0026 1A4B     		ldr	r3, .L126
 1702 0028 1B68     		ldr	r3, [r3]
1789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1703              		.loc 1 1789 7 view .LVU477
 1704 002a 2BBB     		cbnz	r3, .L120
1793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1705              		.loc 1 1793 6 is_stmt 1 view .LVU478
1793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1706              		.loc 1 1793 15 is_stmt 0 view .LVU479
 1707 002c E26A     		ldr	r2, [r4, #44]
1793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1708              		.loc 1 1793 43 view .LVU480
 1709 002e 194B     		ldr	r3, .L126+4
 1710 0030 1B68     		ldr	r3, [r3]
 1711 0032 DB6A     		ldr	r3, [r3, #44]
1793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1712              		.loc 1 1793 8 view .LVU481
 1713 0034 9A42     		cmp	r2, r3
 1714 0036 1DD2     		bcs	.L123
1758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 1715              		.loc 1 1758 13 view .LVU482
 1716 0038 0025     		movs	r5, #0
 1717              	.L121:
 1718              	.LVL135:
1799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1719              		.loc 1 1799 31 is_stmt 1 view .LVU483
1802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 1720              		.loc 1 1802 6 view .LVU484
1802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
ARM GAS  /tmp/cclVzO8U.s 			page 127


 1721              		.loc 1 1802 15 is_stmt 0 view .LVU485
 1722 003a 261D     		adds	r6, r4, #4
 1723 003c 3046     		mov	r0, r6
 1724 003e FFF7FEFF 		bl	uxListRemove
 1725              	.LVL136:
1803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1726              		.loc 1 1803 6 is_stmt 1 view .LVU486
1803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1727              		.loc 1 1803 6 view .LVU487
 1728 0042 E36A     		ldr	r3, [r4, #44]
 1729 0044 0122     		movs	r2, #1
 1730 0046 9A40     		lsls	r2, r2, r3
 1731 0048 1349     		ldr	r1, .L126+8
 1732 004a 0868     		ldr	r0, [r1]
 1733 004c 0243     		orrs	r2, r2, r0
 1734 004e 0A60     		str	r2, [r1]
1803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1735              		.loc 1 1803 6 view .LVU488
 1736 0050 03EB8303 		add	r3, r3, r3, lsl #2
 1737 0054 9A00     		lsls	r2, r3, #2
 1738 0056 3146     		mov	r1, r6
 1739 0058 1048     		ldr	r0, .L126+12
 1740 005a 1044     		add	r0, r0, r2
 1741 005c FFF7FEFF 		bl	vListInsertEnd
 1742              	.LVL137:
1803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1743              		.loc 1 1803 36 view .LVU489
 1744 0060 12E0     		b	.L119
 1745              	.LVL138:
 1746              	.L125:
1762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1747              		.loc 1 1762 3 view .LVU490
 1748              	.LBB106:
 1749              	.LBI106:
 233:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 1750              		.loc 2 233 30 view .LVU491
 1751              	.LBB107:
 235:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 1752              		.loc 2 235 1 view .LVU492
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 1753              		.loc 2 237 2 view .LVU493
 1754              		.syntax unified
 1755              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1756 0062 4FF05003 			mov r3, #80												
 1757 0066 83F31188 		msr basepri, r3											
 1758 006a BFF36F8F 		isb														
 1759 006e BFF34F8F 		dsb														
 1760              	
 1761              	@ 0 "" 2
 1762              	.LVL139:
 1763              		.thumb
 1764              		.syntax unified
 1765              	.L118:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 1766              		.loc 2 237 2 is_stmt 0 view .LVU494
 1767              	.LBE107:
 1768              	.LBE106:
ARM GAS  /tmp/cclVzO8U.s 			page 128


1762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1769              		.loc 1 1762 3 is_stmt 1 discriminator 1 view .LVU495
1762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1770              		.loc 1 1762 3 discriminator 1 view .LVU496
 1771 0072 FEE7     		b	.L118
 1772              	.LVL140:
 1773              	.L123:
1795:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1774              		.loc 1 1795 22 is_stmt 0 view .LVU497
 1775 0074 0125     		movs	r5, #1
 1776 0076 E0E7     		b	.L121
 1777              	.L120:
1810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1778              		.loc 1 1810 6 is_stmt 1 view .LVU498
 1779 0078 04F11801 		add	r1, r4, #24
 1780 007c 0848     		ldr	r0, .L126+16
 1781 007e FFF7FEFF 		bl	vListInsertEnd
 1782              	.LVL141:
1758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 1783              		.loc 1 1758 13 is_stmt 0 view .LVU499
 1784 0082 0025     		movs	r5, #0
 1785 0084 00E0     		b	.L119
 1786              	.L122:
1758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 1787              		.loc 1 1758 13 view .LVU500
 1788 0086 0025     		movs	r5, #0
 1789              	.LVL142:
 1790              	.L119:
1815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1791              		.loc 1 1815 29 is_stmt 1 view .LVU501
1818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1792              		.loc 1 1818 3 view .LVU502
 1793              	.LBB108:
 1794              	.LBI108:
 269:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 1795              		.loc 2 269 30 view .LVU503
 1796              	.LBB109:
 1797              		.loc 2 271 2 view .LVU504
 1798              		.syntax unified
 1799              	@ 271 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1800 0088 87F31188 			msr basepri, r7	
 1801              	@ 0 "" 2
 1802              	.LVL143:
 1803              		.loc 2 271 2 is_stmt 0 view .LVU505
 1804              		.thumb
 1805              		.syntax unified
 1806              	.LBE109:
 1807              	.LBE108:
1820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1808              		.loc 1 1820 3 is_stmt 1 view .LVU506
1821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1809              		.loc 1 1821 2 is_stmt 0 view .LVU507
 1810 008c 2846     		mov	r0, r5
 1811 008e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1812              	.LVL144:
 1813              	.L127:
1821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cclVzO8U.s 			page 129


 1814              		.loc 1 1821 2 view .LVU508
 1815              		.align	2
 1816              	.L126:
 1817 0090 00000000 		.word	.LANCHOR16
 1818 0094 00000000 		.word	.LANCHOR10
 1819 0098 00000000 		.word	.LANCHOR13
 1820 009c 00000000 		.word	.LANCHOR4
 1821 00a0 00000000 		.word	.LANCHOR1
 1822              		.cfi_endproc
 1823              	.LFE600:
 1825              		.section	.text.vTaskStartScheduler,"ax",%progbits
 1826              		.align	1
 1827              		.global	vTaskStartScheduler
 1828              		.syntax unified
 1829              		.thumb
 1830              		.thumb_func
 1831              		.fpu softvfp
 1833              	vTaskStartScheduler:
 1834              	.LFB601:
1827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
 1835              		.loc 1 1827 1 is_stmt 1 view -0
 1836              		.cfi_startproc
 1837              		@ args = 0, pretend = 0, frame = 0
 1838              		@ frame_needed = 0, uses_anonymous_args = 0
 1839 0000 00B5     		push	{lr}
 1840              	.LCFI15:
 1841              		.cfi_def_cfa_offset 4
 1842              		.cfi_offset 14, -4
 1843 0002 83B0     		sub	sp, sp, #12
 1844              	.LCFI16:
 1845              		.cfi_def_cfa_offset 16
1828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1846              		.loc 1 1828 1 view .LVU510
1860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								"IDLE", configMINIMAL_STACK_SIZE,
 1847              		.loc 1 1860 3 view .LVU511
1860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								"IDLE", configMINIMAL_STACK_SIZE,
 1848              		.loc 1 1860 13 is_stmt 0 view .LVU512
 1849 0004 174B     		ldr	r3, .L135
 1850 0006 0193     		str	r3, [sp, #4]
 1851 0008 0023     		movs	r3, #0
 1852 000a 0093     		str	r3, [sp]
 1853 000c 8022     		movs	r2, #128
 1854 000e 1649     		ldr	r1, .L135+4
 1855 0010 1648     		ldr	r0, .L135+8
 1856 0012 FFF7FEFF 		bl	xTaskCreate
 1857              	.LVL145:
1881:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 1858              		.loc 1 1881 2 is_stmt 1 view .LVU513
1881:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 1859              		.loc 1 1881 4 is_stmt 0 view .LVU514
 1860 0016 0128     		cmp	r0, #1
 1861 0018 05D0     		beq	.L133
1924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1862              		.loc 1 1924 3 is_stmt 1 view .LVU515
 1863 001a B0F1FF3F 		cmp	r0, #-1
 1864 001e 17D0     		beq	.L134
 1865              	.LVL146:
ARM GAS  /tmp/cclVzO8U.s 			page 130


 1866              	.L128:
1930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 1867              		.loc 1 1930 1 is_stmt 0 view .LVU516
 1868 0020 03B0     		add	sp, sp, #12
 1869              	.LCFI17:
 1870              		.cfi_remember_state
 1871              		.cfi_def_cfa_offset 4
 1872              		@ sp needed
 1873 0022 5DF804FB 		ldr	pc, [sp], #4
 1874              	.LVL147:
 1875              	.L133:
 1876              	.LCFI18:
 1877              		.cfi_restore_state
1888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1878              		.loc 1 1888 3 is_stmt 1 view .LVU517
 1879              	.LBB110:
 1880              	.LBI110:
 233:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 1881              		.loc 2 233 30 view .LVU518
 1882              	.LBB111:
 235:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 1883              		.loc 2 235 1 view .LVU519
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 1884              		.loc 2 237 2 view .LVU520
 1885              		.syntax unified
 1886              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1887 0026 4FF05003 			mov r3, #80												
 1888 002a 83F31188 		msr basepri, r3											
 1889 002e BFF36F8F 		isb														
 1890 0032 BFF34F8F 		dsb														
 1891              	
 1892              	@ 0 "" 2
 1893              		.thumb
 1894              		.syntax unified
 1895              	.LBE111:
 1896              	.LBE110:
1898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xSchedulerRunning = pdTRUE;
 1897              		.loc 1 1898 3 view .LVU521
1898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xSchedulerRunning = pdTRUE;
 1898              		.loc 1 1898 24 is_stmt 0 view .LVU522
 1899 0036 0E4B     		ldr	r3, .L135+12
 1900 0038 4FF0FF32 		mov	r2, #-1
 1901 003c 1A60     		str	r2, [r3]
1899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount = ( TickType_t ) 0U;
 1902              		.loc 1 1899 3 is_stmt 1 view .LVU523
1899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount = ( TickType_t ) 0U;
 1903              		.loc 1 1899 21 is_stmt 0 view .LVU524
 1904 003e 0D4B     		ldr	r3, .L135+16
 1905 0040 0122     		movs	r2, #1
 1906 0042 1A60     		str	r2, [r3]
1900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1907              		.loc 1 1900 3 is_stmt 1 view .LVU525
1900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1908              		.loc 1 1900 14 is_stmt 0 view .LVU526
 1909 0044 0C4B     		ldr	r3, .L135+20
 1910 0046 0022     		movs	r2, #0
 1911 0048 1A60     		str	r2, [r3]
ARM GAS  /tmp/cclVzO8U.s 			page 131


1905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1912              		.loc 1 1905 43 is_stmt 1 view .LVU527
1909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1913              		.loc 1 1909 3 view .LVU528
1909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1914              		.loc 1 1909 7 is_stmt 0 view .LVU529
 1915 004a FFF7FEFF 		bl	xPortStartScheduler
 1916              	.LVL148:
1909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1917              		.loc 1 1909 7 view .LVU530
 1918 004e E7E7     		b	.L128
 1919              	.LVL149:
 1920              	.L134:
1924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1921              		.loc 1 1924 3 is_stmt 1 view .LVU531
 1922              	.LBB112:
 1923              	.LBI112:
 233:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 1924              		.loc 2 233 30 view .LVU532
 1925              	.LBB113:
 235:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 1926              		.loc 2 235 1 view .LVU533
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 1927              		.loc 2 237 2 view .LVU534
 1928              		.syntax unified
 1929              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1930 0050 4FF05003 			mov r3, #80												
 1931 0054 83F31188 		msr basepri, r3											
 1932 0058 BFF36F8F 		isb														
 1933 005c BFF34F8F 		dsb														
 1934              	
 1935              	@ 0 "" 2
 1936              	.LVL150:
 1937              		.thumb
 1938              		.syntax unified
 1939              	.L131:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 1940              		.loc 2 237 2 is_stmt 0 view .LVU535
 1941              	.LBE113:
 1942              	.LBE112:
1924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1943              		.loc 1 1924 3 is_stmt 1 discriminator 2 view .LVU536
1924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1944              		.loc 1 1924 3 discriminator 2 view .LVU537
 1945 0060 FEE7     		b	.L131
 1946              	.L136:
 1947 0062 00BF     		.align	2
 1948              	.L135:
 1949 0064 00000000 		.word	.LANCHOR17
 1950 0068 00000000 		.word	.LC0
 1951 006c 00000000 		.word	prvIdleTask
 1952 0070 00000000 		.word	.LANCHOR3
 1953 0074 00000000 		.word	.LANCHOR11
 1954 0078 00000000 		.word	.LANCHOR14
 1955              		.cfi_endproc
 1956              	.LFE601:
 1958              		.section	.text.vTaskEndScheduler,"ax",%progbits
ARM GAS  /tmp/cclVzO8U.s 			page 132


 1959              		.align	1
 1960              		.global	vTaskEndScheduler
 1961              		.syntax unified
 1962              		.thumb
 1963              		.thumb_func
 1964              		.fpu softvfp
 1966              	vTaskEndScheduler:
 1967              	.LFB602:
1934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop the scheduler interrupts and call the portable scheduler end
 1968              		.loc 1 1934 1 view -0
 1969              		.cfi_startproc
 1970              		@ args = 0, pretend = 0, frame = 0
 1971              		@ frame_needed = 0, uses_anonymous_args = 0
 1972 0000 08B5     		push	{r3, lr}
 1973              	.LCFI19:
 1974              		.cfi_def_cfa_offset 8
 1975              		.cfi_offset 3, -8
 1976              		.cfi_offset 14, -4
1938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xSchedulerRunning = pdFALSE;
 1977              		.loc 1 1938 2 view .LVU539
 1978              	.LBB114:
 1979              	.LBI114:
 233:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 1980              		.loc 2 233 30 view .LVU540
 1981              	.LBB115:
 235:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 1982              		.loc 2 235 1 view .LVU541
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 1983              		.loc 2 237 2 view .LVU542
 1984              		.syntax unified
 1985              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1986 0002 4FF05003 			mov r3, #80												
 1987 0006 83F31188 		msr basepri, r3											
 1988 000a BFF36F8F 		isb														
 1989 000e BFF34F8F 		dsb														
 1990              	
 1991              	@ 0 "" 2
 1992              		.thumb
 1993              		.syntax unified
 1994              	.LBE115:
 1995              	.LBE114:
1939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vPortEndScheduler();
 1996              		.loc 1 1939 2 view .LVU543
1939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vPortEndScheduler();
 1997              		.loc 1 1939 20 is_stmt 0 view .LVU544
 1998 0012 034B     		ldr	r3, .L139
 1999 0014 0022     		movs	r2, #0
 2000 0016 1A60     		str	r2, [r3]
1940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2001              		.loc 1 1940 2 is_stmt 1 view .LVU545
 2002 0018 FFF7FEFF 		bl	vPortEndScheduler
 2003              	.LVL151:
1941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
 2004              		.loc 1 1941 1 is_stmt 0 view .LVU546
 2005 001c 08BD     		pop	{r3, pc}
 2006              	.L140:
 2007 001e 00BF     		.align	2
ARM GAS  /tmp/cclVzO8U.s 			page 133


 2008              	.L139:
 2009 0020 00000000 		.word	.LANCHOR11
 2010              		.cfi_endproc
 2011              	.LFE602:
 2013              		.section	.text.vTaskSuspendAll,"ax",%progbits
 2014              		.align	1
 2015              		.global	vTaskSuspendAll
 2016              		.syntax unified
 2017              		.thumb
 2018              		.thumb_func
 2019              		.fpu softvfp
 2021              	vTaskSuspendAll:
 2022              	.LFB603:
1945:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A critical section is not required as the variable is of type
 2023              		.loc 1 1945 1 is_stmt 1 view -0
 2024              		.cfi_startproc
 2025              		@ args = 0, pretend = 0, frame = 0
 2026              		@ frame_needed = 0, uses_anonymous_args = 0
 2027              		@ link register save eliminated.
1950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2028              		.loc 1 1950 2 view .LVU548
 2029 0000 024A     		ldr	r2, .L142
 2030 0002 1368     		ldr	r3, [r2]
 2031 0004 0133     		adds	r3, r3, #1
 2032 0006 1360     		str	r3, [r2]
1951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
 2033              		.loc 1 1951 1 is_stmt 0 view .LVU549
 2034 0008 7047     		bx	lr
 2035              	.L143:
 2036 000a 00BF     		.align	2
 2037              	.L142:
 2038 000c 00000000 		.word	.LANCHOR16
 2039              		.cfi_endproc
 2040              	.LFE603:
 2042              		.section	.text.xTaskGetTickCount,"ax",%progbits
 2043              		.align	1
 2044              		.global	xTaskGetTickCount
 2045              		.syntax unified
 2046              		.thumb
 2047              		.thumb_func
 2048              		.fpu softvfp
 2050              	xTaskGetTickCount:
 2051              	.LFB605:
2128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTicks;
 2052              		.loc 1 2128 1 is_stmt 1 view -0
 2053              		.cfi_startproc
 2054              		@ args = 0, pretend = 0, frame = 0
 2055              		@ frame_needed = 0, uses_anonymous_args = 0
 2056              		@ link register save eliminated.
2129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2057              		.loc 1 2129 1 view .LVU551
2132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2058              		.loc 1 2132 32 view .LVU552
2134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2059              		.loc 1 2134 3 view .LVU553
2134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2060              		.loc 1 2134 10 is_stmt 0 view .LVU554
ARM GAS  /tmp/cclVzO8U.s 			page 134


 2061 0000 014B     		ldr	r3, .L145
 2062 0002 1868     		ldr	r0, [r3]
 2063              	.LVL152:
2136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2064              		.loc 1 2136 31 is_stmt 1 view .LVU555
2138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2065              		.loc 1 2138 2 view .LVU556
2139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2066              		.loc 1 2139 1 is_stmt 0 view .LVU557
 2067 0004 7047     		bx	lr
 2068              	.L146:
 2069 0006 00BF     		.align	2
 2070              	.L145:
 2071 0008 00000000 		.word	.LANCHOR14
 2072              		.cfi_endproc
 2073              	.LFE605:
 2075              		.section	.text.xTaskGetTickCountFromISR,"ax",%progbits
 2076              		.align	1
 2077              		.global	xTaskGetTickCountFromISR
 2078              		.syntax unified
 2079              		.thumb
 2080              		.thumb_func
 2081              		.fpu softvfp
 2083              	xTaskGetTickCountFromISR:
 2084              	.LFB606:
2143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xReturn;
 2085              		.loc 1 2143 1 is_stmt 1 view -0
 2086              		.cfi_startproc
 2087              		@ args = 0, pretend = 0, frame = 0
 2088              		@ frame_needed = 0, uses_anonymous_args = 0
 2089 0000 08B5     		push	{r3, lr}
 2090              	.LCFI20:
 2091              		.cfi_def_cfa_offset 8
 2092              		.cfi_offset 3, -8
 2093              		.cfi_offset 14, -4
2144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxSavedInterruptStatus;
 2094              		.loc 1 2144 1 view .LVU559
2145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2095              		.loc 1 2145 1 view .LVU560
2161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2096              		.loc 1 2161 2 view .LVU561
 2097 0002 FFF7FEFF 		bl	vPortValidateInterruptPriority
 2098              	.LVL153:
2163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2099              		.loc 1 2163 2 view .LVU562
2165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2100              		.loc 1 2165 3 view .LVU563
2165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2101              		.loc 1 2165 11 is_stmt 0 view .LVU564
 2102 0006 014B     		ldr	r3, .L149
 2103 0008 1868     		ldr	r0, [r3]
 2104              	.LVL154:
2167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2105              		.loc 1 2167 2 is_stmt 1 view .LVU565
2169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2106              		.loc 1 2169 2 view .LVU566
2170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
ARM GAS  /tmp/cclVzO8U.s 			page 135


 2107              		.loc 1 2170 1 is_stmt 0 view .LVU567
 2108 000a 08BD     		pop	{r3, pc}
 2109              	.L150:
 2110              		.align	2
 2111              	.L149:
 2112 000c 00000000 		.word	.LANCHOR14
 2113              		.cfi_endproc
 2114              	.LFE606:
 2116              		.section	.text.uxTaskGetNumberOfTasks,"ax",%progbits
 2117              		.align	1
 2118              		.global	uxTaskGetNumberOfTasks
 2119              		.syntax unified
 2120              		.thumb
 2121              		.thumb_func
 2122              		.fpu softvfp
 2124              	uxTaskGetNumberOfTasks:
 2125              	.LFB607:
2174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A critical section is not required because the variables are of type
 2126              		.loc 1 2174 1 is_stmt 1 view -0
 2127              		.cfi_startproc
 2128              		@ args = 0, pretend = 0, frame = 0
 2129              		@ frame_needed = 0, uses_anonymous_args = 0
 2130              		@ link register save eliminated.
2177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2131              		.loc 1 2177 2 view .LVU569
2177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2132              		.loc 1 2177 9 is_stmt 0 view .LVU570
 2133 0000 014B     		ldr	r3, .L152
 2134 0002 1868     		ldr	r0, [r3]
2178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2135              		.loc 1 2178 1 view .LVU571
 2136 0004 7047     		bx	lr
 2137              	.L153:
 2138 0006 00BF     		.align	2
 2139              	.L152:
 2140 0008 00000000 		.word	.LANCHOR9
 2141              		.cfi_endproc
 2142              	.LFE607:
 2144              		.section	.text.pcTaskGetName,"ax",%progbits
 2145              		.align	1
 2146              		.global	pcTaskGetName
 2147              		.syntax unified
 2148              		.thumb
 2149              		.thumb_func
 2150              		.fpu softvfp
 2152              	pcTaskGetName:
 2153              	.LVL155:
 2154              	.LFB608:
2182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB;
 2155              		.loc 1 2182 1 is_stmt 1 view -0
 2156              		.cfi_startproc
 2157              		@ args = 0, pretend = 0, frame = 0
 2158              		@ frame_needed = 0, uses_anonymous_args = 0
 2159              		@ link register save eliminated.
2183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2160              		.loc 1 2183 1 view .LVU573
2187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTCB );
ARM GAS  /tmp/cclVzO8U.s 			page 136


 2161              		.loc 1 2187 2 view .LVU574
2187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTCB );
 2162              		.loc 1 2187 10 is_stmt 0 view .LVU575
 2163 0000 0346     		mov	r3, r0
 2164 0002 18B1     		cbz	r0, .L158
 2165              	.LVL156:
 2166              	.L155:
2188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 2167              		.loc 1 2188 2 is_stmt 1 discriminator 4 view .LVU576
 2168 0004 2BB1     		cbz	r3, .L159
2188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 2169              		.loc 1 2188 23 discriminator 2 view .LVU577
2189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2170              		.loc 1 2189 2 discriminator 2 view .LVU578
2190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2171              		.loc 1 2190 1 is_stmt 0 discriminator 2 view .LVU579
 2172 0006 03F13400 		add	r0, r3, #52
 2173 000a 7047     		bx	lr
 2174              	.LVL157:
 2175              	.L158:
2187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTCB );
 2176              		.loc 1 2187 10 discriminator 1 view .LVU580
 2177 000c 054B     		ldr	r3, .L160
 2178 000e 1B68     		ldr	r3, [r3]
 2179              	.LVL158:
2187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTCB );
 2180              		.loc 1 2187 10 discriminator 1 view .LVU581
 2181 0010 F8E7     		b	.L155
 2182              	.LVL159:
 2183              	.L159:
2188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 2184              		.loc 1 2188 2 is_stmt 1 view .LVU582
 2185              	.LBB116:
 2186              	.LBI116:
 233:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 2187              		.loc 2 233 30 view .LVU583
 2188              	.LBB117:
 235:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 2189              		.loc 2 235 1 view .LVU584
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 2190              		.loc 2 237 2 view .LVU585
 2191              		.syntax unified
 2192              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 2193 0012 4FF05003 			mov r3, #80												
 2194 0016 83F31188 		msr basepri, r3											
 2195 001a BFF36F8F 		isb														
 2196 001e BFF34F8F 		dsb														
 2197              	
 2198              	@ 0 "" 2
 2199              	.LVL160:
 2200              		.thumb
 2201              		.syntax unified
 2202              	.L157:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 2203              		.loc 2 237 2 is_stmt 0 view .LVU586
 2204              	.LBE117:
 2205              	.LBE116:
ARM GAS  /tmp/cclVzO8U.s 			page 137


2188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 2206              		.loc 1 2188 2 is_stmt 1 discriminator 1 view .LVU587
2188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 2207              		.loc 1 2188 2 discriminator 1 view .LVU588
 2208 0022 FEE7     		b	.L157
 2209              	.L161:
 2210              		.align	2
 2211              	.L160:
 2212 0024 00000000 		.word	.LANCHOR10
 2213              		.cfi_endproc
 2214              	.LFE608:
 2216              		.section	.text.xTaskIncrementTick,"ax",%progbits
 2217              		.align	1
 2218              		.global	xTaskIncrementTick
 2219              		.syntax unified
 2220              		.thumb
 2221              		.thumb_func
 2222              		.fpu softvfp
 2224              	xTaskIncrementTick:
 2225              	.LFB609:
2500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t * pxTCB;
 2226              		.loc 1 2500 1 view -0
 2227              		.cfi_startproc
 2228              		@ args = 0, pretend = 0, frame = 0
 2229              		@ frame_needed = 0, uses_anonymous_args = 0
 2230 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2231              	.LCFI21:
 2232              		.cfi_def_cfa_offset 24
 2233              		.cfi_offset 3, -24
 2234              		.cfi_offset 4, -20
 2235              		.cfi_offset 5, -16
 2236              		.cfi_offset 6, -12
 2237              		.cfi_offset 7, -8
 2238              		.cfi_offset 14, -4
2501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xItemValue;
 2239              		.loc 1 2501 1 view .LVU590
2502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xSwitchRequired = pdFALSE;
 2240              		.loc 1 2502 1 view .LVU591
2503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2241              		.loc 1 2503 1 view .LVU592
 2242              	.LVL161:
2508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 2243              		.loc 1 2508 40 view .LVU593
2509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2244              		.loc 1 2509 2 view .LVU594
2509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2245              		.loc 1 2509 27 is_stmt 0 view .LVU595
 2246 0002 3A4B     		ldr	r3, .L183
 2247 0004 1B68     		ldr	r3, [r3]
2509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2248              		.loc 1 2509 4 view .LVU596
 2249 0006 002B     		cmp	r3, #0
 2250 0008 64D1     		bne	.L163
 2251              	.LBB118:
2513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2252              		.loc 1 2513 3 is_stmt 1 view .LVU597
2513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cclVzO8U.s 			page 138


 2253              		.loc 1 2513 49 is_stmt 0 view .LVU598
 2254 000a 394B     		ldr	r3, .L183+4
 2255 000c 1D68     		ldr	r5, [r3]
2513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2256              		.loc 1 2513 20 view .LVU599
 2257 000e 0135     		adds	r5, r5, #1
 2258              	.LVL162:
2517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2259              		.loc 1 2517 3 is_stmt 1 view .LVU600
2517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2260              		.loc 1 2517 14 is_stmt 0 view .LVU601
 2261 0010 1D60     		str	r5, [r3]
2519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2262              		.loc 1 2519 3 is_stmt 1 view .LVU602
2519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2263              		.loc 1 2519 5 is_stmt 0 view .LVU603
 2264 0012 C5B9     		cbnz	r5, .L164
 2265              	.LBB119:
2521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2266              		.loc 1 2521 4 is_stmt 1 view .LVU604
2521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2267              		.loc 1 2521 4 view .LVU605
 2268 0014 374B     		ldr	r3, .L183+8
 2269 0016 1B68     		ldr	r3, [r3]
 2270 0018 1B68     		ldr	r3, [r3]
 2271 001a 43B1     		cbz	r3, .L165
2521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2272              		.loc 1 2521 4 view .LVU606
 2273              	.LBB120:
 2274              	.LBI120:
 233:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 2275              		.loc 2 233 30 view .LVU607
 2276              	.LBB121:
 235:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 2277              		.loc 2 235 1 view .LVU608
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 2278              		.loc 2 237 2 view .LVU609
 2279              		.syntax unified
 2280              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 2281 001c 4FF05003 			mov r3, #80												
 2282 0020 83F31188 		msr basepri, r3											
 2283 0024 BFF36F8F 		isb														
 2284 0028 BFF34F8F 		dsb														
 2285              	
 2286              	@ 0 "" 2
 2287              	.LVL163:
 2288              		.thumb
 2289              		.syntax unified
 2290              	.L166:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 2291              		.loc 2 237 2 is_stmt 0 view .LVU610
 2292              	.LBE121:
 2293              	.LBE120:
2521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2294              		.loc 1 2521 4 is_stmt 1 discriminator 1 view .LVU611
2521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2295              		.loc 1 2521 4 discriminator 1 view .LVU612
ARM GAS  /tmp/cclVzO8U.s 			page 139


 2296 002c FEE7     		b	.L166
 2297              	.L165:
2521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2298              		.loc 1 2521 4 discriminator 2 view .LVU613
2521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2299              		.loc 1 2521 4 discriminator 2 view .LVU614
 2300 002e 314A     		ldr	r2, .L183+8
 2301 0030 1168     		ldr	r1, [r2]
 2302              	.LVL164:
2521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2303              		.loc 1 2521 4 discriminator 2 view .LVU615
 2304 0032 314B     		ldr	r3, .L183+12
 2305 0034 1868     		ldr	r0, [r3]
 2306 0036 1060     		str	r0, [r2]
2521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2307              		.loc 1 2521 4 discriminator 2 view .LVU616
 2308 0038 1960     		str	r1, [r3]
2521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2309              		.loc 1 2521 4 discriminator 2 view .LVU617
 2310 003a 304A     		ldr	r2, .L183+16
 2311 003c 1368     		ldr	r3, [r2]
 2312 003e 0133     		adds	r3, r3, #1
 2313 0040 1360     		str	r3, [r2]
2521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2314              		.loc 1 2521 4 discriminator 2 view .LVU618
 2315 0042 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 2316              	.LVL165:
2521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2317              		.loc 1 2521 4 is_stmt 0 discriminator 2 view .LVU619
 2318              	.LBE119:
2521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2319              		.loc 1 2521 30 is_stmt 1 discriminator 2 view .LVU620
 2320              	.L164:
2525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2321              		.loc 1 2525 28 view .LVU621
2532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2322              		.loc 1 2532 3 view .LVU622
2532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2323              		.loc 1 2532 23 is_stmt 0 view .LVU623
 2324 0046 2E4B     		ldr	r3, .L183+20
 2325 0048 1B68     		ldr	r3, [r3]
2532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2326              		.loc 1 2532 5 view .LVU624
 2327 004a AB42     		cmp	r3, r5
 2328 004c 38D9     		bls	.L176
 2329              	.LBE118:
2503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2330              		.loc 1 2503 12 view .LVU625
 2331 004e 0024     		movs	r4, #0
 2332              	.LVL166:
 2333              	.L168:
 2334              	.LBB122:
2615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2335              		.loc 1 2615 4 is_stmt 1 view .LVU626
2615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2336              		.loc 1 2615 8 is_stmt 0 view .LVU627
 2337 0050 2C4B     		ldr	r3, .L183+24
ARM GAS  /tmp/cclVzO8U.s 			page 140


 2338 0052 1B68     		ldr	r3, [r3]
 2339 0054 DB6A     		ldr	r3, [r3, #44]
 2340 0056 03EB8303 		add	r3, r3, r3, lsl #2
 2341 005a 9A00     		lsls	r2, r3, #2
 2342 005c 2A4B     		ldr	r3, .L183+28
 2343 005e 9B58     		ldr	r3, [r3, r2]
2615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2344              		.loc 1 2615 6 view .LVU628
 2345 0060 012B     		cmp	r3, #1
 2346 0062 3CD9     		bls	.L174
2617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2347              		.loc 1 2617 21 view .LVU629
 2348 0064 0124     		movs	r4, #1
 2349              	.LVL167:
2617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2350              		.loc 1 2617 21 view .LVU630
 2351 0066 3AE0     		b	.L174
 2352              	.LVL168:
 2353              	.L177:
2598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
 2354              		.loc 1 2598 24 view .LVU631
 2355 0068 0124     		movs	r4, #1
 2356              	.LVL169:
 2357              	.L167:
2534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2358              		.loc 1 2534 4 is_stmt 1 view .LVU632
2536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2359              		.loc 1 2536 5 view .LVU633
2536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2360              		.loc 1 2536 9 is_stmt 0 view .LVU634
 2361 006a 224B     		ldr	r3, .L183+8
 2362 006c 1B68     		ldr	r3, [r3]
 2363 006e 1B68     		ldr	r3, [r3]
2536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2364              		.loc 1 2536 48 view .LVU635
 2365 0070 43B3     		cbz	r3, .L181
2552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 2366              		.loc 1 2552 6 is_stmt 1 view .LVU636
2552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 2367              		.loc 1 2552 26 is_stmt 0 view .LVU637
 2368 0072 204B     		ldr	r3, .L183+8
 2369 0074 1B68     		ldr	r3, [r3]
 2370 0076 DB68     		ldr	r3, [r3, #12]
2552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 2371              		.loc 1 2552 12 view .LVU638
 2372 0078 DE68     		ldr	r6, [r3, #12]
 2373              	.LVL170:
2553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2374              		.loc 1 2553 6 is_stmt 1 view .LVU639
2553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2375              		.loc 1 2553 17 is_stmt 0 view .LVU640
 2376 007a 7368     		ldr	r3, [r6, #4]
 2377              	.LVL171:
2555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2378              		.loc 1 2555 6 is_stmt 1 view .LVU641
2555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2379              		.loc 1 2555 8 is_stmt 0 view .LVU642
ARM GAS  /tmp/cclVzO8U.s 			page 141


 2380 007c 9D42     		cmp	r5, r3
 2381 007e 26D3     		bcc	.L182
2567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2382              		.loc 1 2567 31 is_stmt 1 view .LVU643
2571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2383              		.loc 1 2571 6 view .LVU644
2571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2384              		.loc 1 2571 15 is_stmt 0 view .LVU645
 2385 0080 371D     		adds	r7, r6, #4
 2386 0082 3846     		mov	r0, r7
 2387 0084 FFF7FEFF 		bl	uxListRemove
 2388              	.LVL172:
2575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2389              		.loc 1 2575 6 is_stmt 1 view .LVU646
2575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2390              		.loc 1 2575 10 is_stmt 0 view .LVU647
 2391 0088 B36A     		ldr	r3, [r6, #40]
2575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2392              		.loc 1 2575 8 view .LVU648
 2393 008a 1BB1     		cbz	r3, .L171
2577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2394              		.loc 1 2577 7 is_stmt 1 view .LVU649
2577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2395              		.loc 1 2577 16 is_stmt 0 view .LVU650
 2396 008c 06F11800 		add	r0, r6, #24
 2397 0090 FFF7FEFF 		bl	uxListRemove
 2398              	.LVL173:
 2399              	.L171:
2581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2400              		.loc 1 2581 31 is_stmt 1 view .LVU651
2586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2401              		.loc 1 2586 6 view .LVU652
2586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2402              		.loc 1 2586 6 view .LVU653
 2403 0094 F36A     		ldr	r3, [r6, #44]
 2404 0096 0122     		movs	r2, #1
 2405 0098 9A40     		lsls	r2, r2, r3
 2406 009a 1C49     		ldr	r1, .L183+32
 2407 009c 0868     		ldr	r0, [r1]
 2408 009e 0243     		orrs	r2, r2, r0
 2409 00a0 0A60     		str	r2, [r1]
2586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2410              		.loc 1 2586 6 view .LVU654
 2411 00a2 03EB8303 		add	r3, r3, r3, lsl #2
 2412 00a6 9A00     		lsls	r2, r3, #2
 2413 00a8 3946     		mov	r1, r7
 2414 00aa 1748     		ldr	r0, .L183+28
 2415 00ac 1044     		add	r0, r0, r2
 2416 00ae FFF7FEFF 		bl	vListInsertEnd
 2417              	.LVL174:
2586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2418              		.loc 1 2586 36 view .LVU655
2596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 2419              		.loc 1 2596 7 view .LVU656
2596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 2420              		.loc 1 2596 16 is_stmt 0 view .LVU657
 2421 00b2 F26A     		ldr	r2, [r6, #44]
ARM GAS  /tmp/cclVzO8U.s 			page 142


2596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 2422              		.loc 1 2596 44 view .LVU658
 2423 00b4 134B     		ldr	r3, .L183+24
 2424 00b6 1B68     		ldr	r3, [r3]
 2425 00b8 DB6A     		ldr	r3, [r3, #44]
2596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 2426              		.loc 1 2596 9 view .LVU659
 2427 00ba 9A42     		cmp	r2, r3
 2428 00bc D4D2     		bcs	.L177
 2429 00be D4E7     		b	.L167
 2430              	.LVL175:
 2431              	.L176:
2596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 2432              		.loc 1 2596 9 view .LVU660
 2433              	.LBE122:
2503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2434              		.loc 1 2503 12 view .LVU661
 2435 00c0 0024     		movs	r4, #0
 2436 00c2 D2E7     		b	.L167
 2437              	.LVL176:
 2438              	.L181:
 2439              	.LBB123:
2543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 2440              		.loc 1 2543 6 is_stmt 1 view .LVU662
2543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 2441              		.loc 1 2543 27 is_stmt 0 view .LVU663
 2442 00c4 0E4B     		ldr	r3, .L183+20
 2443 00c6 4FF0FF32 		mov	r2, #-1
 2444 00ca 1A60     		str	r2, [r3]
2544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2445              		.loc 1 2544 6 is_stmt 1 view .LVU664
 2446 00cc C0E7     		b	.L168
 2447              	.LVL177:
 2448              	.L182:
2562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						break;
 2449              		.loc 1 2562 7 view .LVU665
2562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						break;
 2450              		.loc 1 2562 28 is_stmt 0 view .LVU666
 2451 00ce 0C4A     		ldr	r2, .L183+20
 2452 00d0 1360     		str	r3, [r2]
2563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2453              		.loc 1 2563 7 is_stmt 1 view .LVU667
 2454 00d2 BDE7     		b	.L168
 2455              	.LVL178:
 2456              	.L163:
2563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2457              		.loc 1 2563 7 is_stmt 0 view .LVU668
 2458              	.LBE123:
2643:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2459              		.loc 1 2643 3 is_stmt 1 view .LVU669
 2460 00d4 0E4A     		ldr	r2, .L183+36
 2461 00d6 1368     		ldr	r3, [r2]
 2462 00d8 0133     		adds	r3, r3, #1
 2463 00da 1360     		str	r3, [r2]
2503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2464              		.loc 1 2503 12 is_stmt 0 view .LVU670
 2465 00dc 0024     		movs	r4, #0
ARM GAS  /tmp/cclVzO8U.s 			page 143


 2466              	.LVL179:
 2467              	.L174:
2656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2468              		.loc 1 2656 3 is_stmt 1 view .LVU671
2656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2469              		.loc 1 2656 21 is_stmt 0 view .LVU672
 2470 00de 0D4B     		ldr	r3, .L183+40
 2471 00e0 1B68     		ldr	r3, [r3]
2656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2472              		.loc 1 2656 5 view .LVU673
 2473 00e2 03B1     		cbz	r3, .L162
2658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2474              		.loc 1 2658 20 view .LVU674
 2475 00e4 0124     		movs	r4, #1
 2476              	.LVL180:
2662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2477              		.loc 1 2662 28 is_stmt 1 view .LVU675
2667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2478              		.loc 1 2667 2 view .LVU676
 2479              	.L162:
2668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2480              		.loc 1 2668 1 is_stmt 0 view .LVU677
 2481 00e6 2046     		mov	r0, r4
 2482 00e8 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2483              	.L184:
 2484 00ea 00BF     		.align	2
 2485              	.L183:
 2486 00ec 00000000 		.word	.LANCHOR16
 2487 00f0 00000000 		.word	.LANCHOR14
 2488 00f4 00000000 		.word	.LANCHOR2
 2489 00f8 00000000 		.word	.LANCHOR8
 2490 00fc 00000000 		.word	.LANCHOR18
 2491 0100 00000000 		.word	.LANCHOR3
 2492 0104 00000000 		.word	.LANCHOR10
 2493 0108 00000000 		.word	.LANCHOR4
 2494 010c 00000000 		.word	.LANCHOR13
 2495 0110 00000000 		.word	.LANCHOR19
 2496 0114 00000000 		.word	.LANCHOR20
 2497              		.cfi_endproc
 2498              	.LFE609:
 2500              		.section	.text.xTaskResumeAll,"ax",%progbits
 2501              		.align	1
 2502              		.global	xTaskResumeAll
 2503              		.syntax unified
 2504              		.thumb
 2505              		.thumb_func
 2506              		.fpu softvfp
 2508              	xTaskResumeAll:
 2509              	.LFB604:
2018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB = NULL;
 2510              		.loc 1 2018 1 is_stmt 1 view -0
 2511              		.cfi_startproc
 2512              		@ args = 0, pretend = 0, frame = 0
 2513              		@ frame_needed = 0, uses_anonymous_args = 0
 2514 0000 38B5     		push	{r3, r4, r5, lr}
 2515              	.LCFI22:
 2516              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/cclVzO8U.s 			page 144


 2517              		.cfi_offset 3, -16
 2518              		.cfi_offset 4, -12
 2519              		.cfi_offset 5, -8
 2520              		.cfi_offset 14, -4
2019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xAlreadyYielded = pdFALSE;
 2521              		.loc 1 2019 1 view .LVU679
 2522              	.LVL181:
2020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2523              		.loc 1 2020 1 view .LVU680
2024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2524              		.loc 1 2024 2 view .LVU681
 2525 0002 354B     		ldr	r3, .L202
 2526 0004 1B68     		ldr	r3, [r3]
 2527 0006 43B9     		cbnz	r3, .L186
2024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2528              		.loc 1 2024 2 view .LVU682
 2529              	.LBB124:
 2530              	.LBI124:
 233:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 2531              		.loc 2 233 30 view .LVU683
 2532              	.LBB125:
 235:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 2533              		.loc 2 235 1 view .LVU684
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 2534              		.loc 2 237 2 view .LVU685
 2535              		.syntax unified
 2536              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 2537 0008 4FF05003 			mov r3, #80												
 2538 000c 83F31188 		msr basepri, r3											
 2539 0010 BFF36F8F 		isb														
 2540 0014 BFF34F8F 		dsb														
 2541              	
 2542              	@ 0 "" 2
 2543              	.LVL182:
 2544              		.thumb
 2545              		.syntax unified
 2546              	.L187:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 2547              		.loc 2 237 2 is_stmt 0 view .LVU686
 2548              	.LBE125:
 2549              	.LBE124:
2024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2550              		.loc 1 2024 2 is_stmt 1 discriminator 1 view .LVU687
2024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2551              		.loc 1 2024 2 discriminator 1 view .LVU688
 2552 0018 FEE7     		b	.L187
 2553              	.L186:
2024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2554              		.loc 1 2024 38 discriminator 2 view .LVU689
2031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2555              		.loc 1 2031 2 discriminator 2 view .LVU690
 2556 001a FFF7FEFF 		bl	vPortEnterCritical
 2557              	.LVL183:
2033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2558              		.loc 1 2033 3 discriminator 2 view .LVU691
 2559 001e 2E4B     		ldr	r3, .L202
 2560 0020 1A68     		ldr	r2, [r3]
ARM GAS  /tmp/cclVzO8U.s 			page 145


 2561 0022 013A     		subs	r2, r2, #1
 2562 0024 1A60     		str	r2, [r3]
2035:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2563              		.loc 1 2035 3 discriminator 2 view .LVU692
2035:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2564              		.loc 1 2035 28 is_stmt 0 discriminator 2 view .LVU693
 2565 0026 1B68     		ldr	r3, [r3]
2035:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2566              		.loc 1 2035 5 discriminator 2 view .LVU694
 2567 0028 002B     		cmp	r3, #0
 2568 002a 4DD1     		bne	.L196
2037:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2569              		.loc 1 2037 4 is_stmt 1 view .LVU695
2037:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2570              		.loc 1 2037 31 is_stmt 0 view .LVU696
 2571 002c 2B4B     		ldr	r3, .L202+4
 2572 002e 1B68     		ldr	r3, [r3]
2037:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2573              		.loc 1 2037 6 view .LVU697
 2574 0030 0BB9     		cbnz	r3, .L197
2020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2575              		.loc 1 2020 12 view .LVU698
 2576 0032 0024     		movs	r4, #0
 2577 0034 49E0     		b	.L188
 2578              	.L197:
2019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xAlreadyYielded = pdFALSE;
 2579              		.loc 1 2019 8 view .LVU699
 2580 0036 0024     		movs	r4, #0
 2581              	.LVL184:
 2582              	.L189:
2056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2583              		.loc 1 2056 31 is_stmt 1 view .LVU700
2041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2584              		.loc 1 2041 12 is_stmt 0 view .LVU701
 2585 0038 294B     		ldr	r3, .L202+8
 2586 003a 1B68     		ldr	r3, [r3]
2041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2587              		.loc 1 2041 10 view .LVU702
 2588 003c 1BB3     		cbz	r3, .L200
2043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 2589              		.loc 1 2043 6 is_stmt 1 view .LVU703
2043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 2590              		.loc 1 2043 26 is_stmt 0 view .LVU704
 2591 003e 284B     		ldr	r3, .L202+8
 2592 0040 DB68     		ldr	r3, [r3, #12]
2043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 2593              		.loc 1 2043 12 view .LVU705
 2594 0042 DC68     		ldr	r4, [r3, #12]
 2595              	.LVL185:
2044:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 2596              		.loc 1 2044 6 is_stmt 1 view .LVU706
2044:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 2597              		.loc 1 2044 15 is_stmt 0 view .LVU707
 2598 0044 04F11800 		add	r0, r4, #24
 2599 0048 FFF7FEFF 		bl	uxListRemove
 2600              	.LVL186:
2045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
ARM GAS  /tmp/cclVzO8U.s 			page 146


 2601              		.loc 1 2045 6 is_stmt 1 view .LVU708
2045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 2602              		.loc 1 2045 15 is_stmt 0 view .LVU709
 2603 004c 251D     		adds	r5, r4, #4
 2604 004e 2846     		mov	r0, r5
 2605 0050 FFF7FEFF 		bl	uxListRemove
 2606              	.LVL187:
2046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2607              		.loc 1 2046 6 is_stmt 1 view .LVU710
2046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2608              		.loc 1 2046 6 view .LVU711
 2609 0054 E36A     		ldr	r3, [r4, #44]
 2610 0056 0122     		movs	r2, #1
 2611 0058 9A40     		lsls	r2, r2, r3
 2612 005a 2249     		ldr	r1, .L202+12
 2613 005c 0868     		ldr	r0, [r1]
 2614 005e 0243     		orrs	r2, r2, r0
 2615 0060 0A60     		str	r2, [r1]
2046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2616              		.loc 1 2046 6 view .LVU712
 2617 0062 03EB8303 		add	r3, r3, r3, lsl #2
 2618 0066 9A00     		lsls	r2, r3, #2
 2619 0068 2946     		mov	r1, r5
 2620 006a 1F48     		ldr	r0, .L202+16
 2621 006c 1044     		add	r0, r0, r2
 2622 006e FFF7FEFF 		bl	vListInsertEnd
 2623              	.LVL188:
2046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2624              		.loc 1 2046 36 view .LVU713
2050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2625              		.loc 1 2050 6 view .LVU714
2050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2626              		.loc 1 2050 15 is_stmt 0 view .LVU715
 2627 0072 E26A     		ldr	r2, [r4, #44]
2050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2628              		.loc 1 2050 43 view .LVU716
 2629 0074 1D4B     		ldr	r3, .L202+20
 2630 0076 1B68     		ldr	r3, [r3]
 2631 0078 DB6A     		ldr	r3, [r3, #44]
2050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2632              		.loc 1 2050 8 view .LVU717
 2633 007a 9A42     		cmp	r2, r3
 2634 007c DCD3     		bcc	.L189
2052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2635              		.loc 1 2052 7 is_stmt 1 view .LVU718
2052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2636              		.loc 1 2052 21 is_stmt 0 view .LVU719
 2637 007e 1C4B     		ldr	r3, .L202+24
 2638 0080 0122     		movs	r2, #1
 2639 0082 1A60     		str	r2, [r3]
 2640 0084 D8E7     		b	.L189
 2641              	.L200:
2060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2642              		.loc 1 2060 5 is_stmt 1 view .LVU720
2060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2643              		.loc 1 2060 7 is_stmt 0 view .LVU721
 2644 0086 0CB1     		cbz	r4, .L192
ARM GAS  /tmp/cclVzO8U.s 			page 147


2068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2645              		.loc 1 2068 6 is_stmt 1 view .LVU722
 2646 0088 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 2647              	.LVL189:
 2648              	.L192:
 2649              	.LBB126:
2076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2650              		.loc 1 2076 6 view .LVU723
2076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2651              		.loc 1 2076 18 is_stmt 0 view .LVU724
 2652 008c 194B     		ldr	r3, .L202+28
 2653 008e 1C68     		ldr	r4, [r3]
 2654              	.LVL190:
2078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2655              		.loc 1 2078 6 is_stmt 1 view .LVU725
2078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2656              		.loc 1 2078 8 is_stmt 0 view .LVU726
 2657 0090 74B9     		cbnz	r4, .L195
 2658              	.L193:
2097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2659              		.loc 1 2097 31 is_stmt 1 view .LVU727
 2660              	.LBE126:
2101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2661              		.loc 1 2101 5 view .LVU728
2101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2662              		.loc 1 2101 23 is_stmt 0 view .LVU729
 2663 0092 174B     		ldr	r3, .L202+24
 2664 0094 1B68     		ldr	r3, [r3]
2101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2665              		.loc 1 2101 7 view .LVU730
 2666 0096 E3B1     		cbz	r3, .L198
2105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2667              		.loc 1 2105 7 is_stmt 1 view .LVU731
 2668              	.LVL191:
2108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2669              		.loc 1 2108 6 view .LVU732
 2670 0098 174B     		ldr	r3, .L202+32
 2671 009a 4FF08052 		mov	r2, #268435456
 2672 009e 1A60     		str	r2, [r3]
2108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2673              		.loc 1 2108 6 view .LVU733
 2674              		.syntax unified
 2675              	@ 2108 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 2676 00a0 BFF34F8F 		dsb
 2677              	@ 0 "" 2
2108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2678              		.loc 1 2108 6 view .LVU734
 2679              	@ 2108 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 2680 00a4 BFF36F8F 		isb
 2681              	@ 0 "" 2
2108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2682              		.loc 1 2108 37 view .LVU735
2105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2683              		.loc 1 2105 23 is_stmt 0 view .LVU736
 2684              		.thumb
 2685              		.syntax unified
 2686 00a8 0124     		movs	r4, #1
ARM GAS  /tmp/cclVzO8U.s 			page 148


 2687              	.LVL192:
2105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2688              		.loc 1 2105 23 view .LVU737
 2689 00aa 0EE0     		b	.L188
 2690              	.LVL193:
 2691              	.L194:
 2692              	.LBB127:
2088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
 2693              		.loc 1 2088 33 is_stmt 1 view .LVU738
2090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						} while( uxPendedCounts > ( UBaseType_t ) 0U );
 2694              		.loc 1 2090 8 view .LVU739
2091:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2695              		.loc 1 2091 7 is_stmt 0 view .LVU740
 2696 00ac 013C     		subs	r4, r4, #1
 2697              	.LVL194:
2091:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2698              		.loc 1 2091 7 view .LVU741
 2699 00ae 07D0     		beq	.L201
 2700              	.L195:
2080:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 2701              		.loc 1 2080 7 is_stmt 1 view .LVU742
2082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
 2702              		.loc 1 2082 8 view .LVU743
2082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
 2703              		.loc 1 2082 12 is_stmt 0 view .LVU744
 2704 00b0 FFF7FEFF 		bl	xTaskIncrementTick
 2705              	.LVL195:
2082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
 2706              		.loc 1 2082 10 view .LVU745
 2707 00b4 0028     		cmp	r0, #0
 2708 00b6 F9D0     		beq	.L194
2084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
 2709              		.loc 1 2084 9 is_stmt 1 view .LVU746
2084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
 2710              		.loc 1 2084 23 is_stmt 0 view .LVU747
 2711 00b8 0D4B     		ldr	r3, .L202+24
 2712 00ba 0122     		movs	r2, #1
 2713 00bc 1A60     		str	r2, [r3]
 2714 00be F5E7     		b	.L194
 2715              	.L201:
2093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2716              		.loc 1 2093 7 is_stmt 1 view .LVU748
2093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2717              		.loc 1 2093 21 is_stmt 0 view .LVU749
 2718 00c0 0C4B     		ldr	r3, .L202+28
 2719 00c2 0022     		movs	r2, #0
 2720 00c4 1A60     		str	r2, [r3]
 2721 00c6 E4E7     		b	.L193
 2722              	.LVL196:
 2723              	.L196:
2093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2724              		.loc 1 2093 21 view .LVU750
 2725              	.LBE127:
2020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2726              		.loc 1 2020 12 view .LVU751
 2727 00c8 0024     		movs	r4, #0
 2728              	.LVL197:
ARM GAS  /tmp/cclVzO8U.s 			page 149


 2729              	.L188:
2118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2730              		.loc 1 2118 28 is_stmt 1 view .LVU752
2121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2731              		.loc 1 2121 2 view .LVU753
 2732 00ca FFF7FEFF 		bl	vPortExitCritical
 2733              	.LVL198:
2123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2734              		.loc 1 2123 2 view .LVU754
2124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2735              		.loc 1 2124 1 is_stmt 0 view .LVU755
 2736 00ce 2046     		mov	r0, r4
 2737 00d0 38BD     		pop	{r3, r4, r5, pc}
 2738              	.LVL199:
 2739              	.L198:
2020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2740              		.loc 1 2020 12 view .LVU756
 2741 00d2 0024     		movs	r4, #0
 2742              	.LVL200:
2020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2743              		.loc 1 2020 12 view .LVU757
 2744 00d4 F9E7     		b	.L188
 2745              	.L203:
 2746 00d6 00BF     		.align	2
 2747              	.L202:
 2748 00d8 00000000 		.word	.LANCHOR16
 2749 00dc 00000000 		.word	.LANCHOR9
 2750 00e0 00000000 		.word	.LANCHOR1
 2751 00e4 00000000 		.word	.LANCHOR13
 2752 00e8 00000000 		.word	.LANCHOR4
 2753 00ec 00000000 		.word	.LANCHOR10
 2754 00f0 00000000 		.word	.LANCHOR20
 2755 00f4 00000000 		.word	.LANCHOR19
 2756 00f8 04ED00E0 		.word	-536810236
 2757              		.cfi_endproc
 2758              	.LFE604:
 2760              		.section	.text.vTaskDelay,"ax",%progbits
 2761              		.align	1
 2762              		.global	vTaskDelay
 2763              		.syntax unified
 2764              		.thumb
 2765              		.thumb_func
 2766              		.fpu softvfp
 2768              	vTaskDelay:
 2769              	.LVL201:
 2770              	.LFB593:
1225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xAlreadyYielded = pdFALSE;
 2771              		.loc 1 1225 2 is_stmt 1 view -0
 2772              		.cfi_startproc
 2773              		@ args = 0, pretend = 0, frame = 0
 2774              		@ frame_needed = 0, uses_anonymous_args = 0
1225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xAlreadyYielded = pdFALSE;
 2775              		.loc 1 1225 2 is_stmt 0 view .LVU759
 2776 0000 10B5     		push	{r4, lr}
 2777              	.LCFI23:
 2778              		.cfi_def_cfa_offset 8
 2779              		.cfi_offset 4, -8
ARM GAS  /tmp/cclVzO8U.s 			page 150


 2780              		.cfi_offset 14, -4
1226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2781              		.loc 1 1226 2 is_stmt 1 view .LVU760
 2782              	.LVL202:
1229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2783              		.loc 1 1229 3 view .LVU761
1229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2784              		.loc 1 1229 5 is_stmt 0 view .LVU762
 2785 0002 A8B1     		cbz	r0, .L205
 2786 0004 0446     		mov	r4, r0
1231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 2787              		.loc 1 1231 4 is_stmt 1 view .LVU763
 2788 0006 0F4B     		ldr	r3, .L210
 2789 0008 1B68     		ldr	r3, [r3]
 2790 000a 43B1     		cbz	r3, .L206
1231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 2791              		.loc 1 1231 4 view .LVU764
 2792              	.LBB128:
 2793              	.LBI128:
 233:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 2794              		.loc 2 233 30 view .LVU765
 2795              	.LBB129:
 235:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 2796              		.loc 2 235 1 view .LVU766
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 2797              		.loc 2 237 2 view .LVU767
 2798              		.syntax unified
 2799              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 2800 000c 4FF05003 			mov r3, #80												
 2801 0010 83F31188 		msr basepri, r3											
 2802 0014 BFF36F8F 		isb														
 2803 0018 BFF34F8F 		dsb														
 2804              	
 2805              	@ 0 "" 2
 2806              	.LVL203:
 2807              		.thumb
 2808              		.syntax unified
 2809              	.L207:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 2810              		.loc 2 237 2 is_stmt 0 view .LVU768
 2811              	.LBE129:
 2812              	.LBE128:
1231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 2813              		.loc 1 1231 4 is_stmt 1 discriminator 1 view .LVU769
1231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 2814              		.loc 1 1231 4 discriminator 1 view .LVU770
 2815 001c FEE7     		b	.L207
 2816              	.L206:
1231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 2817              		.loc 1 1231 45 discriminator 2 view .LVU771
1232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2818              		.loc 1 1232 4 discriminator 2 view .LVU772
 2819 001e FFF7FEFF 		bl	vTaskSuspendAll
 2820              	.LVL204:
1234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2821              		.loc 1 1234 22 discriminator 2 view .LVU773
1243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
ARM GAS  /tmp/cclVzO8U.s 			page 151


 2822              		.loc 1 1243 5 discriminator 2 view .LVU774
 2823 0022 0021     		movs	r1, #0
 2824 0024 2046     		mov	r0, r4
 2825 0026 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 2826              	.LVL205:
1245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2827              		.loc 1 1245 4 discriminator 2 view .LVU775
1245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2828              		.loc 1 1245 22 is_stmt 0 discriminator 2 view .LVU776
 2829 002a FFF7FEFF 		bl	xTaskResumeAll
 2830              	.LVL206:
1249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2831              		.loc 1 1249 28 is_stmt 1 discriminator 2 view .LVU777
1254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2832              		.loc 1 1254 3 discriminator 2 view .LVU778
1254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2833              		.loc 1 1254 5 is_stmt 0 discriminator 2 view .LVU779
 2834 002e 38B9     		cbnz	r0, .L204
 2835              	.LVL207:
 2836              	.L205:
1256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2837              		.loc 1 1256 4 is_stmt 1 view .LVU780
 2838 0030 054B     		ldr	r3, .L210+4
 2839 0032 4FF08052 		mov	r2, #268435456
 2840 0036 1A60     		str	r2, [r3]
1256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2841              		.loc 1 1256 4 view .LVU781
 2842              		.syntax unified
 2843              	@ 1256 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 2844 0038 BFF34F8F 		dsb
 2845              	@ 0 "" 2
1256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2846              		.loc 1 1256 4 view .LVU782
 2847              	@ 1256 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 2848 003c BFF36F8F 		isb
 2849              	@ 0 "" 2
1256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2850              		.loc 1 1256 26 view .LVU783
1260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2851              		.loc 1 1260 28 view .LVU784
 2852              		.thumb
 2853              		.syntax unified
 2854              	.L204:
1262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2855              		.loc 1 1262 2 is_stmt 0 view .LVU785
 2856 0040 10BD     		pop	{r4, pc}
 2857              	.L211:
 2858 0042 00BF     		.align	2
 2859              	.L210:
 2860 0044 00000000 		.word	.LANCHOR16
 2861 0048 04ED00E0 		.word	-536810236
 2862              		.cfi_endproc
 2863              	.LFE593:
 2865              		.section	.text.prvCheckTasksWaitingTermination,"ax",%progbits
 2866              		.align	1
 2867              		.syntax unified
 2868              		.thumb
ARM GAS  /tmp/cclVzO8U.s 			page 152


 2869              		.thumb_func
 2870              		.fpu softvfp
 2872              	prvCheckTasksWaitingTermination:
 2873              	.LFB620:
3366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2874              		.loc 1 3366 1 is_stmt 1 view -0
 2875              		.cfi_startproc
 2876              		@ args = 0, pretend = 0, frame = 0
 2877              		@ frame_needed = 0, uses_anonymous_args = 0
 2878              	.LBB130:
3372:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2879              		.loc 1 3372 3 view .LVU787
3376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2880              		.loc 1 3376 3 view .LVU788
3401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2881              		.loc 1 3401 29 view .LVU789
3376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2882              		.loc 1 3376 39 is_stmt 0 view .LVU790
 2883 0000 134B     		ldr	r3, .L221
 2884 0002 1B68     		ldr	r3, [r3]
3376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2885              		.loc 1 3376 8 view .LVU791
 2886 0004 1BB3     		cbz	r3, .L219
 2887              	.LBE130:
3366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2888              		.loc 1 3366 1 view .LVU792
 2889 0006 10B5     		push	{r4, lr}
 2890              	.LCFI24:
 2891              		.cfi_def_cfa_offset 8
 2892              		.cfi_offset 4, -8
 2893              		.cfi_offset 14, -4
 2894 0008 02E0     		b	.L215
 2895              	.LVL208:
 2896              	.L214:
 2897              	.LBB132:
3401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2898              		.loc 1 3401 29 is_stmt 1 view .LVU793
3376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2899              		.loc 1 3376 39 is_stmt 0 view .LVU794
 2900 000a 114B     		ldr	r3, .L221
 2901 000c 1B68     		ldr	r3, [r3]
3376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2902              		.loc 1 3376 8 view .LVU795
 2903 000e EBB1     		cbz	r3, .L220
 2904              	.L215:
3378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2905              		.loc 1 3378 4 is_stmt 1 view .LVU796
 2906 0010 FFF7FEFF 		bl	vTaskSuspendAll
 2907              	.LVL209:
3380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2908              		.loc 1 3380 5 view .LVU797
3380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2909              		.loc 1 3380 20 is_stmt 0 view .LVU798
 2910 0014 0F4B     		ldr	r3, .L221+4
 2911 0016 1C68     		ldr	r4, [r3]
 2912              	.LVL210:
3382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cclVzO8U.s 			page 153


 2913              		.loc 1 3382 4 is_stmt 1 view .LVU799
3382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2914              		.loc 1 3382 13 is_stmt 0 view .LVU800
 2915 0018 FFF7FEFF 		bl	xTaskResumeAll
 2916              	.LVL211:
3384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2917              		.loc 1 3384 4 is_stmt 1 view .LVU801
3384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2918              		.loc 1 3384 6 is_stmt 0 view .LVU802
 2919 001c 002C     		cmp	r4, #0
 2920 001e F4D0     		beq	.L214
 2921              	.LBB131:
3386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2922              		.loc 1 3386 5 is_stmt 1 view .LVU803
3388:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2923              		.loc 1 3388 5 view .LVU804
 2924 0020 FFF7FEFF 		bl	vPortEnterCritical
 2925              	.LVL212:
3390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 2926              		.loc 1 3390 6 view .LVU805
3390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 2927              		.loc 1 3390 26 is_stmt 0 view .LVU806
 2928 0024 0B4B     		ldr	r3, .L221+4
 2929 0026 DB68     		ldr	r3, [r3, #12]
3390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 2930              		.loc 1 3390 12 view .LVU807
 2931 0028 DC68     		ldr	r4, [r3, #12]
 2932              	.LVL213:
3391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					--uxCurrentNumberOfTasks;
 2933              		.loc 1 3391 6 is_stmt 1 view .LVU808
3391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					--uxCurrentNumberOfTasks;
 2934              		.loc 1 3391 15 is_stmt 0 view .LVU809
 2935 002a 201D     		adds	r0, r4, #4
 2936 002c FFF7FEFF 		bl	uxListRemove
 2937              	.LVL214:
3392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					--uxDeletedTasksWaitingCleanUp;
 2938              		.loc 1 3392 6 is_stmt 1 view .LVU810
 2939 0030 094A     		ldr	r2, .L221+8
 2940 0032 1368     		ldr	r3, [r2]
 2941 0034 013B     		subs	r3, r3, #1
 2942 0036 1360     		str	r3, [r2]
3393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2943              		.loc 1 3393 6 view .LVU811
 2944 0038 054A     		ldr	r2, .L221
 2945 003a 1368     		ldr	r3, [r2]
 2946 003c 013B     		subs	r3, r3, #1
 2947 003e 1360     		str	r3, [r2]
3395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2948              		.loc 1 3395 5 view .LVU812
 2949 0040 FFF7FEFF 		bl	vPortExitCritical
 2950              	.LVL215:
3397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2951              		.loc 1 3397 5 view .LVU813
 2952 0044 2046     		mov	r0, r4
 2953 0046 FFF7FEFF 		bl	prvDeleteTCB
 2954              	.LVL216:
 2955              	.LBE131:
ARM GAS  /tmp/cclVzO8U.s 			page 154


 2956 004a DEE7     		b	.L214
 2957              	.LVL217:
 2958              	.L220:
3397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2959              		.loc 1 3397 5 is_stmt 0 view .LVU814
 2960              	.LBE132:
3406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2961              		.loc 1 3406 1 view .LVU815
 2962 004c 10BD     		pop	{r4, pc}
 2963              	.L219:
 2964              	.LCFI25:
 2965              		.cfi_def_cfa_offset 0
 2966              		.cfi_restore 4
 2967              		.cfi_restore 14
3406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2968              		.loc 1 3406 1 view .LVU816
 2969 004e 7047     		bx	lr
 2970              	.L222:
 2971              		.align	2
 2972              	.L221:
 2973 0050 00000000 		.word	.LANCHOR15
 2974 0054 00000000 		.word	.LANCHOR7
 2975 0058 00000000 		.word	.LANCHOR9
 2976              		.cfi_endproc
 2977              	.LFE620:
 2979              		.section	.text.prvIdleTask,"ax",%progbits
 2980              		.align	1
 2981              		.syntax unified
 2982              		.thumb
 2983              		.thumb_func
 2984              		.fpu softvfp
 2986              	prvIdleTask:
 2987              	.LFB618:
3132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop warnings. */
 2988              		.loc 1 3132 1 is_stmt 1 view -0
 2989              		.cfi_startproc
 2990              		@ Volatile: function does not return.
 2991              		@ args = 0, pretend = 0, frame = 0
 2992              		@ frame_needed = 0, uses_anonymous_args = 0
 2993              	.LVL218:
3132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop warnings. */
 2994              		.loc 1 3132 1 is_stmt 0 view .LVU818
 2995 0000 08B5     		push	{r3, lr}
 2996              	.LCFI26:
 2997              		.cfi_def_cfa_offset 8
 2998              		.cfi_offset 3, -8
 2999              		.cfi_offset 14, -4
 3000              	.LVL219:
 3001              	.L224:
3134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3002              		.loc 1 3134 2 is_stmt 1 view .LVU819
3139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3003              		.loc 1 3139 2 view .LVU820
3143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3004              		.loc 1 3143 3 view .LVU821
 3005 0002 FFF7FEFF 		bl	prvCheckTasksWaitingTermination
 3006              	.LVL220:
ARM GAS  /tmp/cclVzO8U.s 			page 155


3166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3007              		.loc 1 3166 4 view .LVU822
3166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3008              		.loc 1 3166 8 is_stmt 0 view .LVU823
 3009 0006 064B     		ldr	r3, .L227
 3010 0008 1B68     		ldr	r3, [r3]
3166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3011              		.loc 1 3166 6 view .LVU824
 3012 000a 012B     		cmp	r3, #1
 3013 000c F9D9     		bls	.L224
3168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3014              		.loc 1 3168 5 is_stmt 1 view .LVU825
 3015 000e 054B     		ldr	r3, .L227+4
 3016 0010 4FF08052 		mov	r2, #268435456
 3017 0014 1A60     		str	r2, [r3]
3168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3018              		.loc 1 3168 5 view .LVU826
 3019              		.syntax unified
 3020              	@ 3168 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3021 0016 BFF34F8F 		dsb
 3022              	@ 0 "" 2
3168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3023              		.loc 1 3168 5 view .LVU827
 3024              	@ 3168 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3025 001a BFF36F8F 		isb
 3026              	@ 0 "" 2
3168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3027              		.loc 1 3168 16 view .LVU828
 3028              		.thumb
 3029              		.syntax unified
 3030 001e F0E7     		b	.L224
 3031              	.L228:
 3032              		.align	2
 3033              	.L227:
 3034 0020 00000000 		.word	.LANCHOR4
 3035 0024 04ED00E0 		.word	-536810236
 3036              		.cfi_endproc
 3037              	.LFE618:
 3039              		.section	.text.vTaskSwitchContext,"ax",%progbits
 3040              		.align	1
 3041              		.global	vTaskSwitchContext
 3042              		.syntax unified
 3043              		.thumb
 3044              		.thumb_func
 3045              		.fpu softvfp
 3047              	vTaskSwitchContext:
 3048              	.LFB610:
2762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 3049              		.loc 1 2762 1 view -0
 3050              		.cfi_startproc
 3051              		@ args = 0, pretend = 0, frame = 0
 3052              		@ frame_needed = 0, uses_anonymous_args = 0
 3053              		@ link register save eliminated.
2763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3054              		.loc 1 2763 2 view .LVU830
2763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3055              		.loc 1 2763 27 is_stmt 0 view .LVU831
ARM GAS  /tmp/cclVzO8U.s 			page 156


 3056 0000 204B     		ldr	r3, .L239
 3057 0002 1B68     		ldr	r3, [r3]
2763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3058              		.loc 1 2763 4 view .LVU832
 3059 0004 1BB1     		cbz	r3, .L230
2767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3060              		.loc 1 2767 3 is_stmt 1 view .LVU833
2767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3061              		.loc 1 2767 17 is_stmt 0 view .LVU834
 3062 0006 204B     		ldr	r3, .L239+4
 3063 0008 0122     		movs	r2, #1
 3064 000a 1A60     		str	r2, [r3]
 3065 000c 7047     		bx	lr
 3066              	.L230:
2771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_OUT();
 3067              		.loc 1 2771 3 is_stmt 1 view .LVU835
2771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_OUT();
 3068              		.loc 1 2771 17 is_stmt 0 view .LVU836
 3069 000e 1E4B     		ldr	r3, .L239+4
 3070 0010 0022     		movs	r2, #0
 3071 0012 1A60     		str	r2, [r3]
2772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3072              		.loc 1 2772 27 is_stmt 1 view .LVU837
2802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3073              		.loc 1 2802 33 view .LVU838
 3074              	.LBB133:
2806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3075              		.loc 1 2806 3 view .LVU839
2806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3076              		.loc 1 2806 3 view .LVU840
 3077 0014 1D4B     		ldr	r3, .L239+8
 3078 0016 1B68     		ldr	r3, [r3]
 3079              	.LVL221:
 3080              	.LBB134:
 3081              	.LBI134:
 172:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	{
 3082              		.loc 2 172 59 view .LVU841
 3083              	.LBB135:
 174:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 3084              		.loc 2 174 2 view .LVU842
 176:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		return ucReturn;
 3085              		.loc 2 176 3 view .LVU843
 3086              		.syntax unified
 3087              	@ 176 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 3088 0018 B3FA83F3 		clz r3, r3
 3089              	@ 0 "" 2
 3090              	.LVL222:
 176:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		return ucReturn;
 3091              		.loc 2 176 3 is_stmt 0 view .LVU844
 3092              		.thumb
 3093              		.syntax unified
 3094 001c DBB2     		uxtb	r3, r3
 3095              	.LVL223:
 177:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	}
 3096              		.loc 2 177 3 is_stmt 1 view .LVU845
 177:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	}
 3097              		.loc 2 177 3 is_stmt 0 view .LVU846
ARM GAS  /tmp/cclVzO8U.s 			page 157


 3098              	.LBE135:
 3099              	.LBE134:
2806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3100              		.loc 1 2806 3 view .LVU847
 3101 001e C3F11F03 		rsb	r3, r3, #31
 3102              	.LVL224:
2806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3103              		.loc 1 2806 3 is_stmt 1 view .LVU848
 3104 0022 03EB8301 		add	r1, r3, r3, lsl #2
 3105 0026 8A00     		lsls	r2, r1, #2
 3106 0028 1949     		ldr	r1, .L239+12
 3107 002a 8A58     		ldr	r2, [r1, r2]
 3108 002c 42B9     		cbnz	r2, .L232
2806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3109              		.loc 1 2806 3 view .LVU849
 3110              	.LBB136:
 3111              	.LBI136:
 233:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 3112              		.loc 2 233 30 view .LVU850
 3113              	.LBB137:
 235:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 3114              		.loc 2 235 1 view .LVU851
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3115              		.loc 2 237 2 view .LVU852
 3116              		.syntax unified
 3117              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 3118 002e 4FF05003 			mov r3, #80												
 3119 0032 83F31188 		msr basepri, r3											
 3120 0036 BFF36F8F 		isb														
 3121 003a BFF34F8F 		dsb														
 3122              	
 3123              	@ 0 "" 2
 3124              	.LVL225:
 3125              		.thumb
 3126              		.syntax unified
 3127              	.L233:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3128              		.loc 2 237 2 is_stmt 0 view .LVU853
 3129              	.LBE137:
 3130              	.LBE136:
2806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3131              		.loc 1 2806 3 is_stmt 1 discriminator 1 view .LVU854
2806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3132              		.loc 1 2806 3 discriminator 1 view .LVU855
 3133 003e FEE7     		b	.L233
 3134              	.LVL226:
 3135              	.L232:
2806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3136              		.loc 1 2806 3 is_stmt 0 discriminator 1 view .LVU856
 3137              	.LBE133:
2762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 3138              		.loc 1 2762 1 discriminator 2 view .LVU857
 3139 0040 10B4     		push	{r4}
 3140              	.LCFI27:
 3141              		.cfi_def_cfa_offset 4
 3142              		.cfi_offset 4, -4
 3143              	.LBB140:
ARM GAS  /tmp/cclVzO8U.s 			page 158


2806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3144              		.loc 1 2806 3 is_stmt 1 discriminator 2 view .LVU858
 3145              	.LBB138:
2806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3146              		.loc 1 2806 3 discriminator 2 view .LVU859
 3147              	.LVL227:
2806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3148              		.loc 1 2806 3 discriminator 2 view .LVU860
 3149 0042 1348     		ldr	r0, .L239+12
 3150 0044 9A00     		lsls	r2, r3, #2
 3151 0046 D418     		adds	r4, r2, r3
 3152 0048 A100     		lsls	r1, r4, #2
 3153 004a 0144     		add	r1, r1, r0
 3154 004c 4C68     		ldr	r4, [r1, #4]
 3155 004e 6468     		ldr	r4, [r4, #4]
 3156 0050 4C60     		str	r4, [r1, #4]
2806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3157              		.loc 1 2806 3 discriminator 2 view .LVU861
 3158 0052 1A44     		add	r2, r2, r3
 3159 0054 9100     		lsls	r1, r2, #2
 3160 0056 0831     		adds	r1, r1, #8
 3161 0058 0844     		add	r0, r0, r1
 3162 005a 8442     		cmp	r4, r0
 3163 005c 0AD0     		beq	.L238
 3164              	.L234:
2806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3165              		.loc 1 2806 3 discriminator 6 view .LVU862
 3166 005e 03EB8303 		add	r3, r3, r3, lsl #2
 3167              	.LVL228:
2806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3168              		.loc 1 2806 3 is_stmt 0 discriminator 6 view .LVU863
 3169 0062 9A00     		lsls	r2, r3, #2
 3170 0064 0A4B     		ldr	r3, .L239+12
 3171 0066 1344     		add	r3, r3, r2
 3172 0068 5B68     		ldr	r3, [r3, #4]
 3173 006a DA68     		ldr	r2, [r3, #12]
 3174 006c 094B     		ldr	r3, .L239+16
 3175 006e 1A60     		str	r2, [r3]
 3176              	.LBE138:
2806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3177              		.loc 1 2806 3 is_stmt 1 discriminator 6 view .LVU864
 3178              	.LBE140:
2806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3179              		.loc 1 2806 37 discriminator 6 view .LVU865
2807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3180              		.loc 1 2807 26 discriminator 6 view .LVU866
2817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3181              		.loc 1 2817 1 is_stmt 0 discriminator 6 view .LVU867
 3182 0070 10BC     		pop	{r4}
 3183              	.LCFI28:
 3184              		.cfi_remember_state
 3185              		.cfi_restore 4
 3186              		.cfi_def_cfa_offset 0
 3187 0072 7047     		bx	lr
 3188              	.LVL229:
 3189              	.L238:
 3190              	.LCFI29:
ARM GAS  /tmp/cclVzO8U.s 			page 159


 3191              		.cfi_restore_state
 3192              	.LBB141:
 3193              	.LBB139:
2806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3194              		.loc 1 2806 3 is_stmt 1 discriminator 4 view .LVU868
 3195 0074 6068     		ldr	r0, [r4, #4]
 3196 0076 03EB8302 		add	r2, r3, r3, lsl #2
 3197 007a 9100     		lsls	r1, r2, #2
 3198 007c 044A     		ldr	r2, .L239+12
 3199 007e 0A44     		add	r2, r2, r1
 3200 0080 5060     		str	r0, [r2, #4]
 3201 0082 ECE7     		b	.L234
 3202              	.L240:
 3203              		.align	2
 3204              	.L239:
 3205 0084 00000000 		.word	.LANCHOR16
 3206 0088 00000000 		.word	.LANCHOR20
 3207 008c 00000000 		.word	.LANCHOR13
 3208 0090 00000000 		.word	.LANCHOR4
 3209 0094 00000000 		.word	.LANCHOR10
 3210              	.LBE139:
 3211              	.LBE141:
 3212              		.cfi_endproc
 3213              	.LFE610:
 3215              		.section	.text.vTaskSuspend,"ax",%progbits
 3216              		.align	1
 3217              		.global	vTaskSuspend
 3218              		.syntax unified
 3219              		.thumb
 3220              		.thumb_func
 3221              		.fpu softvfp
 3223              	vTaskSuspend:
 3224              	.LVL230:
 3225              	.LFB597:
1567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 3226              		.loc 1 1567 2 view -0
 3227              		.cfi_startproc
 3228              		@ args = 0, pretend = 0, frame = 0
 3229              		@ frame_needed = 0, uses_anonymous_args = 0
1567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 3230              		.loc 1 1567 2 is_stmt 0 view .LVU870
 3231 0000 38B5     		push	{r3, r4, r5, lr}
 3232              	.LCFI30:
 3233              		.cfi_def_cfa_offset 16
 3234              		.cfi_offset 3, -16
 3235              		.cfi_offset 4, -12
 3236              		.cfi_offset 5, -8
 3237              		.cfi_offset 14, -4
 3238 0002 0446     		mov	r4, r0
1568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3239              		.loc 1 1568 2 is_stmt 1 view .LVU871
1570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3240              		.loc 1 1570 3 view .LVU872
 3241 0004 FFF7FEFF 		bl	vPortEnterCritical
 3242              	.LVL231:
1574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3243              		.loc 1 1574 4 view .LVU873
ARM GAS  /tmp/cclVzO8U.s 			page 160


1574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3244              		.loc 1 1574 12 is_stmt 0 view .LVU874
 3245 0008 3CB3     		cbz	r4, .L252
 3246              	.LVL232:
 3247              	.L242:
1576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3248              		.loc 1 1576 30 is_stmt 1 discriminator 4 view .LVU875
1580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3249              		.loc 1 1580 4 discriminator 4 view .LVU876
1580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3250              		.loc 1 1580 8 is_stmt 0 discriminator 4 view .LVU877
 3251 000a 251D     		adds	r5, r4, #4
 3252 000c 2846     		mov	r0, r5
 3253 000e FFF7FEFF 		bl	uxListRemove
 3254              	.LVL233:
1580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3255              		.loc 1 1580 6 discriminator 4 view .LVU878
 3256 0012 70B9     		cbnz	r0, .L243
1582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3257              		.loc 1 1582 5 is_stmt 1 view .LVU879
 3258 0014 E26A     		ldr	r2, [r4, #44]
 3259 0016 02EB8201 		add	r1, r2, r2, lsl #2
 3260 001a 8B00     		lsls	r3, r1, #2
 3261 001c 2649     		ldr	r1, .L255
 3262 001e CB58     		ldr	r3, [r1, r3]
 3263 0020 3BB9     		cbnz	r3, .L243
1582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3264              		.loc 1 1582 5 discriminator 1 view .LVU880
 3265 0022 0123     		movs	r3, #1
 3266 0024 03FA02F2 		lsl	r2, r3, r2
 3267 0028 2449     		ldr	r1, .L255+4
 3268 002a 0B68     		ldr	r3, [r1]
 3269 002c 23EA0203 		bic	r3, r3, r2
 3270 0030 0B60     		str	r3, [r1]
 3271              	.L243:
1586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3272              		.loc 1 1586 29 view .LVU881
1590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3273              		.loc 1 1590 4 view .LVU882
1590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3274              		.loc 1 1590 8 is_stmt 0 view .LVU883
 3275 0032 A36A     		ldr	r3, [r4, #40]
1590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3276              		.loc 1 1590 6 view .LVU884
 3277 0034 1BB1     		cbz	r3, .L244
1592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3278              		.loc 1 1592 5 is_stmt 1 view .LVU885
1592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3279              		.loc 1 1592 14 is_stmt 0 view .LVU886
 3280 0036 04F11800 		add	r0, r4, #24
 3281 003a FFF7FEFF 		bl	uxListRemove
 3282              	.LVL234:
 3283              	.L244:
1596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3284              		.loc 1 1596 29 is_stmt 1 view .LVU887
1599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3285              		.loc 1 1599 4 view .LVU888
ARM GAS  /tmp/cclVzO8U.s 			page 161


 3286 003e 2946     		mov	r1, r5
 3287 0040 1F48     		ldr	r0, .L255+8
 3288 0042 FFF7FEFF 		bl	vListInsertEnd
 3289              	.LVL235:
1601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3290              		.loc 1 1601 3 view .LVU889
 3291 0046 FFF7FEFF 		bl	vPortExitCritical
 3292              	.LVL236:
1603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3293              		.loc 1 1603 3 view .LVU890
1603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3294              		.loc 1 1603 25 is_stmt 0 view .LVU891
 3295 004a 1E4B     		ldr	r3, .L255+12
 3296 004c 1B68     		ldr	r3, [r3]
1603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3297              		.loc 1 1603 5 view .LVU892
 3298 004e 3BB9     		cbnz	r3, .L253
 3299              	.L245:
1615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3300              		.loc 1 1615 28 is_stmt 1 view .LVU893
1618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3301              		.loc 1 1618 3 view .LVU894
1618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3302              		.loc 1 1618 13 is_stmt 0 view .LVU895
 3303 0050 1D4B     		ldr	r3, .L255+16
 3304 0052 1B68     		ldr	r3, [r3]
1618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3305              		.loc 1 1618 5 view .LVU896
 3306 0054 A342     		cmp	r3, r4
 3307 0056 0AD0     		beq	.L254
 3308              	.L241:
1649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3309              		.loc 1 1649 2 view .LVU897
 3310 0058 38BD     		pop	{r3, r4, r5, pc}
 3311              	.LVL237:
 3312              	.L252:
1574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3313              		.loc 1 1574 12 discriminator 1 view .LVU898
 3314 005a 1B4B     		ldr	r3, .L255+16
 3315 005c 1C68     		ldr	r4, [r3]
 3316              	.LVL238:
1574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3317              		.loc 1 1574 12 discriminator 1 view .LVU899
 3318 005e D4E7     		b	.L242
 3319              	.LVL239:
 3320              	.L253:
1607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3321              		.loc 1 1607 4 is_stmt 1 view .LVU900
 3322 0060 FFF7FEFF 		bl	vPortEnterCritical
 3323              	.LVL240:
1609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3324              		.loc 1 1609 5 view .LVU901
 3325 0064 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 3326              	.LVL241:
1611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3327              		.loc 1 1611 4 view .LVU902
 3328 0068 FFF7FEFF 		bl	vPortExitCritical
ARM GAS  /tmp/cclVzO8U.s 			page 162


 3329              	.LVL242:
 3330 006c F0E7     		b	.L245
 3331              	.L254:
1620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3332              		.loc 1 1620 4 view .LVU903
1620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3333              		.loc 1 1620 26 is_stmt 0 view .LVU904
 3334 006e 154B     		ldr	r3, .L255+12
 3335 0070 1B68     		ldr	r3, [r3]
1620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3336              		.loc 1 1620 6 view .LVU905
 3337 0072 A3B1     		cbz	r3, .L247
1623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 3338              		.loc 1 1623 5 is_stmt 1 view .LVU906
 3339 0074 154B     		ldr	r3, .L255+20
 3340 0076 1B68     		ldr	r3, [r3]
 3341 0078 43B1     		cbz	r3, .L248
1623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 3342              		.loc 1 1623 5 view .LVU907
 3343              	.LBB142:
 3344              	.LBI142:
 233:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 3345              		.loc 2 233 30 view .LVU908
 3346              	.LBB143:
 235:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 3347              		.loc 2 235 1 view .LVU909
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3348              		.loc 2 237 2 view .LVU910
 3349              		.syntax unified
 3350              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 3351 007a 4FF05003 			mov r3, #80												
 3352 007e 83F31188 		msr basepri, r3											
 3353 0082 BFF36F8F 		isb														
 3354 0086 BFF34F8F 		dsb														
 3355              	
 3356              	@ 0 "" 2
 3357              	.LVL243:
 3358              		.thumb
 3359              		.syntax unified
 3360              	.L249:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3361              		.loc 2 237 2 is_stmt 0 view .LVU911
 3362              	.LBE143:
 3363              	.LBE142:
1623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 3364              		.loc 1 1623 5 is_stmt 1 discriminator 1 view .LVU912
1623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 3365              		.loc 1 1623 5 discriminator 1 view .LVU913
 3366 008a FEE7     		b	.L249
 3367              	.L248:
1623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 3368              		.loc 1 1623 46 discriminator 2 view .LVU914
1624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3369              		.loc 1 1624 5 discriminator 2 view .LVU915
 3370 008c 104B     		ldr	r3, .L255+24
 3371 008e 4FF08052 		mov	r2, #268435456
 3372 0092 1A60     		str	r2, [r3]
ARM GAS  /tmp/cclVzO8U.s 			page 163


1624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3373              		.loc 1 1624 5 discriminator 2 view .LVU916
 3374              		.syntax unified
 3375              	@ 1624 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3376 0094 BFF34F8F 		dsb
 3377              	@ 0 "" 2
1624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3378              		.loc 1 1624 5 discriminator 2 view .LVU917
 3379              	@ 1624 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3380 0098 BFF36F8F 		isb
 3381              	@ 0 "" 2
1624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3382              		.loc 1 1624 27 discriminator 2 view .LVU918
 3383              		.thumb
 3384              		.syntax unified
 3385 009c DCE7     		b	.L241
 3386              	.L247:
1631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3387              		.loc 1 1631 5 view .LVU919
1631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3388              		.loc 1 1631 9 is_stmt 0 view .LVU920
 3389 009e 084B     		ldr	r3, .L255+8
 3390 00a0 1A68     		ldr	r2, [r3]
1631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3391              		.loc 1 1631 56 view .LVU921
 3392 00a2 0C4B     		ldr	r3, .L255+28
 3393 00a4 1B68     		ldr	r3, [r3]
1631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3394              		.loc 1 1631 7 view .LVU922
 3395 00a6 9A42     		cmp	r2, r3
 3396 00a8 03D1     		bne	.L250
1637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3397              		.loc 1 1637 6 is_stmt 1 view .LVU923
1637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3398              		.loc 1 1637 19 is_stmt 0 view .LVU924
 3399 00aa 074B     		ldr	r3, .L255+16
 3400 00ac 0022     		movs	r2, #0
 3401 00ae 1A60     		str	r2, [r3]
 3402 00b0 D2E7     		b	.L241
 3403              	.L250:
1641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3404              		.loc 1 1641 6 is_stmt 1 view .LVU925
 3405 00b2 FFF7FEFF 		bl	vTaskSwitchContext
 3406              	.LVL244:
1647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3407              		.loc 1 1647 28 view .LVU926
1649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3408              		.loc 1 1649 2 is_stmt 0 view .LVU927
 3409 00b6 CFE7     		b	.L241
 3410              	.L256:
 3411              		.align	2
 3412              	.L255:
 3413 00b8 00000000 		.word	.LANCHOR4
 3414 00bc 00000000 		.word	.LANCHOR13
 3415 00c0 00000000 		.word	.LANCHOR0
 3416 00c4 00000000 		.word	.LANCHOR11
 3417 00c8 00000000 		.word	.LANCHOR10
ARM GAS  /tmp/cclVzO8U.s 			page 164


 3418 00cc 00000000 		.word	.LANCHOR16
 3419 00d0 04ED00E0 		.word	-536810236
 3420 00d4 00000000 		.word	.LANCHOR9
 3421              		.cfi_endproc
 3422              	.LFE597:
 3424              		.section	.text.vTaskPlaceOnEventList,"ax",%progbits
 3425              		.align	1
 3426              		.global	vTaskPlaceOnEventList
 3427              		.syntax unified
 3428              		.thumb
 3429              		.thumb_func
 3430              		.fpu softvfp
 3432              	vTaskPlaceOnEventList:
 3433              	.LVL245:
 3434              	.LFB611:
2821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
 3435              		.loc 1 2821 1 is_stmt 1 view -0
 3436              		.cfi_startproc
 3437              		@ args = 0, pretend = 0, frame = 0
 3438              		@ frame_needed = 0, uses_anonymous_args = 0
2822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3439              		.loc 1 2822 2 view .LVU929
 3440 0000 58B1     		cbz	r0, .L262
2821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
 3441              		.loc 1 2821 1 is_stmt 0 discriminator 2 view .LVU930
 3442 0002 10B5     		push	{r4, lr}
 3443              	.LCFI31:
 3444              		.cfi_def_cfa_offset 8
 3445              		.cfi_offset 4, -8
 3446              		.cfi_offset 14, -4
 3447 0004 0C46     		mov	r4, r1
2822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3448              		.loc 1 2822 29 is_stmt 1 discriminator 2 view .LVU931
2831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3449              		.loc 1 2831 2 discriminator 2 view .LVU932
2831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3450              		.loc 1 2831 43 is_stmt 0 discriminator 2 view .LVU933
 3451 0006 094B     		ldr	r3, .L263
 3452 0008 1968     		ldr	r1, [r3]
 3453              	.LVL246:
2831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3454              		.loc 1 2831 2 discriminator 2 view .LVU934
 3455 000a 1831     		adds	r1, r1, #24
 3456 000c FFF7FEFF 		bl	vListInsert
 3457              	.LVL247:
2833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3458              		.loc 1 2833 2 is_stmt 1 discriminator 2 view .LVU935
 3459 0010 0121     		movs	r1, #1
 3460 0012 2046     		mov	r0, r4
 3461 0014 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 3462              	.LVL248:
2834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3463              		.loc 1 2834 1 is_stmt 0 discriminator 2 view .LVU936
 3464 0018 10BD     		pop	{r4, pc}
 3465              	.LVL249:
 3466              	.L262:
 3467              	.LCFI32:
ARM GAS  /tmp/cclVzO8U.s 			page 165


 3468              		.cfi_def_cfa_offset 0
 3469              		.cfi_restore 4
 3470              		.cfi_restore 14
2822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3471              		.loc 1 2822 2 is_stmt 1 view .LVU937
 3472              	.LBB144:
 3473              	.LBI144:
 233:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 3474              		.loc 2 233 30 view .LVU938
 3475              	.LBB145:
 235:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 3476              		.loc 2 235 1 view .LVU939
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3477              		.loc 2 237 2 view .LVU940
 3478              		.syntax unified
 3479              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 3480 001a 4FF05003 			mov r3, #80												
 3481 001e 83F31188 		msr basepri, r3											
 3482 0022 BFF36F8F 		isb														
 3483 0026 BFF34F8F 		dsb														
 3484              	
 3485              	@ 0 "" 2
 3486              	.LVL250:
 3487              		.thumb
 3488              		.syntax unified
 3489              	.L259:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3490              		.loc 2 237 2 is_stmt 0 view .LVU941
 3491              	.LBE145:
 3492              	.LBE144:
2822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3493              		.loc 1 2822 2 is_stmt 1 discriminator 1 view .LVU942
2822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3494              		.loc 1 2822 2 discriminator 1 view .LVU943
 3495 002a FEE7     		b	.L259
 3496              	.L264:
 3497              		.align	2
 3498              	.L263:
 3499 002c 00000000 		.word	.LANCHOR10
 3500              		.cfi_endproc
 3501              	.LFE611:
 3503              		.section	.text.vTaskPlaceOnUnorderedEventList,"ax",%progbits
 3504              		.align	1
 3505              		.global	vTaskPlaceOnUnorderedEventList
 3506              		.syntax unified
 3507              		.thumb
 3508              		.thumb_func
 3509              		.fpu softvfp
 3511              	vTaskPlaceOnUnorderedEventList:
 3512              	.LVL251:
 3513              	.LFB612:
2838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
 3514              		.loc 1 2838 1 view -0
 3515              		.cfi_startproc
 3516              		@ args = 0, pretend = 0, frame = 0
 3517              		@ frame_needed = 0, uses_anonymous_args = 0
2839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cclVzO8U.s 			page 166


 3518              		.loc 1 2839 2 view .LVU945
 3519 0000 60B1     		cbz	r0, .L272
 3520 0002 0346     		mov	r3, r0
2839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3521              		.loc 1 2839 29 discriminator 2 view .LVU946
2843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3522              		.loc 1 2843 2 discriminator 2 view .LVU947
 3523 0004 1348     		ldr	r0, .L273
 3524              	.LVL252:
2843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3525              		.loc 1 2843 2 is_stmt 0 discriminator 2 view .LVU948
 3526 0006 0068     		ldr	r0, [r0]
 3527 0008 88B9     		cbnz	r0, .L268
2843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3528              		.loc 1 2843 2 is_stmt 1 view .LVU949
 3529              	.LBB146:
 3530              	.LBI146:
 233:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 3531              		.loc 2 233 30 view .LVU950
 3532              	.LBB147:
 235:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 3533              		.loc 2 235 1 view .LVU951
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3534              		.loc 2 237 2 view .LVU952
 3535              		.syntax unified
 3536              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 3537 000a 4FF05003 			mov r3, #80												
 3538 000e 83F31188 		msr basepri, r3											
 3539 0012 BFF36F8F 		isb														
 3540 0016 BFF34F8F 		dsb														
 3541              	
 3542              	@ 0 "" 2
 3543              	.LVL253:
 3544              		.thumb
 3545              		.syntax unified
 3546              	.L269:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3547              		.loc 2 237 2 is_stmt 0 view .LVU953
 3548              	.LBE147:
 3549              	.LBE146:
2843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3550              		.loc 1 2843 2 is_stmt 1 discriminator 2 view .LVU954
2843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3551              		.loc 1 2843 2 discriminator 2 view .LVU955
 3552 001a FEE7     		b	.L269
 3553              	.LVL254:
 3554              	.L272:
2839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3555              		.loc 1 2839 2 view .LVU956
 3556              	.LBB148:
 3557              	.LBI148:
 233:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 3558              		.loc 2 233 30 view .LVU957
 3559              	.LBB149:
 235:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 3560              		.loc 2 235 1 view .LVU958
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
ARM GAS  /tmp/cclVzO8U.s 			page 167


 3561              		.loc 2 237 2 view .LVU959
 3562              		.syntax unified
 3563              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 3564 001c 4FF05003 			mov r3, #80												
 3565 0020 83F31188 		msr basepri, r3											
 3566 0024 BFF36F8F 		isb														
 3567 0028 BFF34F8F 		dsb														
 3568              	
 3569              	@ 0 "" 2
 3570              	.LVL255:
 3571              		.thumb
 3572              		.syntax unified
 3573              	.L267:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3574              		.loc 2 237 2 is_stmt 0 view .LVU960
 3575              	.LBE149:
 3576              	.LBE148:
2839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3577              		.loc 1 2839 2 is_stmt 1 discriminator 1 view .LVU961
2839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3578              		.loc 1 2839 2 discriminator 1 view .LVU962
 3579 002c FEE7     		b	.L267
 3580              	.LVL256:
 3581              	.L268:
2838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
 3582              		.loc 1 2838 1 is_stmt 0 discriminator 2 view .LVU963
 3583 002e 10B5     		push	{r4, lr}
 3584              	.LCFI33:
 3585              		.cfi_def_cfa_offset 8
 3586              		.cfi_offset 4, -8
 3587              		.cfi_offset 14, -4
 3588 0030 1846     		mov	r0, r3
 3589 0032 1446     		mov	r4, r2
 3590 0034 0B46     		mov	r3, r1
 3591              	.LVL257:
2843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3592              		.loc 1 2843 43 is_stmt 1 discriminator 2 view .LVU964
2848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3593              		.loc 1 2848 2 discriminator 2 view .LVU965
 3594 0036 084A     		ldr	r2, .L273+4
 3595              	.LVL258:
2848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3596              		.loc 1 2848 2 is_stmt 0 discriminator 2 view .LVU966
 3597 0038 1168     		ldr	r1, [r2]
 3598              	.LVL259:
2848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3599              		.loc 1 2848 2 discriminator 2 view .LVU967
 3600 003a 43F00043 		orr	r3, r3, #-2147483648
 3601              	.LVL260:
2848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3602              		.loc 1 2848 2 discriminator 2 view .LVU968
 3603 003e 8B61     		str	r3, [r1, #24]
2855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3604              		.loc 1 2855 2 is_stmt 1 discriminator 2 view .LVU969
2855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3605              		.loc 1 2855 46 is_stmt 0 discriminator 2 view .LVU970
 3606 0040 1168     		ldr	r1, [r2]
ARM GAS  /tmp/cclVzO8U.s 			page 168


2855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3607              		.loc 1 2855 2 discriminator 2 view .LVU971
 3608 0042 1831     		adds	r1, r1, #24
 3609 0044 FFF7FEFF 		bl	vListInsertEnd
 3610              	.LVL261:
2857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3611              		.loc 1 2857 2 is_stmt 1 discriminator 2 view .LVU972
 3612 0048 0121     		movs	r1, #1
 3613 004a 2046     		mov	r0, r4
 3614 004c FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 3615              	.LVL262:
2858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3616              		.loc 1 2858 1 is_stmt 0 discriminator 2 view .LVU973
 3617 0050 10BD     		pop	{r4, pc}
 3618              	.LVL263:
 3619              	.L274:
2858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3620              		.loc 1 2858 1 discriminator 2 view .LVU974
 3621 0052 00BF     		.align	2
 3622              	.L273:
 3623 0054 00000000 		.word	.LANCHOR16
 3624 0058 00000000 		.word	.LANCHOR10
 3625              		.cfi_endproc
 3626              	.LFE612:
 3628              		.section	.text.xTaskRemoveFromEventList,"ax",%progbits
 3629              		.align	1
 3630              		.global	xTaskRemoveFromEventList
 3631              		.syntax unified
 3632              		.thumb
 3633              		.thumb_func
 3634              		.fpu softvfp
 3636              	xTaskRemoveFromEventList:
 3637              	.LVL264:
 3638              	.LFB613:
2895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
 3639              		.loc 1 2895 1 is_stmt 1 view -0
 3640              		.cfi_startproc
 3641              		@ args = 0, pretend = 0, frame = 0
 3642              		@ frame_needed = 0, uses_anonymous_args = 0
2895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
 3643              		.loc 1 2895 1 is_stmt 0 view .LVU976
 3644 0000 38B5     		push	{r3, r4, r5, lr}
 3645              	.LCFI34:
 3646              		.cfi_def_cfa_offset 16
 3647              		.cfi_offset 3, -16
 3648              		.cfi_offset 4, -12
 3649              		.cfi_offset 5, -8
 3650              		.cfi_offset 14, -4
2896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
 3651              		.loc 1 2896 1 is_stmt 1 view .LVU977
2897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3652              		.loc 1 2897 1 view .LVU978
2912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 3653              		.loc 1 2912 2 view .LVU979
2912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 3654              		.loc 1 2912 31 is_stmt 0 view .LVU980
 3655 0002 C368     		ldr	r3, [r0, #12]
ARM GAS  /tmp/cclVzO8U.s 			page 169


2912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 3656              		.loc 1 2912 17 view .LVU981
 3657 0004 DC68     		ldr	r4, [r3, #12]
 3658              	.LVL265:
2913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 3659              		.loc 1 2913 2 is_stmt 1 view .LVU982
 3660 0006 24B3     		cbz	r4, .L283
2913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 3661              		.loc 1 2913 32 discriminator 2 view .LVU983
2914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3662              		.loc 1 2914 2 discriminator 2 view .LVU984
2914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3663              		.loc 1 2914 11 is_stmt 0 discriminator 2 view .LVU985
 3664 0008 04F11805 		add	r5, r4, #24
 3665 000c 2846     		mov	r0, r5
 3666              	.LVL266:
2914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3667              		.loc 1 2914 11 discriminator 2 view .LVU986
 3668 000e FFF7FEFF 		bl	uxListRemove
 3669              	.LVL267:
2916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3670              		.loc 1 2916 2 is_stmt 1 discriminator 2 view .LVU987
2916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3671              		.loc 1 2916 27 is_stmt 0 discriminator 2 view .LVU988
 3672 0012 184B     		ldr	r3, .L284
 3673 0014 1B68     		ldr	r3, [r3]
2916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3674              		.loc 1 2916 4 discriminator 2 view .LVU989
 3675 0016 2BBB     		cbnz	r3, .L278
2918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddTaskToReadyList( pxUnblockedTCB );
 3676              		.loc 1 2918 3 is_stmt 1 view .LVU990
2918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddTaskToReadyList( pxUnblockedTCB );
 3677              		.loc 1 2918 12 is_stmt 0 view .LVU991
 3678 0018 251D     		adds	r5, r4, #4
 3679 001a 2846     		mov	r0, r5
 3680 001c FFF7FEFF 		bl	uxListRemove
 3681              	.LVL268:
2919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3682              		.loc 1 2919 3 is_stmt 1 view .LVU992
2919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3683              		.loc 1 2919 3 view .LVU993
 3684 0020 E36A     		ldr	r3, [r4, #44]
 3685 0022 0122     		movs	r2, #1
 3686 0024 9A40     		lsls	r2, r2, r3
 3687 0026 1449     		ldr	r1, .L284+4
 3688 0028 0868     		ldr	r0, [r1]
 3689 002a 0243     		orrs	r2, r2, r0
 3690 002c 0A60     		str	r2, [r1]
2919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3691              		.loc 1 2919 3 view .LVU994
 3692 002e 03EB8303 		add	r3, r3, r3, lsl #2
 3693 0032 9A00     		lsls	r2, r3, #2
 3694 0034 2946     		mov	r1, r5
 3695 0036 1148     		ldr	r0, .L284+8
 3696 0038 1044     		add	r0, r0, r2
 3697 003a FFF7FEFF 		bl	vListInsertEnd
 3698              	.LVL269:
ARM GAS  /tmp/cclVzO8U.s 			page 170


2919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3699              		.loc 1 2919 42 view .LVU995
 3700              	.L279:
2928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3701              		.loc 1 2928 2 view .LVU996
2928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3702              		.loc 1 2928 20 is_stmt 0 view .LVU997
 3703 003e E26A     		ldr	r2, [r4, #44]
2928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3704              		.loc 1 2928 47 view .LVU998
 3705 0040 0F4B     		ldr	r3, .L284+12
 3706 0042 1B68     		ldr	r3, [r3]
 3707 0044 DB6A     		ldr	r3, [r3, #44]
2928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3708              		.loc 1 2928 4 view .LVU999
 3709 0046 9A42     		cmp	r2, r3
 3710 0048 11D9     		bls	.L281
2933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3711              		.loc 1 2933 3 is_stmt 1 view .LVU1000
 3712              	.LVL270:
2937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3713              		.loc 1 2937 3 view .LVU1001
2937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3714              		.loc 1 2937 17 is_stmt 0 view .LVU1002
 3715 004a 0120     		movs	r0, #1
 3716 004c 0D4B     		ldr	r3, .L284+16
 3717 004e 1860     		str	r0, [r3]
 3718 0050 0EE0     		b	.L275
 3719              	.LVL271:
 3720              	.L283:
2913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 3721              		.loc 1 2913 2 is_stmt 1 view .LVU1003
 3722              	.LBB150:
 3723              	.LBI150:
 233:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 3724              		.loc 2 233 30 view .LVU1004
 3725              	.LBB151:
 235:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 3726              		.loc 2 235 1 view .LVU1005
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3727              		.loc 2 237 2 view .LVU1006
 3728              		.syntax unified
 3729              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 3730 0052 4FF05003 			mov r3, #80												
 3731 0056 83F31188 		msr basepri, r3											
 3732 005a BFF36F8F 		isb														
 3733 005e BFF34F8F 		dsb														
 3734              	
 3735              	@ 0 "" 2
 3736              	.LVL272:
 3737              		.thumb
 3738              		.syntax unified
 3739              	.L277:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3740              		.loc 2 237 2 is_stmt 0 view .LVU1007
 3741              	.LBE151:
 3742              	.LBE150:
ARM GAS  /tmp/cclVzO8U.s 			page 171


2913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 3743              		.loc 1 2913 2 is_stmt 1 discriminator 1 view .LVU1008
2913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 3744              		.loc 1 2913 2 discriminator 1 view .LVU1009
 3745 0062 FEE7     		b	.L277
 3746              	.LVL273:
 3747              	.L278:
2925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3748              		.loc 1 2925 3 view .LVU1010
 3749 0064 2946     		mov	r1, r5
 3750 0066 0848     		ldr	r0, .L284+20
 3751 0068 FFF7FEFF 		bl	vListInsertEnd
 3752              	.LVL274:
 3753 006c E7E7     		b	.L279
 3754              	.L281:
2941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3755              		.loc 1 2941 11 is_stmt 0 view .LVU1011
 3756 006e 0020     		movs	r0, #0
 3757              	.LVL275:
2958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3758              		.loc 1 2958 2 is_stmt 1 view .LVU1012
 3759              	.L275:
2959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3760              		.loc 1 2959 1 is_stmt 0 view .LVU1013
 3761 0070 38BD     		pop	{r3, r4, r5, pc}
 3762              	.LVL276:
 3763              	.L285:
2959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3764              		.loc 1 2959 1 view .LVU1014
 3765 0072 00BF     		.align	2
 3766              	.L284:
 3767 0074 00000000 		.word	.LANCHOR16
 3768 0078 00000000 		.word	.LANCHOR13
 3769 007c 00000000 		.word	.LANCHOR4
 3770 0080 00000000 		.word	.LANCHOR10
 3771 0084 00000000 		.word	.LANCHOR20
 3772 0088 00000000 		.word	.LANCHOR1
 3773              		.cfi_endproc
 3774              	.LFE613:
 3776              		.section	.text.xTaskRemoveFromUnorderedEventList,"ax",%progbits
 3777              		.align	1
 3778              		.global	xTaskRemoveFromUnorderedEventList
 3779              		.syntax unified
 3780              		.thumb
 3781              		.thumb_func
 3782              		.fpu softvfp
 3784              	xTaskRemoveFromUnorderedEventList:
 3785              	.LVL277:
 3786              	.LFB614:
2963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
 3787              		.loc 1 2963 1 is_stmt 1 view -0
 3788              		.cfi_startproc
 3789              		@ args = 0, pretend = 0, frame = 0
 3790              		@ frame_needed = 0, uses_anonymous_args = 0
2963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
 3791              		.loc 1 2963 1 is_stmt 0 view .LVU1016
 3792 0000 38B5     		push	{r3, r4, r5, lr}
ARM GAS  /tmp/cclVzO8U.s 			page 172


 3793              	.LCFI35:
 3794              		.cfi_def_cfa_offset 16
 3795              		.cfi_offset 3, -16
 3796              		.cfi_offset 4, -12
 3797              		.cfi_offset 5, -8
 3798              		.cfi_offset 14, -4
2964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
 3799              		.loc 1 2964 1 is_stmt 1 view .LVU1017
2965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3800              		.loc 1 2965 1 view .LVU1018
2969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3801              		.loc 1 2969 2 view .LVU1019
 3802 0002 1D4B     		ldr	r3, .L295
 3803 0004 1B68     		ldr	r3, [r3]
 3804 0006 43B9     		cbnz	r3, .L287
2969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3805              		.loc 1 2969 2 view .LVU1020
 3806              	.LBB152:
 3807              	.LBI152:
 233:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 3808              		.loc 2 233 30 view .LVU1021
 3809              	.LBB153:
 235:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 3810              		.loc 2 235 1 view .LVU1022
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3811              		.loc 2 237 2 view .LVU1023
 3812              		.syntax unified
 3813              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 3814 0008 4FF05003 			mov r3, #80												
 3815 000c 83F31188 		msr basepri, r3											
 3816 0010 BFF36F8F 		isb														
 3817 0014 BFF34F8F 		dsb														
 3818              	
 3819              	@ 0 "" 2
 3820              	.LVL278:
 3821              		.thumb
 3822              		.syntax unified
 3823              	.L288:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3824              		.loc 2 237 2 is_stmt 0 view .LVU1024
 3825              	.LBE153:
 3826              	.LBE152:
2969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3827              		.loc 1 2969 2 is_stmt 1 discriminator 1 view .LVU1025
2969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3828              		.loc 1 2969 2 discriminator 1 view .LVU1026
 3829 0018 FEE7     		b	.L288
 3830              	.L287:
2969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3831              		.loc 1 2969 49 discriminator 2 view .LVU1027
2972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3832              		.loc 1 2972 2 discriminator 2 view .LVU1028
 3833 001a 41F00041 		orr	r1, r1, #-2147483648
 3834              	.LVL279:
2972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3835              		.loc 1 2972 2 is_stmt 0 discriminator 2 view .LVU1029
 3836 001e 0160     		str	r1, [r0]
ARM GAS  /tmp/cclVzO8U.s 			page 173


2976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 3837              		.loc 1 2976 2 is_stmt 1 discriminator 2 view .LVU1030
2976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 3838              		.loc 1 2976 17 is_stmt 0 discriminator 2 view .LVU1031
 3839 0020 C468     		ldr	r4, [r0, #12]
 3840              	.LVL280:
2977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 3841              		.loc 1 2977 2 is_stmt 1 discriminator 2 view .LVU1032
 3842 0022 F4B1     		cbz	r4, .L294
2977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 3843              		.loc 1 2977 32 discriminator 2 view .LVU1033
2978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3844              		.loc 1 2978 2 discriminator 2 view .LVU1034
2978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3845              		.loc 1 2978 11 is_stmt 0 discriminator 2 view .LVU1035
 3846 0024 FFF7FEFF 		bl	uxListRemove
 3847              	.LVL281:
2983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddTaskToReadyList( pxUnblockedTCB );
 3848              		.loc 1 2983 2 is_stmt 1 discriminator 2 view .LVU1036
2983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddTaskToReadyList( pxUnblockedTCB );
 3849              		.loc 1 2983 11 is_stmt 0 discriminator 2 view .LVU1037
 3850 0028 251D     		adds	r5, r4, #4
 3851 002a 2846     		mov	r0, r5
 3852 002c FFF7FEFF 		bl	uxListRemove
 3853              	.LVL282:
2984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3854              		.loc 1 2984 2 is_stmt 1 discriminator 2 view .LVU1038
2984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3855              		.loc 1 2984 2 discriminator 2 view .LVU1039
 3856 0030 E36A     		ldr	r3, [r4, #44]
 3857 0032 0122     		movs	r2, #1
 3858 0034 9A40     		lsls	r2, r2, r3
 3859 0036 1149     		ldr	r1, .L295+4
 3860 0038 0868     		ldr	r0, [r1]
 3861 003a 0243     		orrs	r2, r2, r0
 3862 003c 0A60     		str	r2, [r1]
2984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3863              		.loc 1 2984 2 discriminator 2 view .LVU1040
 3864 003e 03EB8303 		add	r3, r3, r3, lsl #2
 3865 0042 9A00     		lsls	r2, r3, #2
 3866 0044 2946     		mov	r1, r5
 3867 0046 0E48     		ldr	r0, .L295+8
 3868 0048 1044     		add	r0, r0, r2
 3869 004a FFF7FEFF 		bl	vListInsertEnd
 3870              	.LVL283:
2984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3871              		.loc 1 2984 41 discriminator 2 view .LVU1041
2986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3872              		.loc 1 2986 2 discriminator 2 view .LVU1042
2986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3873              		.loc 1 2986 20 is_stmt 0 discriminator 2 view .LVU1043
 3874 004e E26A     		ldr	r2, [r4, #44]
2986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3875              		.loc 1 2986 47 discriminator 2 view .LVU1044
 3876 0050 0C4B     		ldr	r3, .L295+12
 3877 0052 1B68     		ldr	r3, [r3]
 3878 0054 DB6A     		ldr	r3, [r3, #44]
ARM GAS  /tmp/cclVzO8U.s 			page 174


2986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3879              		.loc 1 2986 4 discriminator 2 view .LVU1045
 3880 0056 9A42     		cmp	r2, r3
 3881 0058 0CD9     		bls	.L292
2992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3882              		.loc 1 2992 3 is_stmt 1 view .LVU1046
 3883              	.LVL284:
2996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3884              		.loc 1 2996 3 view .LVU1047
2996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3885              		.loc 1 2996 17 is_stmt 0 view .LVU1048
 3886 005a 0120     		movs	r0, #1
 3887 005c 0A4B     		ldr	r3, .L295+16
 3888 005e 1860     		str	r0, [r3]
 3889 0060 09E0     		b	.L286
 3890              	.LVL285:
 3891              	.L294:
2977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 3892              		.loc 1 2977 2 is_stmt 1 view .LVU1049
 3893              	.LBB154:
 3894              	.LBI154:
 233:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 3895              		.loc 2 233 30 view .LVU1050
 3896              	.LBB155:
 235:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 3897              		.loc 2 235 1 view .LVU1051
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3898              		.loc 2 237 2 view .LVU1052
 3899              		.syntax unified
 3900              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 3901 0062 4FF05003 			mov r3, #80												
 3902 0066 83F31188 		msr basepri, r3											
 3903 006a BFF36F8F 		isb														
 3904 006e BFF34F8F 		dsb														
 3905              	
 3906              	@ 0 "" 2
 3907              	.LVL286:
 3908              		.thumb
 3909              		.syntax unified
 3910              	.L290:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3911              		.loc 2 237 2 is_stmt 0 view .LVU1053
 3912              	.LBE155:
 3913              	.LBE154:
2977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 3914              		.loc 1 2977 2 is_stmt 1 discriminator 2 view .LVU1054
2977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 3915              		.loc 1 2977 2 discriminator 2 view .LVU1055
 3916 0072 FEE7     		b	.L290
 3917              	.LVL287:
 3918              	.L292:
3000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3919              		.loc 1 3000 11 is_stmt 0 view .LVU1056
 3920 0074 0020     		movs	r0, #0
 3921              	.LVL288:
3003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3922              		.loc 1 3003 2 is_stmt 1 view .LVU1057
ARM GAS  /tmp/cclVzO8U.s 			page 175


 3923              	.L286:
3004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3924              		.loc 1 3004 1 is_stmt 0 view .LVU1058
 3925 0076 38BD     		pop	{r3, r4, r5, pc}
 3926              	.LVL289:
 3927              	.L296:
3004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3928              		.loc 1 3004 1 view .LVU1059
 3929              		.align	2
 3930              	.L295:
 3931 0078 00000000 		.word	.LANCHOR16
 3932 007c 00000000 		.word	.LANCHOR13
 3933 0080 00000000 		.word	.LANCHOR4
 3934 0084 00000000 		.word	.LANCHOR10
 3935 0088 00000000 		.word	.LANCHOR20
 3936              		.cfi_endproc
 3937              	.LFE614:
 3939              		.section	.text.vTaskSetTimeOutState,"ax",%progbits
 3940              		.align	1
 3941              		.global	vTaskSetTimeOutState
 3942              		.syntax unified
 3943              		.thumb
 3944              		.thumb_func
 3945              		.fpu softvfp
 3947              	vTaskSetTimeOutState:
 3948              	.LVL290:
 3949              	.LFB615:
3008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTimeOut );
 3950              		.loc 1 3008 1 is_stmt 1 view -0
 3951              		.cfi_startproc
 3952              		@ args = 0, pretend = 0, frame = 0
 3953              		@ frame_needed = 0, uses_anonymous_args = 0
 3954              		@ link register save eliminated.
3009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xOverflowCount = xNumOfOverflows;
 3955              		.loc 1 3009 2 view .LVU1061
 3956 0000 30B1     		cbz	r0, .L300
3009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xOverflowCount = xNumOfOverflows;
 3957              		.loc 1 3009 27 discriminator 2 view .LVU1062
3010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
 3958              		.loc 1 3010 2 discriminator 2 view .LVU1063
3010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
 3959              		.loc 1 3010 28 is_stmt 0 discriminator 2 view .LVU1064
 3960 0002 084A     		ldr	r2, .L301
 3961 0004 1268     		ldr	r2, [r2]
 3962 0006 0260     		str	r2, [r0]
3011:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3963              		.loc 1 3011 2 is_stmt 1 discriminator 2 view .LVU1065
3011:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3964              		.loc 1 3011 29 is_stmt 0 discriminator 2 view .LVU1066
 3965 0008 074A     		ldr	r2, .L301+4
 3966 000a 1268     		ldr	r2, [r2]
 3967 000c 4260     		str	r2, [r0, #4]
3012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3968              		.loc 1 3012 1 discriminator 2 view .LVU1067
 3969 000e 7047     		bx	lr
 3970              	.L300:
3009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xOverflowCount = xNumOfOverflows;
ARM GAS  /tmp/cclVzO8U.s 			page 176


 3971              		.loc 1 3009 2 is_stmt 1 view .LVU1068
 3972              	.LBB156:
 3973              	.LBI156:
 233:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 3974              		.loc 2 233 30 view .LVU1069
 3975              	.LBB157:
 235:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 3976              		.loc 2 235 1 view .LVU1070
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3977              		.loc 2 237 2 view .LVU1071
 3978              		.syntax unified
 3979              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 3980 0010 4FF05003 			mov r3, #80												
 3981 0014 83F31188 		msr basepri, r3											
 3982 0018 BFF36F8F 		isb														
 3983 001c BFF34F8F 		dsb														
 3984              	
 3985              	@ 0 "" 2
 3986              	.LVL291:
 3987              		.thumb
 3988              		.syntax unified
 3989              	.L299:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3990              		.loc 2 237 2 is_stmt 0 view .LVU1072
 3991              	.LBE157:
 3992              	.LBE156:
3009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xOverflowCount = xNumOfOverflows;
 3993              		.loc 1 3009 2 is_stmt 1 discriminator 1 view .LVU1073
3009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xOverflowCount = xNumOfOverflows;
 3994              		.loc 1 3009 2 discriminator 1 view .LVU1074
 3995 0020 FEE7     		b	.L299
 3996              	.L302:
 3997 0022 00BF     		.align	2
 3998              	.L301:
 3999 0024 00000000 		.word	.LANCHOR18
 4000 0028 00000000 		.word	.LANCHOR14
 4001              		.cfi_endproc
 4002              	.LFE615:
 4004              		.section	.text.xTaskCheckForTimeOut,"ax",%progbits
 4005              		.align	1
 4006              		.global	xTaskCheckForTimeOut
 4007              		.syntax unified
 4008              		.thumb
 4009              		.thumb_func
 4010              		.fpu softvfp
 4012              	xTaskCheckForTimeOut:
 4013              	.LVL292:
 4014              	.LFB616:
3016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
 4015              		.loc 1 3016 1 view -0
 4016              		.cfi_startproc
 4017              		@ args = 0, pretend = 0, frame = 0
 4018              		@ frame_needed = 0, uses_anonymous_args = 0
3016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
 4019              		.loc 1 3016 1 is_stmt 0 view .LVU1076
 4020 0000 38B5     		push	{r3, r4, r5, lr}
 4021              	.LCFI36:
ARM GAS  /tmp/cclVzO8U.s 			page 177


 4022              		.cfi_def_cfa_offset 16
 4023              		.cfi_offset 3, -16
 4024              		.cfi_offset 4, -12
 4025              		.cfi_offset 5, -8
 4026              		.cfi_offset 14, -4
3017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4027              		.loc 1 3017 1 is_stmt 1 view .LVU1077
3019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 4028              		.loc 1 3019 2 view .LVU1078
 4029 0002 C0B1     		cbz	r0, .L314
 4030 0004 0446     		mov	r4, r0
3019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 4031              		.loc 1 3019 27 discriminator 2 view .LVU1079
3020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4032              		.loc 1 3020 2 discriminator 2 view .LVU1080
 4033 0006 F9B1     		cbz	r1, .L315
 4034 0008 0D46     		mov	r5, r1
3020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4035              		.loc 1 3020 31 discriminator 2 view .LVU1081
3022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 4036              		.loc 1 3022 2 discriminator 2 view .LVU1082
 4037 000a FFF7FEFF 		bl	vPortEnterCritical
 4038              	.LVL293:
 4039              	.LBB158:
3025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4040              		.loc 1 3025 3 discriminator 2 view .LVU1083
3025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4041              		.loc 1 3025 20 is_stmt 0 discriminator 2 view .LVU1084
 4042 000e 1A4B     		ldr	r3, .L317
 4043 0010 1968     		ldr	r1, [r3]
 4044              	.LVL294:
3039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4045              		.loc 1 3039 4 is_stmt 1 discriminator 2 view .LVU1085
3039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4046              		.loc 1 3039 8 is_stmt 0 discriminator 2 view .LVU1086
 4047 0012 2A68     		ldr	r2, [r5]
3039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4048              		.loc 1 3039 6 discriminator 2 view .LVU1087
 4049 0014 B2F1FF3F 		cmp	r2, #-1
 4050 0018 27D0     		beq	.L310
3049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4051              		.loc 1 3049 3 is_stmt 1 view .LVU1088
3049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4052              		.loc 1 3049 37 is_stmt 0 view .LVU1089
 4053 001a 2068     		ldr	r0, [r4]
3049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4054              		.loc 1 3049 25 view .LVU1090
 4055 001c 174B     		ldr	r3, .L317+4
 4056 001e 1B68     		ldr	r3, [r3]
3049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4057              		.loc 1 3049 5 view .LVU1091
 4058 0020 9842     		cmp	r0, r3
 4059 0022 02D0     		beq	.L309
3049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4060              		.loc 1 3049 89 discriminator 1 view .LVU1092
 4061 0024 6368     		ldr	r3, [r4, #4]
3049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
ARM GAS  /tmp/cclVzO8U.s 			page 178


 4062              		.loc 1 3049 56 discriminator 1 view .LVU1093
 4063 0026 8B42     		cmp	r3, r1
 4064 0028 24D9     		bls	.L311
 4065              	.L309:
3058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4066              		.loc 1 3058 8 is_stmt 1 view .LVU1094
3058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4067              		.loc 1 3058 58 is_stmt 0 view .LVU1095
 4068 002a 6368     		ldr	r3, [r4, #4]
3058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4069              		.loc 1 3058 14 view .LVU1096
 4070 002c C81A     		subs	r0, r1, r3
3058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4071              		.loc 1 3058 10 view .LVU1097
 4072 002e 8242     		cmp	r2, r0
 4073 0030 13D8     		bhi	.L316
3067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4074              		.loc 1 3067 12 view .LVU1098
 4075 0032 0124     		movs	r4, #1
 4076              	.LVL295:
3067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4077              		.loc 1 3067 12 view .LVU1099
 4078 0034 1AE0     		b	.L308
 4079              	.LVL296:
 4080              	.L314:
3067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4081              		.loc 1 3067 12 view .LVU1100
 4082              	.LBE158:
3019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 4083              		.loc 1 3019 2 is_stmt 1 view .LVU1101
 4084              	.LBB159:
 4085              	.LBI159:
 233:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 4086              		.loc 2 233 30 view .LVU1102
 4087              	.LBB160:
 235:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 4088              		.loc 2 235 1 view .LVU1103
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 4089              		.loc 2 237 2 view .LVU1104
 4090              		.syntax unified
 4091              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 4092 0036 4FF05003 			mov r3, #80												
 4093 003a 83F31188 		msr basepri, r3											
 4094 003e BFF36F8F 		isb														
 4095 0042 BFF34F8F 		dsb														
 4096              	
 4097              	@ 0 "" 2
 4098              	.LVL297:
 4099              		.thumb
 4100              		.syntax unified
 4101              	.L305:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 4102              		.loc 2 237 2 is_stmt 0 view .LVU1105
 4103              	.LBE160:
 4104              	.LBE159:
3019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 4105              		.loc 1 3019 2 is_stmt 1 discriminator 1 view .LVU1106
ARM GAS  /tmp/cclVzO8U.s 			page 179


3019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 4106              		.loc 1 3019 2 discriminator 1 view .LVU1107
 4107 0046 FEE7     		b	.L305
 4108              	.L315:
3020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4109              		.loc 1 3020 2 view .LVU1108
 4110              	.LBB161:
 4111              	.LBI161:
 233:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 4112              		.loc 2 233 30 view .LVU1109
 4113              	.LBB162:
 235:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 4114              		.loc 2 235 1 view .LVU1110
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 4115              		.loc 2 237 2 view .LVU1111
 4116              		.syntax unified
 4117              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 4118 0048 4FF05003 			mov r3, #80												
 4119 004c 83F31188 		msr basepri, r3											
 4120 0050 BFF36F8F 		isb														
 4121 0054 BFF34F8F 		dsb														
 4122              	
 4123              	@ 0 "" 2
 4124              	.LVL298:
 4125              		.thumb
 4126              		.syntax unified
 4127              	.L307:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 4128              		.loc 2 237 2 is_stmt 0 view .LVU1112
 4129              	.LBE162:
 4130              	.LBE161:
3020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4131              		.loc 1 3020 2 is_stmt 1 discriminator 2 view .LVU1113
3020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4132              		.loc 1 3020 2 discriminator 2 view .LVU1114
 4133 0058 FEE7     		b	.L307
 4134              	.LVL299:
 4135              	.L316:
 4136              	.LBB163:
3061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSetTimeOutState( pxTimeOut );
 4137              		.loc 1 3061 4 view .LVU1115
3061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSetTimeOutState( pxTimeOut );
 4138              		.loc 1 3061 19 is_stmt 0 view .LVU1116
 4139 005a 5B1A     		subs	r3, r3, r1
 4140 005c 1344     		add	r3, r3, r2
 4141 005e 2B60     		str	r3, [r5]
3062:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdFALSE;
 4142              		.loc 1 3062 4 is_stmt 1 view .LVU1117
 4143 0060 2046     		mov	r0, r4
 4144 0062 FFF7FEFF 		bl	vTaskSetTimeOutState
 4145              	.LVL300:
3063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4146              		.loc 1 3063 4 view .LVU1118
3063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4147              		.loc 1 3063 12 is_stmt 0 view .LVU1119
 4148 0066 0024     		movs	r4, #0
 4149              	.LVL301:
ARM GAS  /tmp/cclVzO8U.s 			page 180


3063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4150              		.loc 1 3063 12 view .LVU1120
 4151 0068 00E0     		b	.L308
 4152              	.LVL302:
 4153              	.L310:
3044:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4154              		.loc 1 3044 13 view .LVU1121
 4155 006a 0024     		movs	r4, #0
 4156              	.LVL303:
 4157              	.L308:
3044:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4158              		.loc 1 3044 13 view .LVU1122
 4159              	.LBE163:
3070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4160              		.loc 1 3070 2 is_stmt 1 view .LVU1123
 4161 006c FFF7FEFF 		bl	vPortExitCritical
 4162              	.LVL304:
3072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4163              		.loc 1 3072 2 view .LVU1124
3073:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 4164              		.loc 1 3073 1 is_stmt 0 view .LVU1125
 4165 0070 2046     		mov	r0, r4
 4166 0072 38BD     		pop	{r3, r4, r5, pc}
 4167              	.LVL305:
 4168              	.L311:
 4169              	.LBB164:
3056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4170              		.loc 1 3056 12 view .LVU1126
 4171 0074 0124     		movs	r4, #1
 4172              	.LVL306:
3056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4173              		.loc 1 3056 12 view .LVU1127
 4174 0076 F9E7     		b	.L308
 4175              	.L318:
 4176              		.align	2
 4177              	.L317:
 4178 0078 00000000 		.word	.LANCHOR14
 4179 007c 00000000 		.word	.LANCHOR18
 4180              	.LBE164:
 4181              		.cfi_endproc
 4182              	.LFE616:
 4184              		.section	.text.vTaskMissedYield,"ax",%progbits
 4185              		.align	1
 4186              		.global	vTaskMissedYield
 4187              		.syntax unified
 4188              		.thumb
 4189              		.thumb_func
 4190              		.fpu softvfp
 4192              	vTaskMissedYield:
 4193              	.LFB617:
3077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xYieldPending = pdTRUE;
 4194              		.loc 1 3077 1 is_stmt 1 view -0
 4195              		.cfi_startproc
 4196              		@ args = 0, pretend = 0, frame = 0
 4197              		@ frame_needed = 0, uses_anonymous_args = 0
 4198              		@ link register save eliminated.
3078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
ARM GAS  /tmp/cclVzO8U.s 			page 181


 4199              		.loc 1 3078 2 view .LVU1129
3078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4200              		.loc 1 3078 16 is_stmt 0 view .LVU1130
 4201 0000 014B     		ldr	r3, .L320
 4202 0002 0122     		movs	r2, #1
 4203 0004 1A60     		str	r2, [r3]
3079:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 4204              		.loc 1 3079 1 view .LVU1131
 4205 0006 7047     		bx	lr
 4206              	.L321:
 4207              		.align	2
 4208              	.L320:
 4209 0008 00000000 		.word	.LANCHOR20
 4210              		.cfi_endproc
 4211              	.LFE617:
 4213              		.section	.text.xTaskGetCurrentTaskHandle,"ax",%progbits
 4214              		.align	1
 4215              		.global	xTaskGetCurrentTaskHandle
 4216              		.syntax unified
 4217              		.thumb
 4218              		.thumb_func
 4219              		.fpu softvfp
 4221              	xTaskGetCurrentTaskHandle:
 4222              	.LFB623:
3662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xReturn;
 4223              		.loc 1 3662 2 is_stmt 1 view -0
 4224              		.cfi_startproc
 4225              		@ args = 0, pretend = 0, frame = 0
 4226              		@ frame_needed = 0, uses_anonymous_args = 0
 4227              		@ link register save eliminated.
3663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4228              		.loc 1 3663 2 view .LVU1133
3668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4229              		.loc 1 3668 3 view .LVU1134
3668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4230              		.loc 1 3668 11 is_stmt 0 view .LVU1135
 4231 0000 014B     		ldr	r3, .L323
 4232 0002 1868     		ldr	r0, [r3]
 4233              	.LVL307:
3670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4234              		.loc 1 3670 3 is_stmt 1 view .LVU1136
3671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4235              		.loc 1 3671 2 is_stmt 0 view .LVU1137
 4236 0004 7047     		bx	lr
 4237              	.L324:
 4238 0006 00BF     		.align	2
 4239              	.L323:
 4240 0008 00000000 		.word	.LANCHOR10
 4241              		.cfi_endproc
 4242              	.LFE623:
 4244              		.section	.text.xTaskGetSchedulerState,"ax",%progbits
 4245              		.align	1
 4246              		.global	xTaskGetSchedulerState
 4247              		.syntax unified
 4248              		.thumb
 4249              		.thumb_func
 4250              		.fpu softvfp
ARM GAS  /tmp/cclVzO8U.s 			page 182


 4252              	xTaskGetSchedulerState:
 4253              	.LFB624:
3679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 4254              		.loc 1 3679 2 is_stmt 1 view -0
 4255              		.cfi_startproc
 4256              		@ args = 0, pretend = 0, frame = 0
 4257              		@ frame_needed = 0, uses_anonymous_args = 0
 4258              		@ link register save eliminated.
3680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4259              		.loc 1 3680 2 view .LVU1139
3682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4260              		.loc 1 3682 3 view .LVU1140
3682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4261              		.loc 1 3682 25 is_stmt 0 view .LVU1141
 4262 0000 054B     		ldr	r3, .L330
 4263 0002 1B68     		ldr	r3, [r3]
3682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4264              		.loc 1 3682 5 view .LVU1142
 4265 0004 33B1     		cbz	r3, .L327
3688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4266              		.loc 1 3688 4 is_stmt 1 view .LVU1143
3688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4267              		.loc 1 3688 29 is_stmt 0 view .LVU1144
 4268 0006 054B     		ldr	r3, .L330+4
 4269 0008 1B68     		ldr	r3, [r3]
3688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4270              		.loc 1 3688 6 view .LVU1145
 4271 000a 0BB1     		cbz	r3, .L329
3694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4272              		.loc 1 3694 13 view .LVU1146
 4273 000c 0020     		movs	r0, #0
 4274              	.LVL308:
3698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4275              		.loc 1 3698 3 is_stmt 1 view .LVU1147
3699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4276              		.loc 1 3699 2 is_stmt 0 view .LVU1148
 4277 000e 7047     		bx	lr
 4278              	.LVL309:
 4279              	.L329:
3690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4280              		.loc 1 3690 13 view .LVU1149
 4281 0010 0220     		movs	r0, #2
 4282 0012 7047     		bx	lr
 4283              	.L327:
3684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4284              		.loc 1 3684 12 view .LVU1150
 4285 0014 0120     		movs	r0, #1
 4286 0016 7047     		bx	lr
 4287              	.L331:
 4288              		.align	2
 4289              	.L330:
 4290 0018 00000000 		.word	.LANCHOR11
 4291 001c 00000000 		.word	.LANCHOR16
 4292              		.cfi_endproc
 4293              	.LFE624:
 4295              		.section	.text.vTaskPriorityInherit,"ax",%progbits
 4296              		.align	1
ARM GAS  /tmp/cclVzO8U.s 			page 183


 4297              		.global	vTaskPriorityInherit
 4298              		.syntax unified
 4299              		.thumb
 4300              		.thumb_func
 4301              		.fpu softvfp
 4303              	vTaskPriorityInherit:
 4304              	.LVL310:
 4305              	.LFB625:
3707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
 4306              		.loc 1 3707 2 is_stmt 1 view -0
 4307              		.cfi_startproc
 4308              		@ args = 0, pretend = 0, frame = 0
 4309              		@ frame_needed = 0, uses_anonymous_args = 0
3708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4310              		.loc 1 3708 2 view .LVU1152
3712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4311              		.loc 1 3712 3 view .LVU1153
3712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4312              		.loc 1 3712 5 is_stmt 0 view .LVU1154
 4313 0000 0028     		cmp	r0, #0
 4314 0002 45D0     		beq	.L339
3707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
 4315              		.loc 1 3707 2 view .LVU1155
 4316 0004 38B5     		push	{r3, r4, r5, lr}
 4317              	.LCFI37:
 4318              		.cfi_def_cfa_offset 16
 4319              		.cfi_offset 3, -16
 4320              		.cfi_offset 4, -12
 4321              		.cfi_offset 5, -8
 4322              		.cfi_offset 14, -4
 4323 0006 0446     		mov	r4, r0
3717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4324              		.loc 1 3717 4 is_stmt 1 view .LVU1156
3717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4325              		.loc 1 3717 13 is_stmt 0 view .LVU1157
 4326 0008 C26A     		ldr	r2, [r0, #44]
3717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4327              		.loc 1 3717 40 view .LVU1158
 4328 000a 2249     		ldr	r1, .L343
 4329 000c 0968     		ldr	r1, [r1]
 4330 000e C96A     		ldr	r1, [r1, #44]
3717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4331              		.loc 1 3717 6 view .LVU1159
 4332 0010 8A42     		cmp	r2, r1
 4333 0012 14D2     		bcs	.L332
3722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4334              		.loc 1 3722 5 is_stmt 1 view .LVU1160
3722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4335              		.loc 1 3722 11 is_stmt 0 view .LVU1161
 4336 0014 8169     		ldr	r1, [r0, #24]
3722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4337              		.loc 1 3722 7 view .LVU1162
 4338 0016 0029     		cmp	r1, #0
 4339 0018 05DB     		blt	.L334
3724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4340              		.loc 1 3724 6 is_stmt 1 view .LVU1163
 4341 001a 1E49     		ldr	r1, .L343
ARM GAS  /tmp/cclVzO8U.s 			page 184


 4342 001c 0968     		ldr	r1, [r1]
 4343 001e C96A     		ldr	r1, [r1, #44]
 4344 0020 C1F10701 		rsb	r1, r1, #7
 4345 0024 8161     		str	r1, [r0, #24]
 4346              	.L334:
3728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4347              		.loc 1 3728 30 view .LVU1164
3733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4348              		.loc 1 3733 5 view .LVU1165
3733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4349              		.loc 1 3733 9 is_stmt 0 view .LVU1166
 4350 0026 6069     		ldr	r0, [r4, #20]
 4351              	.LVL311:
3733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4352              		.loc 1 3733 9 view .LVU1167
 4353 0028 02EB8202 		add	r2, r2, r2, lsl #2
 4354 002c 9100     		lsls	r1, r2, #2
 4355 002e 1A4A     		ldr	r2, .L343+4
 4356 0030 0A44     		add	r2, r2, r1
3733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4357              		.loc 1 3733 108 view .LVU1168
 4358 0032 9042     		cmp	r0, r2
 4359 0034 04D0     		beq	.L342
3751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4360              		.loc 1 3751 6 is_stmt 1 view .LVU1169
3751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4361              		.loc 1 3751 38 is_stmt 0 view .LVU1170
 4362 0036 174A     		ldr	r2, .L343
 4363 0038 1268     		ldr	r2, [r2]
 4364 003a D26A     		ldr	r2, [r2, #44]
3751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4365              		.loc 1 3751 24 view .LVU1171
 4366 003c E262     		str	r2, [r4, #44]
 4367              	.L332:
3765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4368              		.loc 1 3765 2 view .LVU1172
 4369 003e 38BD     		pop	{r3, r4, r5, pc}
 4370              	.LVL312:
 4371              	.L342:
3735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4372              		.loc 1 3735 6 is_stmt 1 view .LVU1173
3735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4373              		.loc 1 3735 10 is_stmt 0 view .LVU1174
 4374 0040 251D     		adds	r5, r4, #4
 4375 0042 2846     		mov	r0, r5
 4376 0044 FFF7FEFF 		bl	uxListRemove
 4377              	.LVL313:
3735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4378              		.loc 1 3735 8 view .LVU1175
 4379 0048 90B1     		cbz	r0, .L336
 4380              	.L337:
3741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4381              		.loc 1 3741 31 is_stmt 1 view .LVU1176
3745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 4382              		.loc 1 3745 6 view .LVU1177
3745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 4383              		.loc 1 3745 38 is_stmt 0 view .LVU1178
ARM GAS  /tmp/cclVzO8U.s 			page 185


 4384 004a 124B     		ldr	r3, .L343
 4385 004c 1B68     		ldr	r3, [r3]
 4386 004e DB6A     		ldr	r3, [r3, #44]
3745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 4387              		.loc 1 3745 24 view .LVU1179
 4388 0050 E362     		str	r3, [r4, #44]
3746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4389              		.loc 1 3746 6 is_stmt 1 view .LVU1180
3746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4390              		.loc 1 3746 6 view .LVU1181
 4391 0052 0122     		movs	r2, #1
 4392 0054 9A40     		lsls	r2, r2, r3
 4393 0056 1149     		ldr	r1, .L343+8
 4394 0058 0868     		ldr	r0, [r1]
 4395 005a 0243     		orrs	r2, r2, r0
 4396 005c 0A60     		str	r2, [r1]
3746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4397              		.loc 1 3746 6 view .LVU1182
 4398 005e 03EB8303 		add	r3, r3, r3, lsl #2
 4399 0062 9A00     		lsls	r2, r3, #2
 4400 0064 2946     		mov	r1, r5
 4401 0066 0C48     		ldr	r0, .L343+4
 4402 0068 1044     		add	r0, r0, r2
 4403 006a FFF7FEFF 		bl	vListInsertEnd
 4404              	.LVL314:
3746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4405              		.loc 1 3746 36 view .LVU1183
3763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4406              		.loc 1 3763 28 view .LVU1184
3765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4407              		.loc 1 3765 2 is_stmt 0 view .LVU1185
 4408 006e E6E7     		b	.L332
 4409              	.L336:
3737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4410              		.loc 1 3737 7 is_stmt 1 view .LVU1186
 4411 0070 E36A     		ldr	r3, [r4, #44]
 4412 0072 03EB8301 		add	r1, r3, r3, lsl #2
 4413 0076 8A00     		lsls	r2, r1, #2
 4414 0078 0749     		ldr	r1, .L343+4
 4415 007a 8A58     		ldr	r2, [r1, r2]
 4416 007c 002A     		cmp	r2, #0
 4417 007e E4D1     		bne	.L337
3737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4418              		.loc 1 3737 7 discriminator 1 view .LVU1187
 4419 0080 0122     		movs	r2, #1
 4420 0082 9A40     		lsls	r2, r2, r3
 4421 0084 0549     		ldr	r1, .L343+8
 4422 0086 0B68     		ldr	r3, [r1]
 4423 0088 23EA0203 		bic	r3, r3, r2
 4424 008c 0B60     		str	r3, [r1]
 4425 008e DCE7     		b	.L337
 4426              	.LVL315:
 4427              	.L339:
 4428              	.LCFI38:
 4429              		.cfi_def_cfa_offset 0
 4430              		.cfi_restore 3
 4431              		.cfi_restore 4
ARM GAS  /tmp/cclVzO8U.s 			page 186


 4432              		.cfi_restore 5
 4433              		.cfi_restore 14
3737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4434              		.loc 1 3737 7 is_stmt 0 discriminator 1 view .LVU1188
 4435 0090 7047     		bx	lr
 4436              	.L344:
 4437 0092 00BF     		.align	2
 4438              	.L343:
 4439 0094 00000000 		.word	.LANCHOR10
 4440 0098 00000000 		.word	.LANCHOR4
 4441 009c 00000000 		.word	.LANCHOR13
 4442              		.cfi_endproc
 4443              	.LFE625:
 4445              		.section	.text.xTaskPriorityDisinherit,"ax",%progbits
 4446              		.align	1
 4447              		.global	xTaskPriorityDisinherit
 4448              		.syntax unified
 4449              		.thumb
 4450              		.thumb_func
 4451              		.fpu softvfp
 4453              	xTaskPriorityDisinherit:
 4454              	.LVL316:
 4455              	.LFB626:
3773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
 4456              		.loc 1 3773 2 is_stmt 1 view -0
 4457              		.cfi_startproc
 4458              		@ args = 0, pretend = 0, frame = 0
 4459              		@ frame_needed = 0, uses_anonymous_args = 0
3774:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
 4460              		.loc 1 3774 2 view .LVU1190
3775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4461              		.loc 1 3775 2 view .LVU1191
3777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4462              		.loc 1 3777 3 view .LVU1192
3777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4463              		.loc 1 3777 5 is_stmt 0 view .LVU1193
 4464 0000 0028     		cmp	r0, #0
 4465 0002 4CD0     		beq	.L352
3773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
 4466              		.loc 1 3773 2 view .LVU1194
 4467 0004 38B5     		push	{r3, r4, r5, lr}
 4468              	.LCFI39:
 4469              		.cfi_def_cfa_offset 16
 4470              		.cfi_offset 3, -16
 4471              		.cfi_offset 4, -12
 4472              		.cfi_offset 5, -8
 4473              		.cfi_offset 14, -4
 4474 0006 0446     		mov	r4, r0
3783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4475              		.loc 1 3783 4 is_stmt 1 view .LVU1195
 4476 0008 274A     		ldr	r2, .L360
 4477 000a 1268     		ldr	r2, [r2]
 4478 000c 8242     		cmp	r2, r0
 4479 000e 08D0     		beq	.L347
3783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4480              		.loc 1 3783 4 view .LVU1196
 4481              	.LBB165:
ARM GAS  /tmp/cclVzO8U.s 			page 187


 4482              	.LBI165:
 233:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 4483              		.loc 2 233 30 view .LVU1197
 4484              	.LBB166:
 235:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 4485              		.loc 2 235 1 view .LVU1198
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 4486              		.loc 2 237 2 view .LVU1199
 4487              		.syntax unified
 4488              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 4489 0010 4FF05003 			mov r3, #80												
 4490 0014 83F31188 		msr basepri, r3											
 4491 0018 BFF36F8F 		isb														
 4492 001c BFF34F8F 		dsb														
 4493              	
 4494              	@ 0 "" 2
 4495              	.LVL317:
 4496              		.thumb
 4497              		.syntax unified
 4498              	.L348:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 4499              		.loc 2 237 2 is_stmt 0 view .LVU1200
 4500              	.LBE166:
 4501              	.LBE165:
3783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4502              		.loc 1 3783 4 is_stmt 1 discriminator 1 view .LVU1201
3783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4503              		.loc 1 3783 4 discriminator 1 view .LVU1202
 4504 0020 FEE7     		b	.L348
 4505              	.L347:
3783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4506              		.loc 1 3783 41 discriminator 2 view .LVU1203
3785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 4507              		.loc 1 3785 4 discriminator 2 view .LVU1204
 4508 0022 826C     		ldr	r2, [r0, #72]
 4509 0024 42B9     		cbnz	r2, .L349
3785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 4510              		.loc 1 3785 4 view .LVU1205
 4511              	.LBB167:
 4512              	.LBI167:
 233:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 4513              		.loc 2 233 30 view .LVU1206
 4514              	.LBB168:
 235:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 4515              		.loc 2 235 1 view .LVU1207
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 4516              		.loc 2 237 2 view .LVU1208
 4517              		.syntax unified
 4518              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 4519 0026 4FF05003 			mov r3, #80												
 4520 002a 83F31188 		msr basepri, r3											
 4521 002e BFF36F8F 		isb														
 4522 0032 BFF34F8F 		dsb														
 4523              	
 4524              	@ 0 "" 2
 4525              	.LVL318:
 4526              		.thumb
ARM GAS  /tmp/cclVzO8U.s 			page 188


 4527              		.syntax unified
 4528              	.L350:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 4529              		.loc 2 237 2 is_stmt 0 view .LVU1209
 4530              	.LBE168:
 4531              	.LBE167:
3785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 4532              		.loc 1 3785 4 is_stmt 1 discriminator 2 view .LVU1210
3785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 4533              		.loc 1 3785 4 discriminator 2 view .LVU1211
 4534 0036 FEE7     		b	.L350
 4535              	.L349:
3785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 4536              		.loc 1 3785 40 discriminator 2 view .LVU1212
3786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4537              		.loc 1 3786 4 discriminator 2 view .LVU1213
3786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4538              		.loc 1 3786 28 is_stmt 0 discriminator 2 view .LVU1214
 4539 0038 013A     		subs	r2, r2, #1
 4540 003a 8264     		str	r2, [r0, #72]
3790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4541              		.loc 1 3790 4 is_stmt 1 discriminator 2 view .LVU1215
3790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4542              		.loc 1 3790 13 is_stmt 0 discriminator 2 view .LVU1216
 4543 003c C06A     		ldr	r0, [r0, #44]
 4544              	.LVL319:
3790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4545              		.loc 1 3790 34 discriminator 2 view .LVU1217
 4546 003e 616C     		ldr	r1, [r4, #68]
3790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4547              		.loc 1 3790 6 discriminator 2 view .LVU1218
 4548 0040 8842     		cmp	r0, r1
 4549 0042 2ED0     		beq	.L353
3793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4550              		.loc 1 3793 5 is_stmt 1 view .LVU1219
3793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4551              		.loc 1 3793 7 is_stmt 0 view .LVU1220
 4552 0044 0AB1     		cbz	r2, .L359
3775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4553              		.loc 1 3775 13 view .LVU1221
 4554 0046 0020     		movs	r0, #0
3842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4555              		.loc 1 3842 28 is_stmt 1 view .LVU1222
3845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4556              		.loc 1 3845 3 view .LVU1223
 4557              	.LVL320:
 4558              	.L345:
3846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4559              		.loc 1 3846 2 is_stmt 0 view .LVU1224
 4560 0048 38BD     		pop	{r3, r4, r5, pc}
 4561              	.LVL321:
 4562              	.L359:
3800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4563              		.loc 1 3800 6 is_stmt 1 view .LVU1225
3800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4564              		.loc 1 3800 10 is_stmt 0 view .LVU1226
 4565 004a 251D     		adds	r5, r4, #4
ARM GAS  /tmp/cclVzO8U.s 			page 189


 4566 004c 2846     		mov	r0, r5
 4567 004e FFF7FEFF 		bl	uxListRemove
 4568              	.LVL322:
3800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4569              		.loc 1 3800 8 view .LVU1227
 4570 0052 70B9     		cbnz	r0, .L351
3802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4571              		.loc 1 3802 7 is_stmt 1 view .LVU1228
 4572 0054 E26A     		ldr	r2, [r4, #44]
 4573 0056 02EB8201 		add	r1, r2, r2, lsl #2
 4574 005a 8B00     		lsls	r3, r1, #2
 4575 005c 1349     		ldr	r1, .L360+4
 4576 005e CB58     		ldr	r3, [r1, r3]
 4577 0060 3BB9     		cbnz	r3, .L351
3802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4578              		.loc 1 3802 7 discriminator 1 view .LVU1229
 4579 0062 0123     		movs	r3, #1
 4580 0064 03FA02F2 		lsl	r2, r3, r2
 4581 0068 1149     		ldr	r1, .L360+8
 4582 006a 0B68     		ldr	r3, [r1]
 4583 006c 23EA0203 		bic	r3, r3, r2
 4584 0070 0B60     		str	r3, [r1]
 4585              	.L351:
3806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4586              		.loc 1 3806 31 view .LVU1230
3811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = pxTCB->uxBasePriority;
 4587              		.loc 1 3811 67 view .LVU1231
3812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4588              		.loc 1 3812 6 view .LVU1232
3812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4589              		.loc 1 3812 31 is_stmt 0 view .LVU1233
 4590 0072 636C     		ldr	r3, [r4, #68]
3812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4591              		.loc 1 3812 24 view .LVU1234
 4592 0074 E362     		str	r3, [r4, #44]
3817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 4593              		.loc 1 3817 6 is_stmt 1 view .LVU1235
 4594 0076 C3F10702 		rsb	r2, r3, #7
 4595 007a A261     		str	r2, [r4, #24]
3818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4596              		.loc 1 3818 6 view .LVU1236
3818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4597              		.loc 1 3818 6 view .LVU1237
 4598 007c 0124     		movs	r4, #1
 4599              	.LVL323:
3818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4600              		.loc 1 3818 6 is_stmt 0 view .LVU1238
 4601 007e 04FA03F2 		lsl	r2, r4, r3
 4602 0082 0B49     		ldr	r1, .L360+8
 4603 0084 0868     		ldr	r0, [r1]
 4604 0086 0243     		orrs	r2, r2, r0
 4605 0088 0A60     		str	r2, [r1]
3818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4606              		.loc 1 3818 6 is_stmt 1 view .LVU1239
 4607 008a 03EB8303 		add	r3, r3, r3, lsl #2
 4608 008e 9A00     		lsls	r2, r3, #2
 4609 0090 2946     		mov	r1, r5
ARM GAS  /tmp/cclVzO8U.s 			page 190


 4610 0092 0648     		ldr	r0, .L360+4
 4611 0094 1044     		add	r0, r0, r2
 4612 0096 FFF7FEFF 		bl	vListInsertEnd
 4613              	.LVL324:
3818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4614              		.loc 1 3818 36 view .LVU1240
3828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4615              		.loc 1 3828 6 view .LVU1241
3828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4616              		.loc 1 3828 14 is_stmt 0 view .LVU1242
 4617 009a 2046     		mov	r0, r4
 4618 009c D4E7     		b	.L345
 4619              	.LVL325:
 4620              	.L352:
 4621              	.LCFI40:
 4622              		.cfi_def_cfa_offset 0
 4623              		.cfi_restore 3
 4624              		.cfi_restore 4
 4625              		.cfi_restore 5
 4626              		.cfi_restore 14
3775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4627              		.loc 1 3775 13 view .LVU1243
 4628 009e 0020     		movs	r0, #0
 4629              	.LVL326:
3846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4630              		.loc 1 3846 2 view .LVU1244
 4631 00a0 7047     		bx	lr
 4632              	.LVL327:
 4633              	.L353:
 4634              	.LCFI41:
 4635              		.cfi_def_cfa_offset 16
 4636              		.cfi_offset 3, -16
 4637              		.cfi_offset 4, -12
 4638              		.cfi_offset 5, -8
 4639              		.cfi_offset 14, -4
3775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4640              		.loc 1 3775 13 view .LVU1245
 4641 00a2 0020     		movs	r0, #0
 4642 00a4 D0E7     		b	.L345
 4643              	.L361:
 4644 00a6 00BF     		.align	2
 4645              	.L360:
 4646 00a8 00000000 		.word	.LANCHOR10
 4647 00ac 00000000 		.word	.LANCHOR4
 4648 00b0 00000000 		.word	.LANCHOR13
 4649              		.cfi_endproc
 4650              	.LFE626:
 4652              		.section	.text.uxTaskResetEventItemValue,"ax",%progbits
 4653              		.align	1
 4654              		.global	uxTaskResetEventItemValue
 4655              		.syntax unified
 4656              		.thumb
 4657              		.thumb_func
 4658              		.fpu softvfp
 4660              	uxTaskResetEventItemValue:
 4661              	.LFB627:
4163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t uxReturn;
ARM GAS  /tmp/cclVzO8U.s 			page 191


 4662              		.loc 1 4163 1 is_stmt 1 view -0
 4663              		.cfi_startproc
 4664              		@ args = 0, pretend = 0, frame = 0
 4665              		@ frame_needed = 0, uses_anonymous_args = 0
 4666              		@ link register save eliminated.
4164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4667              		.loc 1 4164 1 view .LVU1247
4166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4668              		.loc 1 4166 2 view .LVU1248
4166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4669              		.loc 1 4166 13 is_stmt 0 view .LVU1249
 4670 0000 044A     		ldr	r2, .L363
 4671 0002 1368     		ldr	r3, [r2]
4166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4672              		.loc 1 4166 11 view .LVU1250
 4673 0004 9869     		ldr	r0, [r3, #24]
 4674              	.LVL328:
4170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4675              		.loc 1 4170 2 is_stmt 1 view .LVU1251
 4676 0006 1368     		ldr	r3, [r2]
 4677 0008 DB6A     		ldr	r3, [r3, #44]
 4678 000a 1268     		ldr	r2, [r2]
 4679 000c C3F10703 		rsb	r3, r3, #7
 4680 0010 9361     		str	r3, [r2, #24]
4172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4681              		.loc 1 4172 2 view .LVU1252
4173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 4682              		.loc 1 4173 1 is_stmt 0 view .LVU1253
 4683 0012 7047     		bx	lr
 4684              	.L364:
 4685              		.align	2
 4686              	.L363:
 4687 0014 00000000 		.word	.LANCHOR10
 4688              		.cfi_endproc
 4689              	.LFE627:
 4691              		.section	.text.pvTaskIncrementMutexHeldCount,"ax",%progbits
 4692              		.align	1
 4693              		.global	pvTaskIncrementMutexHeldCount
 4694              		.syntax unified
 4695              		.thumb
 4696              		.thumb_func
 4697              		.fpu softvfp
 4699              	pvTaskIncrementMutexHeldCount:
 4700              	.LFB628:
4179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xSemaphoreCreateMutex() is called before any tasks have been created
 4701              		.loc 1 4179 2 is_stmt 1 view -0
 4702              		.cfi_startproc
 4703              		@ args = 0, pretend = 0, frame = 0
 4704              		@ frame_needed = 0, uses_anonymous_args = 0
 4705              		@ link register save eliminated.
4182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4706              		.loc 1 4182 3 view .LVU1255
4182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4707              		.loc 1 4182 20 is_stmt 0 view .LVU1256
 4708 0000 054B     		ldr	r3, .L367
 4709 0002 1B68     		ldr	r3, [r3]
4182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
ARM GAS  /tmp/cclVzO8U.s 			page 192


 4710              		.loc 1 4182 5 view .LVU1257
 4711 0004 23B1     		cbz	r3, .L366
4184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4712              		.loc 1 4184 4 is_stmt 1 view .LVU1258
4184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4713              		.loc 1 4184 18 is_stmt 0 view .LVU1259
 4714 0006 044B     		ldr	r3, .L367
 4715 0008 1A68     		ldr	r2, [r3]
 4716 000a 936C     		ldr	r3, [r2, #72]
4184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4717              		.loc 1 4184 35 view .LVU1260
 4718 000c 0133     		adds	r3, r3, #1
 4719 000e 9364     		str	r3, [r2, #72]
 4720              	.L366:
4187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4721              		.loc 1 4187 3 is_stmt 1 view .LVU1261
4187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4722              		.loc 1 4187 10 is_stmt 0 view .LVU1262
 4723 0010 014B     		ldr	r3, .L367
 4724 0012 1868     		ldr	r0, [r3]
4188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4725              		.loc 1 4188 2 view .LVU1263
 4726 0014 7047     		bx	lr
 4727              	.L368:
 4728 0016 00BF     		.align	2
 4729              	.L367:
 4730 0018 00000000 		.word	.LANCHOR10
 4731              		.cfi_endproc
 4732              	.LFE628:
 4734              		.section	.text.ulTaskNotifyTake,"ax",%progbits
 4735              		.align	1
 4736              		.global	ulTaskNotifyTake
 4737              		.syntax unified
 4738              		.thumb
 4739              		.thumb_func
 4740              		.fpu softvfp
 4742              	ulTaskNotifyTake:
 4743              	.LVL329:
 4744              	.LFB629:
4196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulReturn;
 4745              		.loc 1 4196 2 is_stmt 1 view -0
 4746              		.cfi_startproc
 4747              		@ args = 0, pretend = 0, frame = 0
 4748              		@ frame_needed = 0, uses_anonymous_args = 0
4196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulReturn;
 4749              		.loc 1 4196 2 is_stmt 0 view .LVU1265
 4750 0000 38B5     		push	{r3, r4, r5, lr}
 4751              	.LCFI42:
 4752              		.cfi_def_cfa_offset 16
 4753              		.cfi_offset 3, -16
 4754              		.cfi_offset 4, -12
 4755              		.cfi_offset 5, -8
 4756              		.cfi_offset 14, -4
 4757 0002 0546     		mov	r5, r0
 4758 0004 0C46     		mov	r4, r1
4197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4759              		.loc 1 4197 2 is_stmt 1 view .LVU1266
ARM GAS  /tmp/cclVzO8U.s 			page 193


4199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4760              		.loc 1 4199 3 view .LVU1267
 4761 0006 FFF7FEFF 		bl	vPortEnterCritical
 4762              	.LVL330:
4202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4763              		.loc 1 4202 4 view .LVU1268
4202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4764              		.loc 1 4202 20 is_stmt 0 view .LVU1269
 4765 000a 194B     		ldr	r3, .L375
 4766 000c 1B68     		ldr	r3, [r3]
 4767 000e DB6C     		ldr	r3, [r3, #76]
4202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4768              		.loc 1 4202 6 view .LVU1270
 4769 0010 2BB9     		cbnz	r3, .L370
4205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4770              		.loc 1 4205 5 is_stmt 1 view .LVU1271
4205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4771              		.loc 1 4205 17 is_stmt 0 view .LVU1272
 4772 0012 174B     		ldr	r3, .L375
 4773 0014 1B68     		ldr	r3, [r3]
4205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4774              		.loc 1 4205 33 view .LVU1273
 4775 0016 0122     		movs	r2, #1
 4776 0018 83F85020 		strb	r2, [r3, #80]
4207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4777              		.loc 1 4207 5 is_stmt 1 view .LVU1274
4207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4778              		.loc 1 4207 7 is_stmt 0 view .LVU1275
 4779 001c ACB9     		cbnz	r4, .L374
 4780              	.L370:
4225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4781              		.loc 1 4225 29 is_stmt 1 view .LVU1276
4228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4782              		.loc 1 4228 3 view .LVU1277
 4783 001e FFF7FEFF 		bl	vPortExitCritical
 4784              	.LVL331:
4230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4785              		.loc 1 4230 3 view .LVU1278
 4786 0022 FFF7FEFF 		bl	vPortEnterCritical
 4787              	.LVL332:
4232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulReturn = pxCurrentTCB->ulNotifiedValue;
 4788              		.loc 1 4232 27 view .LVU1279
4233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4789              		.loc 1 4233 4 view .LVU1280
4233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4790              		.loc 1 4233 27 is_stmt 0 view .LVU1281
 4791 0026 124B     		ldr	r3, .L375
 4792 0028 1B68     		ldr	r3, [r3]
4233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4793              		.loc 1 4233 13 view .LVU1282
 4794 002a DC6C     		ldr	r4, [r3, #76]
 4795              	.LVL333:
4235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4796              		.loc 1 4235 4 is_stmt 1 view .LVU1283
4235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4797              		.loc 1 4235 6 is_stmt 0 view .LVU1284
 4798 002c 24B1     		cbz	r4, .L371
ARM GAS  /tmp/cclVzO8U.s 			page 194


4237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4799              		.loc 1 4237 5 is_stmt 1 view .LVU1285
4237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4800              		.loc 1 4237 7 is_stmt 0 view .LVU1286
 4801 002e CDB1     		cbz	r5, .L372
4239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4802              		.loc 1 4239 6 is_stmt 1 view .LVU1287
4239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4803              		.loc 1 4239 18 is_stmt 0 view .LVU1288
 4804 0030 0F4B     		ldr	r3, .L375
 4805 0032 1B68     		ldr	r3, [r3]
4239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4806              		.loc 1 4239 36 view .LVU1289
 4807 0034 0022     		movs	r2, #0
 4808 0036 DA64     		str	r2, [r3, #76]
 4809              	.L371:
4248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4810              		.loc 1 4248 29 is_stmt 1 view .LVU1290
4251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4811              		.loc 1 4251 4 view .LVU1291
4251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4812              		.loc 1 4251 16 is_stmt 0 view .LVU1292
 4813 0038 0D4B     		ldr	r3, .L375
 4814 003a 1B68     		ldr	r3, [r3]
4251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4815              		.loc 1 4251 32 view .LVU1293
 4816 003c 0022     		movs	r2, #0
 4817 003e 83F85020 		strb	r2, [r3, #80]
4253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4818              		.loc 1 4253 3 is_stmt 1 view .LVU1294
 4819 0042 FFF7FEFF 		bl	vPortExitCritical
 4820              	.LVL334:
4255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4821              		.loc 1 4255 3 view .LVU1295
4256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4822              		.loc 1 4256 2 is_stmt 0 view .LVU1296
 4823 0046 2046     		mov	r0, r4
 4824 0048 38BD     		pop	{r3, r4, r5, pc}
 4825              	.LVL335:
 4826              	.L374:
4209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_NOTIFY_TAKE_BLOCK();
 4827              		.loc 1 4209 6 is_stmt 1 view .LVU1297
 4828 004a 1146     		mov	r1, r2
 4829 004c 2046     		mov	r0, r4
 4830 004e FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 4831              	.LVL336:
4210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4832              		.loc 1 4210 35 view .LVU1298
4216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4833              		.loc 1 4216 6 view .LVU1299
 4834 0052 084B     		ldr	r3, .L375+4
 4835 0054 4FF08052 		mov	r2, #268435456
 4836 0058 1A60     		str	r2, [r3]
4216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4837              		.loc 1 4216 6 view .LVU1300
 4838              		.syntax unified
 4839              	@ 4216 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
ARM GAS  /tmp/cclVzO8U.s 			page 195


 4840 005a BFF34F8F 		dsb
 4841              	@ 0 "" 2
4216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4842              		.loc 1 4216 6 view .LVU1301
 4843              	@ 4216 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 4844 005e BFF36F8F 		isb
 4845              	@ 0 "" 2
4216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4846              		.loc 1 4216 28 view .LVU1302
 4847              		.thumb
 4848              		.syntax unified
 4849 0062 DCE7     		b	.L370
 4850              	.LVL337:
 4851              	.L372:
4243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4852              		.loc 1 4243 6 view .LVU1303
4243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4853              		.loc 1 4243 18 is_stmt 0 view .LVU1304
 4854 0064 024B     		ldr	r3, .L375
 4855 0066 1B68     		ldr	r3, [r3]
4243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4856              		.loc 1 4243 47 view .LVU1305
 4857 0068 621E     		subs	r2, r4, #1
4243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4858              		.loc 1 4243 36 view .LVU1306
 4859 006a DA64     		str	r2, [r3, #76]
 4860 006c E4E7     		b	.L371
 4861              	.L376:
 4862 006e 00BF     		.align	2
 4863              	.L375:
 4864 0070 00000000 		.word	.LANCHOR10
 4865 0074 04ED00E0 		.word	-536810236
 4866              		.cfi_endproc
 4867              	.LFE629:
 4869              		.section	.text.xTaskNotifyWait,"ax",%progbits
 4870              		.align	1
 4871              		.global	xTaskNotifyWait
 4872              		.syntax unified
 4873              		.thumb
 4874              		.thumb_func
 4875              		.fpu softvfp
 4877              	xTaskNotifyWait:
 4878              	.LVL338:
 4879              	.LFB630:
4264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 4880              		.loc 1 4264 2 is_stmt 1 view -0
 4881              		.cfi_startproc
 4882              		@ args = 0, pretend = 0, frame = 0
 4883              		@ frame_needed = 0, uses_anonymous_args = 0
4264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 4884              		.loc 1 4264 2 is_stmt 0 view .LVU1308
 4885 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 4886              	.LCFI43:
 4887              		.cfi_def_cfa_offset 24
 4888              		.cfi_offset 3, -24
 4889              		.cfi_offset 4, -20
 4890              		.cfi_offset 5, -16
ARM GAS  /tmp/cclVzO8U.s 			page 196


 4891              		.cfi_offset 6, -12
 4892              		.cfi_offset 7, -8
 4893              		.cfi_offset 14, -4
 4894 0002 0746     		mov	r7, r0
 4895 0004 0D46     		mov	r5, r1
 4896 0006 1446     		mov	r4, r2
 4897 0008 1E46     		mov	r6, r3
4265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4898              		.loc 1 4265 2 is_stmt 1 view .LVU1309
4267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4899              		.loc 1 4267 3 view .LVU1310
 4900 000a FFF7FEFF 		bl	vPortEnterCritical
 4901              	.LVL339:
4270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4902              		.loc 1 4270 4 view .LVU1311
4270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4903              		.loc 1 4270 20 is_stmt 0 view .LVU1312
 4904 000e 204B     		ldr	r3, .L384
 4905 0010 1B68     		ldr	r3, [r3]
 4906 0012 93F85030 		ldrb	r3, [r3, #80]	@ zero_extendqisi2
 4907 0016 DBB2     		uxtb	r3, r3
4270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4908              		.loc 1 4270 6 view .LVU1313
 4909 0018 022B     		cmp	r3, #2
 4910 001a 0AD0     		beq	.L378
4275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4911              		.loc 1 4275 5 is_stmt 1 view .LVU1314
4275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4912              		.loc 1 4275 35 is_stmt 0 view .LVU1315
 4913 001c 1C4B     		ldr	r3, .L384
 4914 001e 1A68     		ldr	r2, [r3]
 4915 0020 D06C     		ldr	r0, [r2, #76]
 4916 0022 20EA0700 		bic	r0, r0, r7
 4917 0026 D064     		str	r0, [r2, #76]
4278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4918              		.loc 1 4278 5 is_stmt 1 view .LVU1316
4278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4919              		.loc 1 4278 17 is_stmt 0 view .LVU1317
 4920 0028 1B68     		ldr	r3, [r3]
4278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4921              		.loc 1 4278 33 view .LVU1318
 4922 002a 0122     		movs	r2, #1
 4923 002c 83F85020 		strb	r2, [r3, #80]
4280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4924              		.loc 1 4280 5 is_stmt 1 view .LVU1319
4280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4925              		.loc 1 4280 7 is_stmt 0 view .LVU1320
 4926 0030 FEB9     		cbnz	r6, .L383
 4927              	.L378:
4298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4928              		.loc 1 4298 29 is_stmt 1 view .LVU1321
4301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4929              		.loc 1 4301 3 view .LVU1322
 4930 0032 FFF7FEFF 		bl	vPortExitCritical
 4931              	.LVL340:
4303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4932              		.loc 1 4303 3 view .LVU1323
ARM GAS  /tmp/cclVzO8U.s 			page 197


 4933 0036 FFF7FEFF 		bl	vPortEnterCritical
 4934              	.LVL341:
4305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4935              		.loc 1 4305 27 view .LVU1324
4307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4936              		.loc 1 4307 4 view .LVU1325
4307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4937              		.loc 1 4307 6 is_stmt 0 view .LVU1326
 4938 003a 1CB1     		cbz	r4, .L379
4311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4939              		.loc 1 4311 5 is_stmt 1 view .LVU1327
4311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4940              		.loc 1 4311 41 is_stmt 0 view .LVU1328
 4941 003c 144B     		ldr	r3, .L384
 4942 003e 1B68     		ldr	r3, [r3]
 4943 0040 DB6C     		ldr	r3, [r3, #76]
4311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4944              		.loc 1 4311 27 view .LVU1329
 4945 0042 2360     		str	r3, [r4]
 4946              	.L379:
4318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4947              		.loc 1 4318 4 is_stmt 1 view .LVU1330
4318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4948              		.loc 1 4318 20 is_stmt 0 view .LVU1331
 4949 0044 124B     		ldr	r3, .L384
 4950 0046 1B68     		ldr	r3, [r3]
 4951 0048 93F85030 		ldrb	r3, [r3, #80]	@ zero_extendqisi2
 4952 004c DBB2     		uxtb	r3, r3
4318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4953              		.loc 1 4318 6 view .LVU1332
 4954 004e 012B     		cmp	r3, #1
 4955 0050 1CD0     		beq	.L381
4327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
 4956              		.loc 1 4327 5 is_stmt 1 view .LVU1333
4327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
 4957              		.loc 1 4327 35 is_stmt 0 view .LVU1334
 4958 0052 0F4B     		ldr	r3, .L384
 4959 0054 1B68     		ldr	r3, [r3]
 4960 0056 D96C     		ldr	r1, [r3, #76]
 4961 0058 21EA0501 		bic	r1, r1, r5
 4962 005c D964     		str	r1, [r3, #76]
4328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4963              		.loc 1 4328 5 is_stmt 1 view .LVU1335
 4964              	.LVL342:
4328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4965              		.loc 1 4328 13 is_stmt 0 view .LVU1336
 4966 005e 0124     		movs	r4, #1
 4967              	.LVL343:
 4968              	.L380:
4331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4969              		.loc 1 4331 4 is_stmt 1 view .LVU1337
4331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4970              		.loc 1 4331 16 is_stmt 0 view .LVU1338
 4971 0060 0B4B     		ldr	r3, .L384
 4972 0062 1B68     		ldr	r3, [r3]
4331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4973              		.loc 1 4331 32 view .LVU1339
ARM GAS  /tmp/cclVzO8U.s 			page 198


 4974 0064 0022     		movs	r2, #0
 4975 0066 83F85020 		strb	r2, [r3, #80]
4333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4976              		.loc 1 4333 3 is_stmt 1 view .LVU1340
 4977 006a FFF7FEFF 		bl	vPortExitCritical
 4978              	.LVL344:
4335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4979              		.loc 1 4335 3 view .LVU1341
4336:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4980              		.loc 1 4336 2 is_stmt 0 view .LVU1342
 4981 006e 2046     		mov	r0, r4
 4982 0070 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4983              	.LVL345:
 4984              	.L383:
4282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_NOTIFY_WAIT_BLOCK();
 4985              		.loc 1 4282 6 is_stmt 1 view .LVU1343
 4986 0072 1146     		mov	r1, r2
 4987 0074 3046     		mov	r0, r6
 4988 0076 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 4989              	.LVL346:
4283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4990              		.loc 1 4283 35 view .LVU1344
4289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4991              		.loc 1 4289 6 view .LVU1345
 4992 007a 064B     		ldr	r3, .L384+4
 4993 007c 4FF08052 		mov	r2, #268435456
 4994 0080 1A60     		str	r2, [r3]
4289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4995              		.loc 1 4289 6 view .LVU1346
 4996              		.syntax unified
 4997              	@ 4289 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 4998 0082 BFF34F8F 		dsb
 4999              	@ 0 "" 2
4289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5000              		.loc 1 4289 6 view .LVU1347
 5001              	@ 4289 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 5002 0086 BFF36F8F 		isb
 5003              	@ 0 "" 2
4289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5004              		.loc 1 4289 28 view .LVU1348
 5005              		.thumb
 5006              		.syntax unified
 5007 008a D2E7     		b	.L378
 5008              	.L381:
4321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5009              		.loc 1 4321 13 is_stmt 0 view .LVU1349
 5010 008c 0024     		movs	r4, #0
 5011              	.LVL347:
4321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5012              		.loc 1 4321 13 view .LVU1350
 5013 008e E7E7     		b	.L380
 5014              	.L385:
 5015              		.align	2
 5016              	.L384:
 5017 0090 00000000 		.word	.LANCHOR10
 5018 0094 04ED00E0 		.word	-536810236
 5019              		.cfi_endproc
ARM GAS  /tmp/cclVzO8U.s 			page 199


 5020              	.LFE630:
 5022              		.section	.text.xTaskGenericNotify,"ax",%progbits
 5023              		.align	1
 5024              		.global	xTaskGenericNotify
 5025              		.syntax unified
 5026              		.thumb
 5027              		.thumb_func
 5028              		.fpu softvfp
 5030              	xTaskGenericNotify:
 5031              	.LVL348:
 5032              	.LFB631:
4344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 5033              		.loc 1 4344 2 is_stmt 1 view -0
 5034              		.cfi_startproc
 5035              		@ args = 0, pretend = 0, frame = 0
 5036              		@ frame_needed = 0, uses_anonymous_args = 0
4344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 5037              		.loc 1 4344 2 is_stmt 0 view .LVU1352
 5038 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 5039              	.LCFI44:
 5040              		.cfi_def_cfa_offset 24
 5041              		.cfi_offset 3, -24
 5042              		.cfi_offset 4, -20
 5043              		.cfi_offset 5, -16
 5044              		.cfi_offset 6, -12
 5045              		.cfi_offset 7, -8
 5046              		.cfi_offset 14, -4
4345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
 5047              		.loc 1 4345 2 is_stmt 1 view .LVU1353
4346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 5048              		.loc 1 4346 2 view .LVU1354
 5049              	.LVL349:
4347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5050              		.loc 1 4347 2 view .LVU1355
4349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
 5051              		.loc 1 4349 3 view .LVU1356
 5052 0002 A8B1     		cbz	r0, .L402
 5053 0004 0446     		mov	r4, r0
 5054 0006 1F46     		mov	r7, r3
 5055 0008 1546     		mov	r5, r2
 5056 000a 0E46     		mov	r6, r1
4349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
 5057              		.loc 1 4349 32 discriminator 2 view .LVU1357
4350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5058              		.loc 1 4350 3 discriminator 2 view .LVU1358
 5059              	.LVL350:
4352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5060              		.loc 1 4352 3 discriminator 2 view .LVU1359
 5061 000c FFF7FEFF 		bl	vPortEnterCritical
 5062              	.LVL351:
4354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5063              		.loc 1 4354 4 discriminator 2 view .LVU1360
4354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5064              		.loc 1 4354 6 is_stmt 0 discriminator 2 view .LVU1361
 5065 0010 0FB1     		cbz	r7, .L389
4356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5066              		.loc 1 4356 5 is_stmt 1 view .LVU1362
ARM GAS  /tmp/cclVzO8U.s 			page 200


4356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5067              		.loc 1 4356 42 is_stmt 0 view .LVU1363
 5068 0012 E36C     		ldr	r3, [r4, #76]
4356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5069              		.loc 1 4356 35 view .LVU1364
 5070 0014 3B60     		str	r3, [r7]
 5071              	.L389:
4359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5072              		.loc 1 4359 4 is_stmt 1 view .LVU1365
4359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5073              		.loc 1 4359 26 is_stmt 0 view .LVU1366
 5074 0016 94F85030 		ldrb	r3, [r4, #80]	@ zero_extendqisi2
 5075 001a DBB2     		uxtb	r3, r3
 5076              	.LVL352:
4361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5077              		.loc 1 4361 4 is_stmt 1 view .LVU1367
4361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5078              		.loc 1 4361 25 is_stmt 0 view .LVU1368
 5079 001c 0222     		movs	r2, #2
 5080 001e 84F85020 		strb	r2, [r4, #80]
4363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5081              		.loc 1 4363 4 is_stmt 1 view .LVU1369
 5082 0022 6A1E     		subs	r2, r5, #1
 5083 0024 032A     		cmp	r2, #3
 5084 0026 23D8     		bhi	.L399
 5085 0028 DFE802F0 		tbb	[pc, r2]
 5086              	.L392:
 5087 002c 0B       		.byte	(.L395-.L392)/2
 5088 002d 15       		.byte	(.L394-.L392)/2
 5089 002e 1A       		.byte	(.L393-.L392)/2
 5090 002f 1D       		.byte	(.L391-.L392)/2
 5091              	.LVL353:
 5092              		.p2align 1
 5093              	.L402:
4349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
 5094              		.loc 1 4349 3 view .LVU1370
 5095              	.LBB169:
 5096              	.LBI169:
 233:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 5097              		.loc 2 233 30 view .LVU1371
 5098              	.LBB170:
 235:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 5099              		.loc 2 235 1 view .LVU1372
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 5100              		.loc 2 237 2 view .LVU1373
 5101              		.syntax unified
 5102              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 5103 0030 4FF05003 			mov r3, #80												
 5104 0034 83F31188 		msr basepri, r3											
 5105 0038 BFF36F8F 		isb														
 5106 003c BFF34F8F 		dsb														
 5107              	
 5108              	@ 0 "" 2
 5109              	.LVL354:
 5110              		.thumb
 5111              		.syntax unified
 5112              	.L388:
ARM GAS  /tmp/cclVzO8U.s 			page 201


 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 5113              		.loc 2 237 2 is_stmt 0 view .LVU1374
 5114              	.LBE170:
 5115              	.LBE169:
4349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
 5116              		.loc 1 4349 3 is_stmt 1 discriminator 1 view .LVU1375
4349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
 5117              		.loc 1 4349 3 discriminator 1 view .LVU1376
 5118 0040 FEE7     		b	.L388
 5119              	.LVL355:
 5120              	.L395:
4366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5121              		.loc 1 4366 6 view .LVU1377
4366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5122              		.loc 1 4366 29 is_stmt 0 view .LVU1378
 5123 0042 E26C     		ldr	r2, [r4, #76]
 5124 0044 1643     		orrs	r6, r6, r2
 5125              	.LVL356:
4366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5126              		.loc 1 4366 29 view .LVU1379
 5127 0046 E664     		str	r6, [r4, #76]
4367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5128              		.loc 1 4367 6 is_stmt 1 view .LVU1380
4346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 5129              		.loc 1 4346 13 is_stmt 0 view .LVU1381
 5130 0048 0125     		movs	r5, #1
 5131              	.L390:
 5132              	.LVL357:
4395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5133              		.loc 1 4395 22 is_stmt 1 view .LVU1382
4399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5134              		.loc 1 4399 4 view .LVU1383
4399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5135              		.loc 1 4399 6 is_stmt 0 view .LVU1384
 5136 004a 012B     		cmp	r3, #1
 5137 004c 14D0     		beq	.L403
 5138              	.LVL358:
 5139              	.L396:
4436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5140              		.loc 1 4436 29 is_stmt 1 view .LVU1385
4439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5141              		.loc 1 4439 3 view .LVU1386
 5142 004e FFF7FEFF 		bl	vPortExitCritical
 5143              	.LVL359:
4441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5144              		.loc 1 4441 3 view .LVU1387
4442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5145              		.loc 1 4442 2 is_stmt 0 view .LVU1388
 5146 0052 2846     		mov	r0, r5
 5147 0054 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5148              	.LVL360:
 5149              	.L394:
4370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5150              		.loc 1 4370 6 is_stmt 1 view .LVU1389
4370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5151              		.loc 1 4370 13 is_stmt 0 view .LVU1390
 5152 0056 E26C     		ldr	r2, [r4, #76]
ARM GAS  /tmp/cclVzO8U.s 			page 202


4370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5153              		.loc 1 4370 32 view .LVU1391
 5154 0058 0132     		adds	r2, r2, #1
 5155 005a E264     		str	r2, [r4, #76]
4371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5156              		.loc 1 4371 6 is_stmt 1 view .LVU1392
4346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 5157              		.loc 1 4346 13 is_stmt 0 view .LVU1393
 5158 005c 0125     		movs	r5, #1
4371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5159              		.loc 1 4371 6 view .LVU1394
 5160 005e F4E7     		b	.L390
 5161              	.L393:
4374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5162              		.loc 1 4374 6 is_stmt 1 view .LVU1395
4374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5163              		.loc 1 4374 29 is_stmt 0 view .LVU1396
 5164 0060 E664     		str	r6, [r4, #76]
4375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5165              		.loc 1 4375 6 is_stmt 1 view .LVU1397
4346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 5166              		.loc 1 4346 13 is_stmt 0 view .LVU1398
 5167 0062 0125     		movs	r5, #1
4375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5168              		.loc 1 4375 6 view .LVU1399
 5169 0064 F1E7     		b	.L390
 5170              	.L391:
4378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5171              		.loc 1 4378 6 is_stmt 1 view .LVU1400
4378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5172              		.loc 1 4378 8 is_stmt 0 view .LVU1401
 5173 0066 022B     		cmp	r3, #2
 5174 0068 04D0     		beq	.L400
4380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5175              		.loc 1 4380 7 is_stmt 1 view .LVU1402
4380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5176              		.loc 1 4380 30 is_stmt 0 view .LVU1403
 5177 006a E664     		str	r6, [r4, #76]
4346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 5178              		.loc 1 4346 13 view .LVU1404
 5179 006c 0125     		movs	r5, #1
 5180 006e ECE7     		b	.L390
 5181              	.L399:
4346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 5182              		.loc 1 4346 13 view .LVU1405
 5183 0070 0125     		movs	r5, #1
 5184 0072 EAE7     		b	.L390
 5185              	.L400:
4385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5186              		.loc 1 4385 15 view .LVU1406
 5187 0074 0025     		movs	r5, #0
 5188 0076 E8E7     		b	.L390
 5189              	.LVL361:
 5190              	.L403:
4401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
 5191              		.loc 1 4401 5 is_stmt 1 view .LVU1407
4401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
ARM GAS  /tmp/cclVzO8U.s 			page 203


 5192              		.loc 1 4401 14 is_stmt 0 view .LVU1408
 5193 0078 261D     		adds	r6, r4, #4
 5194 007a 3046     		mov	r0, r6
 5195 007c FFF7FEFF 		bl	uxListRemove
 5196              	.LVL362:
4402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5197              		.loc 1 4402 5 is_stmt 1 view .LVU1409
4402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5198              		.loc 1 4402 5 view .LVU1410
 5199 0080 E36A     		ldr	r3, [r4, #44]
 5200 0082 0122     		movs	r2, #1
 5201 0084 9A40     		lsls	r2, r2, r3
 5202 0086 1349     		ldr	r1, .L404
 5203 0088 0868     		ldr	r0, [r1]
 5204 008a 0243     		orrs	r2, r2, r0
 5205 008c 0A60     		str	r2, [r1]
4402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5206              		.loc 1 4402 5 view .LVU1411
 5207 008e 03EB8303 		add	r3, r3, r3, lsl #2
 5208 0092 9A00     		lsls	r2, r3, #2
 5209 0094 3146     		mov	r1, r6
 5210 0096 1048     		ldr	r0, .L404+4
 5211 0098 1044     		add	r0, r0, r2
 5212 009a FFF7FEFF 		bl	vListInsertEnd
 5213              	.LVL363:
4402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5214              		.loc 1 4402 35 view .LVU1412
4405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5215              		.loc 1 4405 5 view .LVU1413
 5216 009e A36A     		ldr	r3, [r4, #40]
 5217 00a0 43B1     		cbz	r3, .L397
4405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5218              		.loc 1 4405 5 view .LVU1414
 5219              	.LBB171:
 5220              	.LBI171:
 233:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 5221              		.loc 2 233 30 view .LVU1415
 5222              	.LBB172:
 235:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 5223              		.loc 2 235 1 view .LVU1416
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 5224              		.loc 2 237 2 view .LVU1417
 5225              		.syntax unified
 5226              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 5227 00a2 4FF05003 			mov r3, #80												
 5228 00a6 83F31188 		msr basepri, r3											
 5229 00aa BFF36F8F 		isb														
 5230 00ae BFF34F8F 		dsb														
 5231              	
 5232              	@ 0 "" 2
 5233              	.LVL364:
 5234              		.thumb
 5235              		.syntax unified
 5236              	.L398:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 5237              		.loc 2 237 2 is_stmt 0 view .LVU1418
 5238              	.LBE172:
ARM GAS  /tmp/cclVzO8U.s 			page 204


 5239              	.LBE171:
4405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5240              		.loc 1 4405 5 is_stmt 1 discriminator 2 view .LVU1419
4405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5241              		.loc 1 4405 5 discriminator 2 view .LVU1420
 5242 00b2 FEE7     		b	.L398
 5243              	.L397:
4405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5244              		.loc 1 4405 82 discriminator 2 view .LVU1421
4423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5245              		.loc 1 4423 5 discriminator 2 view .LVU1422
4423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5246              		.loc 1 4423 14 is_stmt 0 discriminator 2 view .LVU1423
 5247 00b4 E26A     		ldr	r2, [r4, #44]
4423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5248              		.loc 1 4423 41 discriminator 2 view .LVU1424
 5249 00b6 094B     		ldr	r3, .L404+8
 5250 00b8 1B68     		ldr	r3, [r3]
 5251 00ba DB6A     		ldr	r3, [r3, #44]
4423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5252              		.loc 1 4423 7 discriminator 2 view .LVU1425
 5253 00bc 9A42     		cmp	r2, r3
 5254 00be C6D9     		bls	.L396
4427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5255              		.loc 1 4427 6 is_stmt 1 view .LVU1426
 5256 00c0 074B     		ldr	r3, .L404+12
 5257 00c2 4FF08052 		mov	r2, #268435456
 5258 00c6 1A60     		str	r2, [r3]
4427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5259              		.loc 1 4427 6 view .LVU1427
 5260              		.syntax unified
 5261              	@ 4427 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 5262 00c8 BFF34F8F 		dsb
 5263              	@ 0 "" 2
4427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5264              		.loc 1 4427 6 view .LVU1428
 5265              	@ 4427 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 5266 00cc BFF36F8F 		isb
 5267              	@ 0 "" 2
4427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5268              		.loc 1 4427 37 view .LVU1429
 5269              		.thumb
 5270              		.syntax unified
 5271 00d0 BDE7     		b	.L396
 5272              	.L405:
 5273 00d2 00BF     		.align	2
 5274              	.L404:
 5275 00d4 00000000 		.word	.LANCHOR13
 5276 00d8 00000000 		.word	.LANCHOR4
 5277 00dc 00000000 		.word	.LANCHOR10
 5278 00e0 04ED00E0 		.word	-536810236
 5279              		.cfi_endproc
 5280              	.LFE631:
 5282              		.section	.text.xTaskGenericNotifyFromISR,"ax",%progbits
 5283              		.align	1
 5284              		.global	xTaskGenericNotifyFromISR
 5285              		.syntax unified
ARM GAS  /tmp/cclVzO8U.s 			page 205


 5286              		.thumb
 5287              		.thumb_func
 5288              		.fpu softvfp
 5290              	xTaskGenericNotifyFromISR:
 5291              	.LVL365:
 5292              	.LFB632:
4450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 5293              		.loc 1 4450 2 view -0
 5294              		.cfi_startproc
 5295              		@ args = 4, pretend = 0, frame = 0
 5296              		@ frame_needed = 0, uses_anonymous_args = 0
4450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 5297              		.loc 1 4450 2 is_stmt 0 view .LVU1431
 5298 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 5299              	.LCFI45:
 5300              		.cfi_def_cfa_offset 32
 5301              		.cfi_offset 3, -32
 5302              		.cfi_offset 4, -28
 5303              		.cfi_offset 5, -24
 5304              		.cfi_offset 6, -20
 5305              		.cfi_offset 7, -16
 5306              		.cfi_offset 8, -12
 5307              		.cfi_offset 9, -8
 5308              		.cfi_offset 14, -4
 5309 0004 089E     		ldr	r6, [sp, #32]
4451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 5310              		.loc 1 4451 2 is_stmt 1 view .LVU1432
4452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
 5311              		.loc 1 4452 2 view .LVU1433
4453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 5312              		.loc 1 4453 2 view .LVU1434
 5313              	.LVL366:
4454:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5314              		.loc 1 4454 2 view .LVU1435
4456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5315              		.loc 1 4456 3 view .LVU1436
 5316 0006 10B3     		cbz	r0, .L425
 5317 0008 0446     		mov	r4, r0
 5318 000a 9946     		mov	r9, r3
 5319 000c 1546     		mov	r5, r2
 5320 000e 0F46     		mov	r7, r1
4456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5321              		.loc 1 4456 32 discriminator 2 view .LVU1437
4474:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5322              		.loc 1 4474 3 discriminator 2 view .LVU1438
 5323 0010 FFF7FEFF 		bl	vPortValidateInterruptPriority
 5324              	.LVL367:
4476:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5325              		.loc 1 4476 3 discriminator 2 view .LVU1439
4478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5326              		.loc 1 4478 3 discriminator 2 view .LVU1440
 5327              	.LBB173:
 5328              	.LBI173:
 249:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 5329              		.loc 2 249 34 discriminator 2 view .LVU1441
 5330              	.LBB174:
 251:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
ARM GAS  /tmp/cclVzO8U.s 			page 206


 5331              		.loc 2 251 1 discriminator 2 view .LVU1442
 253:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 5332              		.loc 2 253 2 discriminator 2 view .LVU1443
 5333              		.syntax unified
 5334              	@ 253 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 5335 0014 EFF31188 			mrs r8, basepri											
 5336 0018 4FF05003 		mov r3, #80												
 5337 001c 83F31188 		msr basepri, r3											
 5338 0020 BFF36F8F 		isb														
 5339 0024 BFF34F8F 		dsb														
 5340              	
 5341              	@ 0 "" 2
 5342              	.LVL368:
 265:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** }
 5343              		.loc 2 265 2 discriminator 2 view .LVU1444
 265:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** }
 5344              		.loc 2 265 2 is_stmt 0 discriminator 2 view .LVU1445
 5345              		.thumb
 5346              		.syntax unified
 5347              	.LBE174:
 5348              	.LBE173:
4480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5349              		.loc 1 4480 4 is_stmt 1 discriminator 2 view .LVU1446
4480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5350              		.loc 1 4480 6 is_stmt 0 discriminator 2 view .LVU1447
 5351 0028 B9F1000F 		cmp	r9, #0
 5352 002c 02D0     		beq	.L409
4482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5353              		.loc 1 4482 5 is_stmt 1 view .LVU1448
4482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5354              		.loc 1 4482 42 is_stmt 0 view .LVU1449
 5355 002e E36C     		ldr	r3, [r4, #76]
4482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5356              		.loc 1 4482 35 view .LVU1450
 5357 0030 C9F80030 		str	r3, [r9]
 5358              	.L409:
4485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 5359              		.loc 1 4485 4 is_stmt 1 view .LVU1451
4485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 5360              		.loc 1 4485 26 is_stmt 0 view .LVU1452
 5361 0034 94F85030 		ldrb	r3, [r4, #80]	@ zero_extendqisi2
 5362 0038 DBB2     		uxtb	r3, r3
 5363              	.LVL369:
4486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5364              		.loc 1 4486 4 is_stmt 1 view .LVU1453
4486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5365              		.loc 1 4486 25 is_stmt 0 view .LVU1454
 5366 003a 0222     		movs	r2, #2
 5367 003c 84F85020 		strb	r2, [r4, #80]
4488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5368              		.loc 1 4488 4 is_stmt 1 view .LVU1455
 5369 0040 6A1E     		subs	r2, r5, #1
 5370 0042 032A     		cmp	r2, #3
 5371 0044 24D8     		bhi	.L422
 5372 0046 DFE802F0 		tbb	[pc, r2]
 5373              	.L412:
 5374 004a 0B       		.byte	(.L415-.L412)/2
ARM GAS  /tmp/cclVzO8U.s 			page 207


 5375 004b 16       		.byte	(.L414-.L412)/2
 5376 004c 1B       		.byte	(.L413-.L412)/2
 5377 004d 1E       		.byte	(.L411-.L412)/2
 5378              	.LVL370:
 5379              		.p2align 1
 5380              	.L425:
4456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5381              		.loc 1 4456 3 view .LVU1456
 5382              	.LBB175:
 5383              	.LBI175:
 233:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 5384              		.loc 2 233 30 view .LVU1457
 5385              	.LBB176:
 235:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 5386              		.loc 2 235 1 view .LVU1458
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 5387              		.loc 2 237 2 view .LVU1459
 5388              		.syntax unified
 5389              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 5390 004e 4FF05003 			mov r3, #80												
 5391 0052 83F31188 		msr basepri, r3											
 5392 0056 BFF36F8F 		isb														
 5393 005a BFF34F8F 		dsb														
 5394              	
 5395              	@ 0 "" 2
 5396              	.LVL371:
 5397              		.thumb
 5398              		.syntax unified
 5399              	.L408:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 5400              		.loc 2 237 2 is_stmt 0 view .LVU1460
 5401              	.LBE176:
 5402              	.LBE175:
4456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5403              		.loc 1 4456 3 is_stmt 1 discriminator 1 view .LVU1461
4456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5404              		.loc 1 4456 3 discriminator 1 view .LVU1462
 5405 005e FEE7     		b	.L408
 5406              	.LVL372:
 5407              	.L415:
4491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5408              		.loc 1 4491 6 view .LVU1463
4491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5409              		.loc 1 4491 29 is_stmt 0 view .LVU1464
 5410 0060 E26C     		ldr	r2, [r4, #76]
 5411 0062 1743     		orrs	r7, r7, r2
 5412              	.LVL373:
4491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5413              		.loc 1 4491 29 view .LVU1465
 5414 0064 E764     		str	r7, [r4, #76]
4492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5415              		.loc 1 4492 6 is_stmt 1 view .LVU1466
4453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 5416              		.loc 1 4453 13 is_stmt 0 view .LVU1467
 5417 0066 0125     		movs	r5, #1
 5418              	.L410:
 5419              	.LVL374:
ARM GAS  /tmp/cclVzO8U.s 			page 208


4520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5420              		.loc 1 4520 31 is_stmt 1 view .LVU1468
4524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5421              		.loc 1 4524 4 view .LVU1469
4524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5422              		.loc 1 4524 6 is_stmt 0 view .LVU1470
 5423 0068 012B     		cmp	r3, #1
 5424 006a 15D0     		beq	.L426
 5425              	.LVL375:
 5426              	.L416:
4559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5427              		.loc 1 4559 30 is_stmt 1 view .LVU1471
4563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5428              		.loc 1 4563 3 view .LVU1472
 5429              	.LBB177:
 5430              	.LBI177:
 269:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 5431              		.loc 2 269 30 view .LVU1473
 5432              	.LBB178:
 5433              		.loc 2 271 2 view .LVU1474
 5434              		.syntax unified
 5435              	@ 271 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 5436 006c 88F31188 			msr basepri, r8	
 5437              	@ 0 "" 2
 5438              	.LVL376:
 5439              		.loc 2 271 2 is_stmt 0 view .LVU1475
 5440              		.thumb
 5441              		.syntax unified
 5442              	.LBE178:
 5443              	.LBE177:
4565:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5444              		.loc 1 4565 3 is_stmt 1 view .LVU1476
4566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5445              		.loc 1 4566 2 is_stmt 0 view .LVU1477
 5446 0070 2846     		mov	r0, r5
 5447 0072 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 5448              	.LVL377:
 5449              	.L414:
4495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5450              		.loc 1 4495 6 is_stmt 1 view .LVU1478
4495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5451              		.loc 1 4495 13 is_stmt 0 view .LVU1479
 5452 0076 E26C     		ldr	r2, [r4, #76]
4495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5453              		.loc 1 4495 32 view .LVU1480
 5454 0078 0132     		adds	r2, r2, #1
 5455 007a E264     		str	r2, [r4, #76]
4496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5456              		.loc 1 4496 6 is_stmt 1 view .LVU1481
4453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 5457              		.loc 1 4453 13 is_stmt 0 view .LVU1482
 5458 007c 0125     		movs	r5, #1
4496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5459              		.loc 1 4496 6 view .LVU1483
 5460 007e F3E7     		b	.L410
 5461              	.L413:
4499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
ARM GAS  /tmp/cclVzO8U.s 			page 209


 5462              		.loc 1 4499 6 is_stmt 1 view .LVU1484
4499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5463              		.loc 1 4499 29 is_stmt 0 view .LVU1485
 5464 0080 E764     		str	r7, [r4, #76]
4500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5465              		.loc 1 4500 6 is_stmt 1 view .LVU1486
4453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 5466              		.loc 1 4453 13 is_stmt 0 view .LVU1487
 5467 0082 0125     		movs	r5, #1
4500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5468              		.loc 1 4500 6 view .LVU1488
 5469 0084 F0E7     		b	.L410
 5470              	.L411:
4503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5471              		.loc 1 4503 6 is_stmt 1 view .LVU1489
4503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5472              		.loc 1 4503 8 is_stmt 0 view .LVU1490
 5473 0086 022B     		cmp	r3, #2
 5474 0088 04D0     		beq	.L423
4505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5475              		.loc 1 4505 7 is_stmt 1 view .LVU1491
4505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5476              		.loc 1 4505 30 is_stmt 0 view .LVU1492
 5477 008a E764     		str	r7, [r4, #76]
4453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 5478              		.loc 1 4453 13 view .LVU1493
 5479 008c 0125     		movs	r5, #1
 5480 008e EBE7     		b	.L410
 5481              	.L422:
4453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 5482              		.loc 1 4453 13 view .LVU1494
 5483 0090 0125     		movs	r5, #1
 5484 0092 E9E7     		b	.L410
 5485              	.L423:
4510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5486              		.loc 1 4510 15 view .LVU1495
 5487 0094 0025     		movs	r5, #0
 5488 0096 E7E7     		b	.L410
 5489              	.LVL378:
 5490              	.L426:
4527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5491              		.loc 1 4527 5 is_stmt 1 view .LVU1496
 5492 0098 A36A     		ldr	r3, [r4, #40]
 5493              	.LVL379:
4527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5494              		.loc 1 4527 5 is_stmt 0 view .LVU1497
 5495 009a 43B1     		cbz	r3, .L417
4527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5496              		.loc 1 4527 5 is_stmt 1 view .LVU1498
 5497              	.LBB179:
 5498              	.LBI179:
 233:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 5499              		.loc 2 233 30 view .LVU1499
 5500              	.LBB180:
 235:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 5501              		.loc 2 235 1 view .LVU1500
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
ARM GAS  /tmp/cclVzO8U.s 			page 210


 5502              		.loc 2 237 2 view .LVU1501
 5503              		.syntax unified
 5504              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 5505 009c 4FF05003 			mov r3, #80												
 5506 00a0 83F31188 		msr basepri, r3											
 5507 00a4 BFF36F8F 		isb														
 5508 00a8 BFF34F8F 		dsb														
 5509              	
 5510              	@ 0 "" 2
 5511              	.LVL380:
 5512              		.thumb
 5513              		.syntax unified
 5514              	.L418:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 5515              		.loc 2 237 2 is_stmt 0 view .LVU1502
 5516              	.LBE180:
 5517              	.LBE179:
4527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5518              		.loc 1 4527 5 is_stmt 1 discriminator 2 view .LVU1503
4527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5519              		.loc 1 4527 5 discriminator 2 view .LVU1504
 5520 00ac FEE7     		b	.L418
 5521              	.L417:
4527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5522              		.loc 1 4527 82 discriminator 2 view .LVU1505
4529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5523              		.loc 1 4529 5 discriminator 2 view .LVU1506
4529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5524              		.loc 1 4529 30 is_stmt 0 discriminator 2 view .LVU1507
 5525 00ae 154B     		ldr	r3, .L427
 5526 00b0 1B68     		ldr	r3, [r3]
4529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5527              		.loc 1 4529 7 discriminator 2 view .LVU1508
 5528 00b2 E3B9     		cbnz	r3, .L419
4531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 5529              		.loc 1 4531 6 is_stmt 1 view .LVU1509
4531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 5530              		.loc 1 4531 15 is_stmt 0 view .LVU1510
 5531 00b4 271D     		adds	r7, r4, #4
 5532 00b6 3846     		mov	r0, r7
 5533 00b8 FFF7FEFF 		bl	uxListRemove
 5534              	.LVL381:
4532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5535              		.loc 1 4532 6 is_stmt 1 view .LVU1511
4532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5536              		.loc 1 4532 6 view .LVU1512
 5537 00bc E36A     		ldr	r3, [r4, #44]
 5538 00be 0122     		movs	r2, #1
 5539 00c0 9A40     		lsls	r2, r2, r3
 5540 00c2 1149     		ldr	r1, .L427+4
 5541 00c4 0868     		ldr	r0, [r1]
 5542 00c6 0243     		orrs	r2, r2, r0
 5543 00c8 0A60     		str	r2, [r1]
4532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5544              		.loc 1 4532 6 view .LVU1513
 5545 00ca 03EB8303 		add	r3, r3, r3, lsl #2
 5546 00ce 9A00     		lsls	r2, r3, #2
ARM GAS  /tmp/cclVzO8U.s 			page 211


 5547 00d0 3946     		mov	r1, r7
 5548 00d2 0E48     		ldr	r0, .L427+8
 5549 00d4 1044     		add	r0, r0, r2
 5550 00d6 FFF7FEFF 		bl	vListInsertEnd
 5551              	.LVL382:
4532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5552              		.loc 1 4532 36 view .LVU1514
 5553              	.L420:
4541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5554              		.loc 1 4541 5 view .LVU1515
4541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5555              		.loc 1 4541 14 is_stmt 0 view .LVU1516
 5556 00da E26A     		ldr	r2, [r4, #44]
4541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5557              		.loc 1 4541 41 view .LVU1517
 5558 00dc 0C4B     		ldr	r3, .L427+12
 5559 00de 1B68     		ldr	r3, [r3]
 5560 00e0 DB6A     		ldr	r3, [r3, #44]
4541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5561              		.loc 1 4541 7 view .LVU1518
 5562 00e2 9A42     		cmp	r2, r3
 5563 00e4 C2D9     		bls	.L416
4545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5564              		.loc 1 4545 6 is_stmt 1 view .LVU1519
4545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5565              		.loc 1 4545 8 is_stmt 0 view .LVU1520
 5566 00e6 46B1     		cbz	r6, .L421
4547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5567              		.loc 1 4547 7 is_stmt 1 view .LVU1521
4547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5568              		.loc 1 4547 34 is_stmt 0 view .LVU1522
 5569 00e8 0123     		movs	r3, #1
 5570 00ea 3360     		str	r3, [r6]
 5571 00ec BEE7     		b	.L416
 5572              	.L419:
4538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5573              		.loc 1 4538 6 is_stmt 1 view .LVU1523
 5574 00ee 04F11801 		add	r1, r4, #24
 5575 00f2 0848     		ldr	r0, .L427+16
 5576 00f4 FFF7FEFF 		bl	vListInsertEnd
 5577              	.LVL383:
 5578 00f8 EFE7     		b	.L420
 5579              	.L421:
4554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5580              		.loc 1 4554 7 view .LVU1524
4554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5581              		.loc 1 4554 21 is_stmt 0 view .LVU1525
 5582 00fa 074B     		ldr	r3, .L427+20
 5583 00fc 0122     		movs	r2, #1
 5584 00fe 1A60     		str	r2, [r3]
 5585 0100 B4E7     		b	.L416
 5586              	.L428:
 5587 0102 00BF     		.align	2
 5588              	.L427:
 5589 0104 00000000 		.word	.LANCHOR16
 5590 0108 00000000 		.word	.LANCHOR13
 5591 010c 00000000 		.word	.LANCHOR4
ARM GAS  /tmp/cclVzO8U.s 			page 212


 5592 0110 00000000 		.word	.LANCHOR10
 5593 0114 00000000 		.word	.LANCHOR1
 5594 0118 00000000 		.word	.LANCHOR20
 5595              		.cfi_endproc
 5596              	.LFE632:
 5598              		.section	.text.vTaskNotifyGiveFromISR,"ax",%progbits
 5599              		.align	1
 5600              		.global	vTaskNotifyGiveFromISR
 5601              		.syntax unified
 5602              		.thumb
 5603              		.thumb_func
 5604              		.fpu softvfp
 5606              	vTaskNotifyGiveFromISR:
 5607              	.LVL384:
 5608              	.LFB633:
4574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 5609              		.loc 1 4574 2 is_stmt 1 view -0
 5610              		.cfi_startproc
 5611              		@ args = 0, pretend = 0, frame = 0
 5612              		@ frame_needed = 0, uses_anonymous_args = 0
4574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 5613              		.loc 1 4574 2 is_stmt 0 view .LVU1527
 5614 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 5615              	.LCFI46:
 5616              		.cfi_def_cfa_offset 24
 5617              		.cfi_offset 3, -24
 5618              		.cfi_offset 4, -20
 5619              		.cfi_offset 5, -16
 5620              		.cfi_offset 6, -12
 5621              		.cfi_offset 7, -8
 5622              		.cfi_offset 14, -4
4575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 5623              		.loc 1 4575 2 is_stmt 1 view .LVU1528
4576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 5624              		.loc 1 4576 2 view .LVU1529
4577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5625              		.loc 1 4577 2 view .LVU1530
4579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5626              		.loc 1 4579 3 view .LVU1531
 5627 0002 D8B1     		cbz	r0, .L439
 5628 0004 0446     		mov	r4, r0
 5629 0006 0D46     		mov	r5, r1
4579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5630              		.loc 1 4579 32 discriminator 2 view .LVU1532
4597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5631              		.loc 1 4597 3 discriminator 2 view .LVU1533
 5632 0008 FFF7FEFF 		bl	vPortValidateInterruptPriority
 5633              	.LVL385:
4599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5634              		.loc 1 4599 3 discriminator 2 view .LVU1534
4601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5635              		.loc 1 4601 3 discriminator 2 view .LVU1535
 5636              	.LBB181:
 5637              	.LBI181:
 249:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 5638              		.loc 2 249 34 discriminator 2 view .LVU1536
 5639              	.LBB182:
ARM GAS  /tmp/cclVzO8U.s 			page 213


 251:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 5640              		.loc 2 251 1 discriminator 2 view .LVU1537
 253:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 5641              		.loc 2 253 2 discriminator 2 view .LVU1538
 5642              		.syntax unified
 5643              	@ 253 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 5644 000c EFF31187 			mrs r7, basepri											
 5645 0010 4FF05003 		mov r3, #80												
 5646 0014 83F31188 		msr basepri, r3											
 5647 0018 BFF36F8F 		isb														
 5648 001c BFF34F8F 		dsb														
 5649              	
 5650              	@ 0 "" 2
 5651              	.LVL386:
 265:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** }
 5652              		.loc 2 265 2 discriminator 2 view .LVU1539
 265:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** }
 5653              		.loc 2 265 2 is_stmt 0 discriminator 2 view .LVU1540
 5654              		.thumb
 5655              		.syntax unified
 5656              	.LBE182:
 5657              	.LBE181:
4603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 5658              		.loc 1 4603 4 is_stmt 1 discriminator 2 view .LVU1541
4603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 5659              		.loc 1 4603 26 is_stmt 0 discriminator 2 view .LVU1542
 5660 0020 94F85030 		ldrb	r3, [r4, #80]	@ zero_extendqisi2
 5661 0024 DBB2     		uxtb	r3, r3
 5662              	.LVL387:
4604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5663              		.loc 1 4604 4 is_stmt 1 discriminator 2 view .LVU1543
4604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5664              		.loc 1 4604 25 is_stmt 0 discriminator 2 view .LVU1544
 5665 0026 0222     		movs	r2, #2
 5666 0028 84F85020 		strb	r2, [r4, #80]
4608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5667              		.loc 1 4608 4 is_stmt 1 discriminator 2 view .LVU1545
4608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5668              		.loc 1 4608 11 is_stmt 0 discriminator 2 view .LVU1546
 5669 002c E26C     		ldr	r2, [r4, #76]
4608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5670              		.loc 1 4608 30 discriminator 2 view .LVU1547
 5671 002e 0132     		adds	r2, r2, #1
 5672 0030 E264     		str	r2, [r4, #76]
4610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5673              		.loc 1 4610 36 is_stmt 1 discriminator 2 view .LVU1548
4614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5674              		.loc 1 4614 4 discriminator 2 view .LVU1549
4614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5675              		.loc 1 4614 6 is_stmt 0 discriminator 2 view .LVU1550
 5676 0032 012B     		cmp	r3, #1
 5677 0034 0BD0     		beq	.L440
 5678              	.LVL388:
 5679              	.L432:
4649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5680              		.loc 1 4649 30 is_stmt 1 view .LVU1551
4653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
ARM GAS  /tmp/cclVzO8U.s 			page 214


 5681              		.loc 1 4653 3 view .LVU1552
 5682              	.LBB183:
 5683              	.LBI183:
 269:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 5684              		.loc 2 269 30 view .LVU1553
 5685              	.LBB184:
 5686              		.loc 2 271 2 view .LVU1554
 5687              		.syntax unified
 5688              	@ 271 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 5689 0036 87F31188 			msr basepri, r7	
 5690              	@ 0 "" 2
 5691              	.LVL389:
 5692              		.loc 2 271 2 is_stmt 0 view .LVU1555
 5693              		.thumb
 5694              		.syntax unified
 5695              	.LBE184:
 5696              	.LBE183:
4654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5697              		.loc 1 4654 2 view .LVU1556
 5698 003a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5699              	.LVL390:
 5700              	.L439:
4579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5701              		.loc 1 4579 3 is_stmt 1 view .LVU1557
 5702              	.LBB185:
 5703              	.LBI185:
 233:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 5704              		.loc 2 233 30 view .LVU1558
 5705              	.LBB186:
 235:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 5706              		.loc 2 235 1 view .LVU1559
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 5707              		.loc 2 237 2 view .LVU1560
 5708              		.syntax unified
 5709              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 5710 003c 4FF05003 			mov r3, #80												
 5711 0040 83F31188 		msr basepri, r3											
 5712 0044 BFF36F8F 		isb														
 5713 0048 BFF34F8F 		dsb														
 5714              	
 5715              	@ 0 "" 2
 5716              	.LVL391:
 5717              		.thumb
 5718              		.syntax unified
 5719              	.L431:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 5720              		.loc 2 237 2 is_stmt 0 view .LVU1561
 5721              	.LBE186:
 5722              	.LBE185:
4579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5723              		.loc 1 4579 3 is_stmt 1 discriminator 1 view .LVU1562
4579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5724              		.loc 1 4579 3 discriminator 1 view .LVU1563
 5725 004c FEE7     		b	.L431
 5726              	.LVL392:
 5727              	.L440:
4617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cclVzO8U.s 			page 215


 5728              		.loc 1 4617 5 view .LVU1564
 5729 004e A36A     		ldr	r3, [r4, #40]
 5730              	.LVL393:
4617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5731              		.loc 1 4617 5 is_stmt 0 view .LVU1565
 5732 0050 43B1     		cbz	r3, .L433
4617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5733              		.loc 1 4617 5 is_stmt 1 view .LVU1566
 5734              	.LBB187:
 5735              	.LBI187:
 233:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 5736              		.loc 2 233 30 view .LVU1567
 5737              	.LBB188:
 235:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 5738              		.loc 2 235 1 view .LVU1568
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 5739              		.loc 2 237 2 view .LVU1569
 5740              		.syntax unified
 5741              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 5742 0052 4FF05003 			mov r3, #80												
 5743 0056 83F31188 		msr basepri, r3											
 5744 005a BFF36F8F 		isb														
 5745 005e BFF34F8F 		dsb														
 5746              	
 5747              	@ 0 "" 2
 5748              	.LVL394:
 5749              		.thumb
 5750              		.syntax unified
 5751              	.L434:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 5752              		.loc 2 237 2 is_stmt 0 view .LVU1570
 5753              	.LBE188:
 5754              	.LBE187:
4617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5755              		.loc 1 4617 5 is_stmt 1 discriminator 2 view .LVU1571
4617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5756              		.loc 1 4617 5 discriminator 2 view .LVU1572
 5757 0062 FEE7     		b	.L434
 5758              	.L433:
4617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5759              		.loc 1 4617 82 discriminator 2 view .LVU1573
4619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5760              		.loc 1 4619 5 discriminator 2 view .LVU1574
4619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5761              		.loc 1 4619 30 is_stmt 0 discriminator 2 view .LVU1575
 5762 0064 144B     		ldr	r3, .L441
 5763 0066 1B68     		ldr	r3, [r3]
4619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5764              		.loc 1 4619 7 discriminator 2 view .LVU1576
 5765 0068 E3B9     		cbnz	r3, .L435
4621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 5766              		.loc 1 4621 6 is_stmt 1 view .LVU1577
4621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 5767              		.loc 1 4621 15 is_stmt 0 view .LVU1578
 5768 006a 261D     		adds	r6, r4, #4
 5769 006c 3046     		mov	r0, r6
 5770 006e FFF7FEFF 		bl	uxListRemove
ARM GAS  /tmp/cclVzO8U.s 			page 216


 5771              	.LVL395:
4622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5772              		.loc 1 4622 6 is_stmt 1 view .LVU1579
4622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5773              		.loc 1 4622 6 view .LVU1580
 5774 0072 E36A     		ldr	r3, [r4, #44]
 5775 0074 0122     		movs	r2, #1
 5776 0076 9A40     		lsls	r2, r2, r3
 5777 0078 1049     		ldr	r1, .L441+4
 5778 007a 0868     		ldr	r0, [r1]
 5779 007c 0243     		orrs	r2, r2, r0
 5780 007e 0A60     		str	r2, [r1]
4622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5781              		.loc 1 4622 6 view .LVU1581
 5782 0080 03EB8303 		add	r3, r3, r3, lsl #2
 5783 0084 9A00     		lsls	r2, r3, #2
 5784 0086 3146     		mov	r1, r6
 5785 0088 0D48     		ldr	r0, .L441+8
 5786 008a 1044     		add	r0, r0, r2
 5787 008c FFF7FEFF 		bl	vListInsertEnd
 5788              	.LVL396:
4622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5789              		.loc 1 4622 36 view .LVU1582
 5790              	.L436:
4631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5791              		.loc 1 4631 5 view .LVU1583
4631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5792              		.loc 1 4631 14 is_stmt 0 view .LVU1584
 5793 0090 E26A     		ldr	r2, [r4, #44]
4631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5794              		.loc 1 4631 41 view .LVU1585
 5795 0092 0C4B     		ldr	r3, .L441+12
 5796 0094 1B68     		ldr	r3, [r3]
 5797 0096 DB6A     		ldr	r3, [r3, #44]
4631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5798              		.loc 1 4631 7 view .LVU1586
 5799 0098 9A42     		cmp	r2, r3
 5800 009a CCD9     		bls	.L432
4635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5801              		.loc 1 4635 6 is_stmt 1 view .LVU1587
4635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5802              		.loc 1 4635 8 is_stmt 0 view .LVU1588
 5803 009c 45B1     		cbz	r5, .L437
4637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5804              		.loc 1 4637 7 is_stmt 1 view .LVU1589
4637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5805              		.loc 1 4637 34 is_stmt 0 view .LVU1590
 5806 009e 0123     		movs	r3, #1
 5807 00a0 2B60     		str	r3, [r5]
 5808 00a2 C8E7     		b	.L432
 5809              	.L435:
4628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5810              		.loc 1 4628 6 is_stmt 1 view .LVU1591
 5811 00a4 04F11801 		add	r1, r4, #24
 5812 00a8 0748     		ldr	r0, .L441+16
 5813 00aa FFF7FEFF 		bl	vListInsertEnd
 5814              	.LVL397:
ARM GAS  /tmp/cclVzO8U.s 			page 217


 5815 00ae EFE7     		b	.L436
 5816              	.L437:
4644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5817              		.loc 1 4644 7 view .LVU1592
4644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5818              		.loc 1 4644 21 is_stmt 0 view .LVU1593
 5819 00b0 064B     		ldr	r3, .L441+20
 5820 00b2 0122     		movs	r2, #1
 5821 00b4 1A60     		str	r2, [r3]
 5822 00b6 BEE7     		b	.L432
 5823              	.L442:
 5824              		.align	2
 5825              	.L441:
 5826 00b8 00000000 		.word	.LANCHOR16
 5827 00bc 00000000 		.word	.LANCHOR13
 5828 00c0 00000000 		.word	.LANCHOR4
 5829 00c4 00000000 		.word	.LANCHOR10
 5830 00c8 00000000 		.word	.LANCHOR1
 5831 00cc 00000000 		.word	.LANCHOR20
 5832              		.cfi_endproc
 5833              	.LFE633:
 5835              		.section	.text.xTaskNotifyStateClear,"ax",%progbits
 5836              		.align	1
 5837              		.global	xTaskNotifyStateClear
 5838              		.syntax unified
 5839              		.thumb
 5840              		.thumb_func
 5841              		.fpu softvfp
 5843              	xTaskNotifyStateClear:
 5844              	.LVL398:
 5845              	.LFB634:
4663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 5846              		.loc 1 4663 2 is_stmt 1 view -0
 5847              		.cfi_startproc
 5848              		@ args = 0, pretend = 0, frame = 0
 5849              		@ frame_needed = 0, uses_anonymous_args = 0
4663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 5850              		.loc 1 4663 2 is_stmt 0 view .LVU1595
 5851 0000 10B5     		push	{r4, lr}
 5852              	.LCFI47:
 5853              		.cfi_def_cfa_offset 8
 5854              		.cfi_offset 4, -8
 5855              		.cfi_offset 14, -4
4664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 5856              		.loc 1 4664 2 is_stmt 1 view .LVU1596
4665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5857              		.loc 1 4665 2 view .LVU1597
4669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5858              		.loc 1 4669 3 view .LVU1598
4669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5859              		.loc 1 4669 11 is_stmt 0 view .LVU1599
 5860 0002 0446     		mov	r4, r0
 5861 0004 58B1     		cbz	r0, .L448
 5862              	.LVL399:
 5863              	.L444:
4671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5864              		.loc 1 4671 3 is_stmt 1 discriminator 4 view .LVU1600
ARM GAS  /tmp/cclVzO8U.s 			page 218


 5865 0006 FFF7FEFF 		bl	vPortEnterCritical
 5866              	.LVL400:
4673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5867              		.loc 1 4673 4 discriminator 4 view .LVU1601
4673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5868              		.loc 1 4673 13 is_stmt 0 discriminator 4 view .LVU1602
 5869 000a 94F85030 		ldrb	r3, [r4, #80]	@ zero_extendqisi2
 5870 000e DBB2     		uxtb	r3, r3
4673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5871              		.loc 1 4673 6 discriminator 4 view .LVU1603
 5872 0010 022B     		cmp	r3, #2
 5873 0012 07D0     		beq	.L449
4680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5874              		.loc 1 4680 13 view .LVU1604
 5875 0014 0024     		movs	r4, #0
 5876              	.LVL401:
 5877              	.L445:
4683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5878              		.loc 1 4683 3 is_stmt 1 view .LVU1605
 5879 0016 FFF7FEFF 		bl	vPortExitCritical
 5880              	.LVL402:
4685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5881              		.loc 1 4685 3 view .LVU1606
4686:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5882              		.loc 1 4686 2 is_stmt 0 view .LVU1607
 5883 001a 2046     		mov	r0, r4
 5884 001c 10BD     		pop	{r4, pc}
 5885              	.LVL403:
 5886              	.L448:
4669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5887              		.loc 1 4669 11 discriminator 1 view .LVU1608
 5888 001e 044B     		ldr	r3, .L450
 5889 0020 1C68     		ldr	r4, [r3]
 5890              	.LVL404:
4669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5891              		.loc 1 4669 11 discriminator 1 view .LVU1609
 5892 0022 F0E7     		b	.L444
 5893              	.LVL405:
 5894              	.L449:
4675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
 5895              		.loc 1 4675 5 is_stmt 1 view .LVU1610
4675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
 5896              		.loc 1 4675 26 is_stmt 0 view .LVU1611
 5897 0024 0023     		movs	r3, #0
 5898 0026 84F85030 		strb	r3, [r4, #80]
4676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5899              		.loc 1 4676 5 is_stmt 1 view .LVU1612
 5900              	.LVL406:
4676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5901              		.loc 1 4676 13 is_stmt 0 view .LVU1613
 5902 002a 0124     		movs	r4, #1
 5903              	.LVL407:
4676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5904              		.loc 1 4676 13 view .LVU1614
 5905 002c F3E7     		b	.L445
 5906              	.L451:
 5907 002e 00BF     		.align	2
ARM GAS  /tmp/cclVzO8U.s 			page 219


 5908              	.L450:
 5909 0030 00000000 		.word	.LANCHOR10
 5910              		.cfi_endproc
 5911              	.LFE634:
 5913              		.global	pxCurrentTCB
 5914              		.section	.bss.pxCurrentTCB,"aw",%nobits
 5915              		.align	2
 5916              		.set	.LANCHOR10,. + 0
 5919              	pxCurrentTCB:
 5920 0000 00000000 		.space	4
 5921              		.section	.bss.pxDelayedTaskList,"aw",%nobits
 5922              		.align	2
 5923              		.set	.LANCHOR2,. + 0
 5926              	pxDelayedTaskList:
 5927 0000 00000000 		.space	4
 5928              		.section	.bss.pxOverflowDelayedTaskList,"aw",%nobits
 5929              		.align	2
 5930              		.set	.LANCHOR8,. + 0
 5933              	pxOverflowDelayedTaskList:
 5934 0000 00000000 		.space	4
 5935              		.section	.bss.pxReadyTasksLists,"aw",%nobits
 5936              		.align	2
 5937              		.set	.LANCHOR4,. + 0
 5940              	pxReadyTasksLists:
 5941 0000 00000000 		.space	140
 5941      00000000 
 5941      00000000 
 5941      00000000 
 5941      00000000 
 5942              		.section	.bss.uxCurrentNumberOfTasks,"aw",%nobits
 5943              		.align	2
 5944              		.set	.LANCHOR9,. + 0
 5947              	uxCurrentNumberOfTasks:
 5948 0000 00000000 		.space	4
 5949              		.section	.bss.uxDeletedTasksWaitingCleanUp,"aw",%nobits
 5950              		.align	2
 5951              		.set	.LANCHOR15,. + 0
 5954              	uxDeletedTasksWaitingCleanUp:
 5955 0000 00000000 		.space	4
 5956              		.section	.bss.uxPendedTicks,"aw",%nobits
 5957              		.align	2
 5958              		.set	.LANCHOR19,. + 0
 5961              	uxPendedTicks:
 5962 0000 00000000 		.space	4
 5963              		.section	.bss.uxSchedulerSuspended,"aw",%nobits
 5964              		.align	2
 5965              		.set	.LANCHOR16,. + 0
 5968              	uxSchedulerSuspended:
 5969 0000 00000000 		.space	4
 5970              		.section	.bss.uxTaskNumber,"aw",%nobits
 5971              		.align	2
 5972              		.set	.LANCHOR12,. + 0
 5975              	uxTaskNumber:
 5976 0000 00000000 		.space	4
 5977              		.section	.bss.uxTopReadyPriority,"aw",%nobits
 5978              		.align	2
 5979              		.set	.LANCHOR13,. + 0
ARM GAS  /tmp/cclVzO8U.s 			page 220


 5982              	uxTopReadyPriority:
 5983 0000 00000000 		.space	4
 5984              		.section	.bss.xDelayedTaskList1,"aw",%nobits
 5985              		.align	2
 5986              		.set	.LANCHOR5,. + 0
 5989              	xDelayedTaskList1:
 5990 0000 00000000 		.space	20
 5990      00000000 
 5990      00000000 
 5990      00000000 
 5990      00000000 
 5991              		.section	.bss.xDelayedTaskList2,"aw",%nobits
 5992              		.align	2
 5993              		.set	.LANCHOR6,. + 0
 5996              	xDelayedTaskList2:
 5997 0000 00000000 		.space	20
 5997      00000000 
 5997      00000000 
 5997      00000000 
 5997      00000000 
 5998              		.section	.bss.xIdleTaskHandle,"aw",%nobits
 5999              		.align	2
 6000              		.set	.LANCHOR17,. + 0
 6003              	xIdleTaskHandle:
 6004 0000 00000000 		.space	4
 6005              		.section	.bss.xNextTaskUnblockTime,"aw",%nobits
 6006              		.align	2
 6007              		.set	.LANCHOR3,. + 0
 6010              	xNextTaskUnblockTime:
 6011 0000 00000000 		.space	4
 6012              		.section	.bss.xNumOfOverflows,"aw",%nobits
 6013              		.align	2
 6014              		.set	.LANCHOR18,. + 0
 6017              	xNumOfOverflows:
 6018 0000 00000000 		.space	4
 6019              		.section	.bss.xPendingReadyList,"aw",%nobits
 6020              		.align	2
 6021              		.set	.LANCHOR1,. + 0
 6024              	xPendingReadyList:
 6025 0000 00000000 		.space	20
 6025      00000000 
 6025      00000000 
 6025      00000000 
 6025      00000000 
 6026              		.section	.bss.xSchedulerRunning,"aw",%nobits
 6027              		.align	2
 6028              		.set	.LANCHOR11,. + 0
 6031              	xSchedulerRunning:
 6032 0000 00000000 		.space	4
 6033              		.section	.bss.xSuspendedTaskList,"aw",%nobits
 6034              		.align	2
 6035              		.set	.LANCHOR0,. + 0
 6038              	xSuspendedTaskList:
 6039 0000 00000000 		.space	20
 6039      00000000 
 6039      00000000 
 6039      00000000 
ARM GAS  /tmp/cclVzO8U.s 			page 221


 6039      00000000 
 6040              		.section	.bss.xTasksWaitingTermination,"aw",%nobits
 6041              		.align	2
 6042              		.set	.LANCHOR7,. + 0
 6045              	xTasksWaitingTermination:
 6046 0000 00000000 		.space	20
 6046      00000000 
 6046      00000000 
 6046      00000000 
 6046      00000000 
 6047              		.section	.bss.xTickCount,"aw",%nobits
 6048              		.align	2
 6049              		.set	.LANCHOR14,. + 0
 6052              	xTickCount:
 6053 0000 00000000 		.space	4
 6054              		.section	.bss.xYieldPending,"aw",%nobits
 6055              		.align	2
 6056              		.set	.LANCHOR20,. + 0
 6059              	xYieldPending:
 6060 0000 00000000 		.space	4
 6061              		.section	.rodata.vTaskStartScheduler.str1.4,"aMS",%progbits,1
 6062              		.align	2
 6063              	.LC0:
 6064 0000 49444C45 		.ascii	"IDLE\000"
 6064      00
 6065              		.text
 6066              	.Letext0:
 6067              		.file 3 "/usr/lib/gcc/arm-none-eabi/8.2.0/include/stddef.h"
 6068              		.file 4 "/usr/arm-none-eabi/include/machine/_default_types.h"
 6069              		.file 5 "/usr/arm-none-eabi/include/sys/lock.h"
 6070              		.file 6 "/usr/arm-none-eabi/include/sys/_types.h"
 6071              		.file 7 "/usr/arm-none-eabi/include/sys/reent.h"
 6072              		.file 8 "/usr/arm-none-eabi/include/stdlib.h"
 6073              		.file 9 "/usr/arm-none-eabi/include/sys/_stdint.h"
 6074              		.file 10 "Drivers/CMSIS/Include/core_cm3.h"
 6075              		.file 11 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 6076              		.file 12 "Middlewares/Third_Party/FreeRTOS/Source/include/projdefs.h"
 6077              		.file 13 "Middlewares/Third_Party/FreeRTOS/Source/include/list.h"
 6078              		.file 14 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 6079              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h"
 6080              		.file 16 "Middlewares/Third_Party/FreeRTOS/Source/include/portable.h"
ARM GAS  /tmp/cclVzO8U.s 			page 222


DEFINED SYMBOLS
                            *ABS*:0000000000000000 tasks.c
     /tmp/cclVzO8U.s:16     .text.prvTaskIsTaskSuspended:0000000000000000 $t
     /tmp/cclVzO8U.s:23     .text.prvTaskIsTaskSuspended:0000000000000000 prvTaskIsTaskSuspended
     /tmp/cclVzO8U.s:112    .text.prvTaskIsTaskSuspended:0000000000000038 $d
     /tmp/cclVzO8U.s:118    .text.prvResetNextTaskUnblockTime:0000000000000000 $t
     /tmp/cclVzO8U.s:124    .text.prvResetNextTaskUnblockTime:0000000000000000 prvResetNextTaskUnblockTime
     /tmp/cclVzO8U.s:167    .text.prvResetNextTaskUnblockTime:0000000000000024 $d
     /tmp/cclVzO8U.s:173    .text.prvDeleteTCB:0000000000000000 $t
     /tmp/cclVzO8U.s:179    .text.prvDeleteTCB:0000000000000000 prvDeleteTCB
     /tmp/cclVzO8U.s:211    .text.prvInitialiseNewTask:0000000000000000 $t
     /tmp/cclVzO8U.s:217    .text.prvInitialiseNewTask:0000000000000000 prvInitialiseNewTask
     /tmp/cclVzO8U.s:358    .text.prvInitialiseTaskLists:0000000000000000 $t
     /tmp/cclVzO8U.s:364    .text.prvInitialiseTaskLists:0000000000000000 prvInitialiseTaskLists
     /tmp/cclVzO8U.s:437    .text.prvInitialiseTaskLists:0000000000000048 $d
     /tmp/cclVzO8U.s:449    .text.prvAddNewTaskToReadyList:0000000000000000 $t
     /tmp/cclVzO8U.s:455    .text.prvAddNewTaskToReadyList:0000000000000000 prvAddNewTaskToReadyList
     /tmp/cclVzO8U.s:592    .text.prvAddNewTaskToReadyList:000000000000008c $d
     /tmp/cclVzO8U.s:603    .text.prvAddCurrentTaskToDelayedList:0000000000000000 $t
     /tmp/cclVzO8U.s:609    .text.prvAddCurrentTaskToDelayedList:0000000000000000 prvAddCurrentTaskToDelayedList
     /tmp/cclVzO8U.s:729    .text.prvAddCurrentTaskToDelayedList:000000000000007c $d
     /tmp/cclVzO8U.s:740    .text.xTaskCreate:0000000000000000 $t
     /tmp/cclVzO8U.s:747    .text.xTaskCreate:0000000000000000 xTaskCreate
     /tmp/cclVzO8U.s:869    .text.vTaskDelete:0000000000000000 $t
     /tmp/cclVzO8U.s:876    .text.vTaskDelete:0000000000000000 vTaskDelete
     /tmp/cclVzO8U.s:1060   .text.vTaskDelete:00000000000000b8 $d
     /tmp/cclVzO8U.s:1074   .text.uxTaskPriorityGet:0000000000000000 $t
     /tmp/cclVzO8U.s:1081   .text.uxTaskPriorityGet:0000000000000000 uxTaskPriorityGet
     /tmp/cclVzO8U.s:1127   .text.uxTaskPriorityGet:000000000000001c $d
     /tmp/cclVzO8U.s:1132   .text.uxTaskPriorityGetFromISR:0000000000000000 $t
     /tmp/cclVzO8U.s:1139   .text.uxTaskPriorityGetFromISR:0000000000000000 uxTaskPriorityGetFromISR
     /tmp/cclVzO8U.s:1220   .text.uxTaskPriorityGetFromISR:000000000000002c $d
     /tmp/cclVzO8U.s:1225   .text.vTaskPrioritySet:0000000000000000 $t
     /tmp/cclVzO8U.s:1232   .text.vTaskPrioritySet:0000000000000000 vTaskPrioritySet
     /tmp/cclVzO8U.s:1479   .text.vTaskPrioritySet:00000000000000d8 $d
     /tmp/cclVzO8U.s:1487   .text.vTaskResume:0000000000000000 $t
     /tmp/cclVzO8U.s:1494   .text.vTaskResume:0000000000000000 vTaskResume
     /tmp/cclVzO8U.s:1625   .text.vTaskResume:0000000000000078 $d
     /tmp/cclVzO8U.s:1633   .text.xTaskResumeFromISR:0000000000000000 $t
     /tmp/cclVzO8U.s:1640   .text.xTaskResumeFromISR:0000000000000000 xTaskResumeFromISR
     /tmp/cclVzO8U.s:1817   .text.xTaskResumeFromISR:0000000000000090 $d
     /tmp/cclVzO8U.s:1826   .text.vTaskStartScheduler:0000000000000000 $t
     /tmp/cclVzO8U.s:1833   .text.vTaskStartScheduler:0000000000000000 vTaskStartScheduler
     /tmp/cclVzO8U.s:1949   .text.vTaskStartScheduler:0000000000000064 $d
     /tmp/cclVzO8U.s:2986   .text.prvIdleTask:0000000000000000 prvIdleTask
     /tmp/cclVzO8U.s:1959   .text.vTaskEndScheduler:0000000000000000 $t
     /tmp/cclVzO8U.s:1966   .text.vTaskEndScheduler:0000000000000000 vTaskEndScheduler
     /tmp/cclVzO8U.s:2009   .text.vTaskEndScheduler:0000000000000020 $d
     /tmp/cclVzO8U.s:2014   .text.vTaskSuspendAll:0000000000000000 $t
     /tmp/cclVzO8U.s:2021   .text.vTaskSuspendAll:0000000000000000 vTaskSuspendAll
     /tmp/cclVzO8U.s:2038   .text.vTaskSuspendAll:000000000000000c $d
     /tmp/cclVzO8U.s:2043   .text.xTaskGetTickCount:0000000000000000 $t
     /tmp/cclVzO8U.s:2050   .text.xTaskGetTickCount:0000000000000000 xTaskGetTickCount
     /tmp/cclVzO8U.s:2071   .text.xTaskGetTickCount:0000000000000008 $d
     /tmp/cclVzO8U.s:2076   .text.xTaskGetTickCountFromISR:0000000000000000 $t
     /tmp/cclVzO8U.s:2083   .text.xTaskGetTickCountFromISR:0000000000000000 xTaskGetTickCountFromISR
     /tmp/cclVzO8U.s:2112   .text.xTaskGetTickCountFromISR:000000000000000c $d
ARM GAS  /tmp/cclVzO8U.s 			page 223


     /tmp/cclVzO8U.s:2117   .text.uxTaskGetNumberOfTasks:0000000000000000 $t
     /tmp/cclVzO8U.s:2124   .text.uxTaskGetNumberOfTasks:0000000000000000 uxTaskGetNumberOfTasks
     /tmp/cclVzO8U.s:2140   .text.uxTaskGetNumberOfTasks:0000000000000008 $d
     /tmp/cclVzO8U.s:2145   .text.pcTaskGetName:0000000000000000 $t
     /tmp/cclVzO8U.s:2152   .text.pcTaskGetName:0000000000000000 pcTaskGetName
     /tmp/cclVzO8U.s:2212   .text.pcTaskGetName:0000000000000024 $d
     /tmp/cclVzO8U.s:2217   .text.xTaskIncrementTick:0000000000000000 $t
     /tmp/cclVzO8U.s:2224   .text.xTaskIncrementTick:0000000000000000 xTaskIncrementTick
     /tmp/cclVzO8U.s:2486   .text.xTaskIncrementTick:00000000000000ec $d
     /tmp/cclVzO8U.s:2501   .text.xTaskResumeAll:0000000000000000 $t
     /tmp/cclVzO8U.s:2508   .text.xTaskResumeAll:0000000000000000 xTaskResumeAll
     /tmp/cclVzO8U.s:2748   .text.xTaskResumeAll:00000000000000d8 $d
     /tmp/cclVzO8U.s:2761   .text.vTaskDelay:0000000000000000 $t
     /tmp/cclVzO8U.s:2768   .text.vTaskDelay:0000000000000000 vTaskDelay
     /tmp/cclVzO8U.s:2860   .text.vTaskDelay:0000000000000044 $d
     /tmp/cclVzO8U.s:2866   .text.prvCheckTasksWaitingTermination:0000000000000000 $t
     /tmp/cclVzO8U.s:2872   .text.prvCheckTasksWaitingTermination:0000000000000000 prvCheckTasksWaitingTermination
     /tmp/cclVzO8U.s:2973   .text.prvCheckTasksWaitingTermination:0000000000000050 $d
     /tmp/cclVzO8U.s:2980   .text.prvIdleTask:0000000000000000 $t
     /tmp/cclVzO8U.s:3034   .text.prvIdleTask:0000000000000020 $d
     /tmp/cclVzO8U.s:3040   .text.vTaskSwitchContext:0000000000000000 $t
     /tmp/cclVzO8U.s:3047   .text.vTaskSwitchContext:0000000000000000 vTaskSwitchContext
     /tmp/cclVzO8U.s:3205   .text.vTaskSwitchContext:0000000000000084 $d
     /tmp/cclVzO8U.s:3216   .text.vTaskSuspend:0000000000000000 $t
     /tmp/cclVzO8U.s:3223   .text.vTaskSuspend:0000000000000000 vTaskSuspend
     /tmp/cclVzO8U.s:3413   .text.vTaskSuspend:00000000000000b8 $d
     /tmp/cclVzO8U.s:3425   .text.vTaskPlaceOnEventList:0000000000000000 $t
     /tmp/cclVzO8U.s:3432   .text.vTaskPlaceOnEventList:0000000000000000 vTaskPlaceOnEventList
     /tmp/cclVzO8U.s:3499   .text.vTaskPlaceOnEventList:000000000000002c $d
     /tmp/cclVzO8U.s:3504   .text.vTaskPlaceOnUnorderedEventList:0000000000000000 $t
     /tmp/cclVzO8U.s:3511   .text.vTaskPlaceOnUnorderedEventList:0000000000000000 vTaskPlaceOnUnorderedEventList
     /tmp/cclVzO8U.s:3623   .text.vTaskPlaceOnUnorderedEventList:0000000000000054 $d
     /tmp/cclVzO8U.s:3629   .text.xTaskRemoveFromEventList:0000000000000000 $t
     /tmp/cclVzO8U.s:3636   .text.xTaskRemoveFromEventList:0000000000000000 xTaskRemoveFromEventList
     /tmp/cclVzO8U.s:3767   .text.xTaskRemoveFromEventList:0000000000000074 $d
     /tmp/cclVzO8U.s:3777   .text.xTaskRemoveFromUnorderedEventList:0000000000000000 $t
     /tmp/cclVzO8U.s:3784   .text.xTaskRemoveFromUnorderedEventList:0000000000000000 xTaskRemoveFromUnorderedEventList
     /tmp/cclVzO8U.s:3931   .text.xTaskRemoveFromUnorderedEventList:0000000000000078 $d
     /tmp/cclVzO8U.s:3940   .text.vTaskSetTimeOutState:0000000000000000 $t
     /tmp/cclVzO8U.s:3947   .text.vTaskSetTimeOutState:0000000000000000 vTaskSetTimeOutState
     /tmp/cclVzO8U.s:3999   .text.vTaskSetTimeOutState:0000000000000024 $d
     /tmp/cclVzO8U.s:4005   .text.xTaskCheckForTimeOut:0000000000000000 $t
     /tmp/cclVzO8U.s:4012   .text.xTaskCheckForTimeOut:0000000000000000 xTaskCheckForTimeOut
     /tmp/cclVzO8U.s:4178   .text.xTaskCheckForTimeOut:0000000000000078 $d
     /tmp/cclVzO8U.s:4185   .text.vTaskMissedYield:0000000000000000 $t
     /tmp/cclVzO8U.s:4192   .text.vTaskMissedYield:0000000000000000 vTaskMissedYield
     /tmp/cclVzO8U.s:4209   .text.vTaskMissedYield:0000000000000008 $d
     /tmp/cclVzO8U.s:4214   .text.xTaskGetCurrentTaskHandle:0000000000000000 $t
     /tmp/cclVzO8U.s:4221   .text.xTaskGetCurrentTaskHandle:0000000000000000 xTaskGetCurrentTaskHandle
     /tmp/cclVzO8U.s:4240   .text.xTaskGetCurrentTaskHandle:0000000000000008 $d
     /tmp/cclVzO8U.s:4245   .text.xTaskGetSchedulerState:0000000000000000 $t
     /tmp/cclVzO8U.s:4252   .text.xTaskGetSchedulerState:0000000000000000 xTaskGetSchedulerState
     /tmp/cclVzO8U.s:4290   .text.xTaskGetSchedulerState:0000000000000018 $d
     /tmp/cclVzO8U.s:4296   .text.vTaskPriorityInherit:0000000000000000 $t
     /tmp/cclVzO8U.s:4303   .text.vTaskPriorityInherit:0000000000000000 vTaskPriorityInherit
     /tmp/cclVzO8U.s:4439   .text.vTaskPriorityInherit:0000000000000094 $d
     /tmp/cclVzO8U.s:4446   .text.xTaskPriorityDisinherit:0000000000000000 $t
ARM GAS  /tmp/cclVzO8U.s 			page 224


     /tmp/cclVzO8U.s:4453   .text.xTaskPriorityDisinherit:0000000000000000 xTaskPriorityDisinherit
     /tmp/cclVzO8U.s:4646   .text.xTaskPriorityDisinherit:00000000000000a8 $d
     /tmp/cclVzO8U.s:4653   .text.uxTaskResetEventItemValue:0000000000000000 $t
     /tmp/cclVzO8U.s:4660   .text.uxTaskResetEventItemValue:0000000000000000 uxTaskResetEventItemValue
     /tmp/cclVzO8U.s:4687   .text.uxTaskResetEventItemValue:0000000000000014 $d
     /tmp/cclVzO8U.s:4692   .text.pvTaskIncrementMutexHeldCount:0000000000000000 $t
     /tmp/cclVzO8U.s:4699   .text.pvTaskIncrementMutexHeldCount:0000000000000000 pvTaskIncrementMutexHeldCount
     /tmp/cclVzO8U.s:4730   .text.pvTaskIncrementMutexHeldCount:0000000000000018 $d
     /tmp/cclVzO8U.s:4735   .text.ulTaskNotifyTake:0000000000000000 $t
     /tmp/cclVzO8U.s:4742   .text.ulTaskNotifyTake:0000000000000000 ulTaskNotifyTake
     /tmp/cclVzO8U.s:4864   .text.ulTaskNotifyTake:0000000000000070 $d
     /tmp/cclVzO8U.s:4870   .text.xTaskNotifyWait:0000000000000000 $t
     /tmp/cclVzO8U.s:4877   .text.xTaskNotifyWait:0000000000000000 xTaskNotifyWait
     /tmp/cclVzO8U.s:5017   .text.xTaskNotifyWait:0000000000000090 $d
     /tmp/cclVzO8U.s:5023   .text.xTaskGenericNotify:0000000000000000 $t
     /tmp/cclVzO8U.s:5030   .text.xTaskGenericNotify:0000000000000000 xTaskGenericNotify
     /tmp/cclVzO8U.s:5087   .text.xTaskGenericNotify:000000000000002c $d
     /tmp/cclVzO8U.s:5092   .text.xTaskGenericNotify:0000000000000030 $t
     /tmp/cclVzO8U.s:5275   .text.xTaskGenericNotify:00000000000000d4 $d
     /tmp/cclVzO8U.s:5283   .text.xTaskGenericNotifyFromISR:0000000000000000 $t
     /tmp/cclVzO8U.s:5290   .text.xTaskGenericNotifyFromISR:0000000000000000 xTaskGenericNotifyFromISR
     /tmp/cclVzO8U.s:5374   .text.xTaskGenericNotifyFromISR:000000000000004a $d
     /tmp/cclVzO8U.s:5379   .text.xTaskGenericNotifyFromISR:000000000000004e $t
     /tmp/cclVzO8U.s:5589   .text.xTaskGenericNotifyFromISR:0000000000000104 $d
     /tmp/cclVzO8U.s:5599   .text.vTaskNotifyGiveFromISR:0000000000000000 $t
     /tmp/cclVzO8U.s:5606   .text.vTaskNotifyGiveFromISR:0000000000000000 vTaskNotifyGiveFromISR
     /tmp/cclVzO8U.s:5826   .text.vTaskNotifyGiveFromISR:00000000000000b8 $d
     /tmp/cclVzO8U.s:5836   .text.xTaskNotifyStateClear:0000000000000000 $t
     /tmp/cclVzO8U.s:5843   .text.xTaskNotifyStateClear:0000000000000000 xTaskNotifyStateClear
     /tmp/cclVzO8U.s:5909   .text.xTaskNotifyStateClear:0000000000000030 $d
     /tmp/cclVzO8U.s:5919   .bss.pxCurrentTCB:0000000000000000 pxCurrentTCB
     /tmp/cclVzO8U.s:5915   .bss.pxCurrentTCB:0000000000000000 $d
     /tmp/cclVzO8U.s:5922   .bss.pxDelayedTaskList:0000000000000000 $d
     /tmp/cclVzO8U.s:5926   .bss.pxDelayedTaskList:0000000000000000 pxDelayedTaskList
     /tmp/cclVzO8U.s:5929   .bss.pxOverflowDelayedTaskList:0000000000000000 $d
     /tmp/cclVzO8U.s:5933   .bss.pxOverflowDelayedTaskList:0000000000000000 pxOverflowDelayedTaskList
     /tmp/cclVzO8U.s:5936   .bss.pxReadyTasksLists:0000000000000000 $d
     /tmp/cclVzO8U.s:5940   .bss.pxReadyTasksLists:0000000000000000 pxReadyTasksLists
     /tmp/cclVzO8U.s:5943   .bss.uxCurrentNumberOfTasks:0000000000000000 $d
     /tmp/cclVzO8U.s:5947   .bss.uxCurrentNumberOfTasks:0000000000000000 uxCurrentNumberOfTasks
     /tmp/cclVzO8U.s:5950   .bss.uxDeletedTasksWaitingCleanUp:0000000000000000 $d
     /tmp/cclVzO8U.s:5954   .bss.uxDeletedTasksWaitingCleanUp:0000000000000000 uxDeletedTasksWaitingCleanUp
     /tmp/cclVzO8U.s:5957   .bss.uxPendedTicks:0000000000000000 $d
     /tmp/cclVzO8U.s:5961   .bss.uxPendedTicks:0000000000000000 uxPendedTicks
     /tmp/cclVzO8U.s:5964   .bss.uxSchedulerSuspended:0000000000000000 $d
     /tmp/cclVzO8U.s:5968   .bss.uxSchedulerSuspended:0000000000000000 uxSchedulerSuspended
     /tmp/cclVzO8U.s:5971   .bss.uxTaskNumber:0000000000000000 $d
     /tmp/cclVzO8U.s:5975   .bss.uxTaskNumber:0000000000000000 uxTaskNumber
     /tmp/cclVzO8U.s:5978   .bss.uxTopReadyPriority:0000000000000000 $d
     /tmp/cclVzO8U.s:5982   .bss.uxTopReadyPriority:0000000000000000 uxTopReadyPriority
     /tmp/cclVzO8U.s:5985   .bss.xDelayedTaskList1:0000000000000000 $d
     /tmp/cclVzO8U.s:5989   .bss.xDelayedTaskList1:0000000000000000 xDelayedTaskList1
     /tmp/cclVzO8U.s:5992   .bss.xDelayedTaskList2:0000000000000000 $d
     /tmp/cclVzO8U.s:5996   .bss.xDelayedTaskList2:0000000000000000 xDelayedTaskList2
     /tmp/cclVzO8U.s:5999   .bss.xIdleTaskHandle:0000000000000000 $d
     /tmp/cclVzO8U.s:6003   .bss.xIdleTaskHandle:0000000000000000 xIdleTaskHandle
     /tmp/cclVzO8U.s:6006   .bss.xNextTaskUnblockTime:0000000000000000 $d
ARM GAS  /tmp/cclVzO8U.s 			page 225


     /tmp/cclVzO8U.s:6010   .bss.xNextTaskUnblockTime:0000000000000000 xNextTaskUnblockTime
     /tmp/cclVzO8U.s:6013   .bss.xNumOfOverflows:0000000000000000 $d
     /tmp/cclVzO8U.s:6017   .bss.xNumOfOverflows:0000000000000000 xNumOfOverflows
     /tmp/cclVzO8U.s:6020   .bss.xPendingReadyList:0000000000000000 $d
     /tmp/cclVzO8U.s:6024   .bss.xPendingReadyList:0000000000000000 xPendingReadyList
     /tmp/cclVzO8U.s:6027   .bss.xSchedulerRunning:0000000000000000 $d
     /tmp/cclVzO8U.s:6031   .bss.xSchedulerRunning:0000000000000000 xSchedulerRunning
     /tmp/cclVzO8U.s:6034   .bss.xSuspendedTaskList:0000000000000000 $d
     /tmp/cclVzO8U.s:6038   .bss.xSuspendedTaskList:0000000000000000 xSuspendedTaskList
     /tmp/cclVzO8U.s:6041   .bss.xTasksWaitingTermination:0000000000000000 $d
     /tmp/cclVzO8U.s:6045   .bss.xTasksWaitingTermination:0000000000000000 xTasksWaitingTermination
     /tmp/cclVzO8U.s:6048   .bss.xTickCount:0000000000000000 $d
     /tmp/cclVzO8U.s:6052   .bss.xTickCount:0000000000000000 xTickCount
     /tmp/cclVzO8U.s:6055   .bss.xYieldPending:0000000000000000 $d
     /tmp/cclVzO8U.s:6059   .bss.xYieldPending:0000000000000000 xYieldPending
     /tmp/cclVzO8U.s:6062   .rodata.vTaskStartScheduler.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
vPortFree
vListInitialiseItem
pxPortInitialiseStack
vListInitialise
vPortEnterCritical
vListInsertEnd
vPortExitCritical
uxListRemove
vListInsert
pvPortMalloc
vPortValidateInterruptPriority
xPortStartScheduler
vPortEndScheduler
